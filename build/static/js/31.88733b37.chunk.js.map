{"version":3,"sources":["components/createusers.js","components/EditUser.js","pages/Users.js","api/axios.js"],"names":["CreateUserModal","_ref","isOpen","onClose","onUserCreated","errors","setErrors","useState","selectRef","useRef","customStyles","control","provided","_objectSpread","minHeight","borderRadius","borderColor","boxShadow","multiValue","styles","backgroundColor","multiValueLabel","color","menu","zIndex","menuList","maxHeight","overflowY","menuPortal","base","formData","setFormData","first_name","last_name","username","email","password","precedence_level","custom_permissions","permissionsList","setPermissionsList","isSubmitting","setIsSubmitting","error","setError","React","useEffect","async","response","get","err","console","fetchPermissionData","options","map","perm","value","code","label","description","handleChange","e","name","target","prev","handleSubmit","preventDefault","precedence","parseInt","isNaN","payload","post","toast","success","data","submit","log","createElement","Modal","style","maxWidth","ModalHeader","ModalBody","className","onSubmit","Label","Input","onChange","required","type","min","max","Select","ref","isMulti","filter","opt","includes","selectedOptions","selectedValues","option","placeholder","menuPortalTarget","document","body","fetch","ModalFooter","Button","layout","onClick","disabled","EditUserModal","onUserUpdated","userData","resetForm","Array","isArray","trim","put","concat","id","UserManagement","users","setUsers","zones","setZones","isLoading","setIsLoading","refreshTrigger","setRefreshTrigger","isEditModalOpen","setIsEditModalOpen","selectedUser","setSelectedUser","isCreateModalOpen","setIsCreateModalOpen","fetchData","usersRes","zonesRes","Promise","all","handleDelete","window","confirm","_delete","userId","user","handleEdit","handleCreate","fontSize","innerWidth","padding","AiOutlinePlusCircle","Fragment","TableContainer","Table","TableHeader","TableCell","TableBody","length","TableRow","colSpan","key","size","aria-label","AiOutlineEdit","AiOutlineDelete","index","handleCreateModalClose","handleMemberCreated","BASE_URL","axiosInstance","axios","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","reject","status","clear","location","href","url","params","then","res","patch","delete","downloadBlob","filename","responseType","blob","Blob","blobUrl","URL","createObjectURL","link","setAttribute","appendChild","click","remove","revokeObjectURL","uploadFormData"],"mappings":"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","file":"static/js/31.88733b37.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button, Input, Label } from '@windmill/react-ui';\r\nimport { post, get } from '../api/axios';\r\nimport toast from 'react-hot-toast';\r\nimport Select from 'react-select';\r\n\r\nconst CreateUserModal = ({ isOpen, onClose, onUserCreated }) => {\r\n    const [errors, setErrors] = useState({});\r\n    const selectRef = useRef();\r\n\r\n    const customStyles = {\r\n        control: (provided) => ({\r\n            ...provided,\r\n            minHeight: '58px',\r\n            borderRadius: '0.375rem',\r\n            borderColor: '#d1d5db',\r\n            boxShadow: 'none',\r\n        }),\r\n        multiValue: (styles) => ({\r\n            ...styles,\r\n            backgroundColor: '#e5e7eb',\r\n        }),\r\n        multiValueLabel: (styles) => ({\r\n            ...styles,\r\n            color: '#1A1C23',\r\n        }),\r\n        menu: (provided) => ({\r\n            ...provided,\r\n            zIndex: 9999,\r\n        }),\r\n        menuList: (provided) => ({\r\n            ...provided,\r\n            maxHeight: '200px',\r\n            overflowY: 'auto',\r\n        }),\r\n        menuPortal: (base) => ({\r\n            ...base,\r\n            zIndex: 9999,\r\n        }),\r\n    };\r\n\r\n\r\n    const [formData, setFormData] = useState({\r\n        first_name: '',\r\n        last_name: '',\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        precedence_level: '', // instead of null\r\n        custom_permissions: [],\r\n    });\r\n\r\n    const [permissionsList, setPermissionsList] = useState([]);\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const resetForm = () => {\r\n        setFormData({\r\n            first_name: '',\r\n            last_name: '',\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            precedence_level: '', // instead of null\r\n            custom_permissions: [],\r\n        });\r\n        setErrors({});\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (!isOpen) {\r\n            resetForm();\r\n        }\r\n\r\n        const fetchPermissionData = async () => {\r\n            try {\r\n                const response = await get('/users/seed-permissions/');\r\n                setPermissionsList(response || []);\r\n\r\n            } catch (err) {\r\n                console.error('Error fetching permissions data:', err);\r\n                setError('Failed to load permissions data');\r\n            } finally {\r\n            }\r\n        };\r\n\r\n        fetchPermissionData();\r\n    }, [isOpen]);\r\n\r\n    const options = permissionsList.map(perm => ({\r\n        value: perm.code,\r\n        label: perm.description || perm.code,\r\n    }));\r\n    const handlePermissionsChange = (selectedOptions) => {\r\n        const selectedValues = selectedOptions ? selectedOptions.map(option => option.value) : [];\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            custom_permissions: selectedValues,\r\n        }));\r\n    };\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData((prev) => ({\r\n            ...prev,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setIsSubmitting(true);\r\n        setError(null);\r\n\r\n        const precedence = parseInt(formData.precedence_level, 10);\r\n        if (isNaN(precedence) || precedence < 1 || precedence > 5) {\r\n            setError('Precedence level must be between 1 and 5.');\r\n            setIsSubmitting(false);\r\n            return;\r\n        }\r\n        try {\r\n            const payload = {\r\n                ...formData,\r\n            };\r\n\r\n            await post('/users/create/', payload);\r\n            toast.success('User created successfully!');\r\n            onUserCreated();\r\n            onClose();\r\n\r\n        }\r\n        catch (error) {\r\n            console.error('Error creating request:', error);\r\n            if (error.response && error.response.data) {\r\n                // Display backend validation errors\r\n                setErrors({\r\n                    ...error.response.data.username,\r\n                    ...errors,\r\n                    submit: error.response.data.username,\r\n                });\r\n                console.log(error.response.data.username)\r\n            } else {\r\n                setErrors({ submit: 'Failed to create request. Please try again.' });\r\n            }\r\n        }\r\n        finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal isOpen={isOpen} onClose={onClose} style={{ maxWidth: '500px' }}>\r\n            <ModalHeader>Create New User</ModalHeader>\r\n            <ModalBody>\r\n                {error && (\r\n                    <div className=\"mb-4 text-sm text-red-600\">{error}</div>\r\n                )}\r\n                <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n                    {/* Use grid for pairs */}\r\n                    <div className=\"grid grid-cols-2 gap-4\">\r\n                        <Label>\r\n                            <span>First Name</span>\r\n                            <Input\r\n                                name=\"first_name\"\r\n                                value={formData.first_name}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                        </Label>\r\n                        <Label>\r\n                            <span>Last Name</span>\r\n                            <Input\r\n                                name=\"last_name\"\r\n                                value={formData.last_name}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                        </Label>\r\n                    </div>\r\n\r\n                    <div className=\"grid grid-cols-2 gap-4\">\r\n                        <Label>\r\n                            <span>ITS</span>\r\n                            <Input\r\n                                name=\"username\"\r\n                                value={formData.username}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                        </Label>\r\n                        <Label>\r\n                            <span>Email</span>\r\n                            <Input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                value={formData.email}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                        </Label>\r\n                    </div>\r\n\r\n                    {/* Single full width fields below */}\r\n                    <Label>\r\n                        <span>Password</span>\r\n                        <Input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            value={formData.password}\r\n                            onChange={handleChange}\r\n                            required\r\n                        />\r\n                    </Label>\r\n\r\n                    <Label>\r\n                        <span>Precedence Level (1-5)</span>\r\n                        <Input\r\n                            type=\"number\"\r\n                            name=\"precedence_level\"\r\n                            value={formData.precedence_level}\r\n                            onChange={handleChange}\r\n                            required\r\n                            min=\"1\"\r\n                            max=\"5\"\r\n                        />\r\n                    </Label>\r\n\r\n                    <Label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                        Custom Permissions\r\n                        <Select\r\n                            name=\"custom_permissions\"\r\n                            ref={selectRef}\r\n                            isMulti\r\n                            options={options}\r\n                            value={options.filter(opt => formData.custom_permissions.includes(opt.value))}\r\n                            onChange={handlePermissionsChange}\r\n                            placeholder=\"Select permissions...\"\r\n                            menuPortalTarget={document.body}\r\n                            styles={customStyles}\r\n                        />\r\n                    </Label>\r\n                    {errors.fetch && (\r\n                        <div className=\"mb-4\">\r\n                            <p className=\"text-sm text-red-600\">{errors.fetch}</p>\r\n                        </div>\r\n                    )}\r\n                    {errors.submit && (\r\n                        <div className=\"mb-4\">\r\n                            <p className=\"text-sm text-red-600\">{errors.submit}</p>\r\n                        </div>\r\n                    )}\r\n                </form>\r\n            </ModalBody>\r\n\r\n            <ModalFooter>\r\n                <Button layout=\"outline\" onClick={onClose}>Cancel</Button>\r\n                <Button onClick={handleSubmit} disabled={isSubmitting}>\r\n                    {isSubmitting ? 'Creating...' : 'Create'}\r\n                </Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n\r\n    );\r\n};\r\n\r\nexport default CreateUserModal;\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button, Input, Label } from '@windmill/react-ui';\r\nimport { get, put } from '../api/axios';\r\nimport toast from 'react-hot-toast';\r\nimport Select from 'react-select';\r\n\r\nconst EditUserModal = ({ isOpen, onClose, onUserUpdated, userData }) => {\r\n    const [errors, setErrors] = useState({});\r\n    const selectRef = useRef();\r\n\r\n\r\n    const customStyles = {\r\n        control: (provided) => ({\r\n            ...provided,\r\n            minHeight: '58px',\r\n            borderRadius: '0.375rem',\r\n            borderColor: '#d1d5db',\r\n            boxShadow: 'none',\r\n        }),\r\n        multiValue: (styles) => ({\r\n            ...styles,\r\n            backgroundColor: '#e5e7eb',\r\n        }),\r\n        multiValueLabel: (styles) => ({\r\n            ...styles,\r\n            color: '#1A1C23',\r\n        }),\r\n        menu: (provided) => ({\r\n            ...provided,\r\n            zIndex: 9999,\r\n        }),\r\n        menuList: (provided) => ({\r\n            ...provided,\r\n            maxHeight: '200px',\r\n            overflowY: 'auto',\r\n        }),\r\n        menuPortal: (base) => ({\r\n            ...base,\r\n            zIndex: 9999,\r\n        }),\r\n    };\r\n\r\n\r\n\r\n\r\n    const [formData, setFormData] = useState({\r\n        first_name: '',\r\n        last_name: '',\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        precedence_level: '',\r\n        custom_permissions: [],\r\n    });\r\n\r\n    const [permissionsList, setPermissionsList] = useState([]);\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    // Reset and populate form when modal opens or userData changes\r\n    useEffect(() => {\r\n        if (!isOpen) {\r\n            resetForm();\r\n            return;\r\n        }\r\n        if (userData) {\r\n            setFormData({\r\n                first_name: userData.first_name || '',\r\n                last_name: userData.last_name || '',\r\n                username: userData.username || '',\r\n                email: userData.email || '',\r\n                password: '',\r\n                precedence_level: userData.precedence_level || '',\r\n                custom_permissions: Array.isArray(userData.custom_permissions) ? userData.custom_permissions : [],\r\n            });\r\n        }\r\n\r\n        const fetchPermissionData = async () => {\r\n            try {\r\n                const response = await get('/users/seed-permissions/');\r\n                setPermissionsList(response || []);\r\n            } catch (err) {\r\n                console.error('Error fetching permissions data:', err);\r\n                setError('Failed to load permissions data');\r\n            }\r\n        };\r\n\r\n        fetchPermissionData();\r\n    }, [isOpen, userData]);\r\n\r\n    const resetForm = () => {\r\n        setFormData({\r\n            first_name: '',\r\n            last_name: '',\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            precedence_level: '',\r\n            custom_permissions: [],\r\n        });\r\n        setErrors({});\r\n        setError(null);\r\n    };\r\n\r\n    const handlePermissionsChange = (selectedOptions) => {\r\n        const selectedValues = selectedOptions ? selectedOptions.map(option => option.value) : [];\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            custom_permissions: selectedValues,\r\n        }));\r\n    };\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: value,\r\n        }));\r\n    };\r\n    const options = permissionsList.map(perm => ({\r\n        value: perm.code,\r\n        label: perm.description || perm.code,\r\n    }));\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setIsSubmitting(true);\r\n        setError(null);\r\n\r\n        const precedence = parseInt(formData.precedence_level, 10);\r\n        if (isNaN(precedence) || precedence < 1 || precedence > 5) {\r\n            setError('Precedence level must be between 1 and 5.');\r\n            setIsSubmitting(false);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const payload = {\r\n                first_name: formData.first_name,\r\n                last_name: formData.last_name,\r\n                username: formData.username,\r\n                email: formData.email,\r\n                precedence_level: precedence,\r\n                custom_permissions: formData.custom_permissions,\r\n            };\r\n            if (formData.password.trim() !== '') {\r\n                payload.password = formData.password;\r\n            }\r\n\r\n            await put(`/users/update/${userData.id}/`, payload);\r\n            toast.success('User updated successfully!');\r\n            onUserUpdated();\r\n            onClose();\r\n        } catch (err) {\r\n            console.error(err);\r\n            setError('Failed to update user.');\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <Modal isOpen={isOpen} onClose={onClose} style={{ maxWidth: '500px' }}>\r\n            <ModalHeader>Edit User {formData.username}</ModalHeader>\r\n            <ModalBody>\r\n                {error && (\r\n                    <div className=\"mb-4 text-sm text-red-600\">{error}</div>\r\n                )}\r\n                <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n                    {/* Two inputs per row */}\r\n                    <div className=\"grid grid-cols-2 gap-4\">\r\n                        <Label>\r\n                            <span>First Name</span>\r\n                            <Input\r\n                                name=\"first_name\"\r\n                                value={formData.first_name}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                        </Label>\r\n                        <Label>\r\n                            <span>Last Name</span>\r\n                            <Input\r\n                                name=\"last_name\"\r\n                                value={formData.last_name}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                        </Label>\r\n                    </div>\r\n\r\n                    <div className=\"grid grid-cols-2 gap-4\">\r\n                        <Label>\r\n                            <span>ITS</span>\r\n                            <Input\r\n                                name=\"username\"\r\n                                value={formData.username}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                        </Label>\r\n                        <Label>\r\n                            <span>Email</span>\r\n                            <Input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                value={formData.email}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                        </Label>\r\n                    </div>\r\n\r\n                    {/* Single full-width fields */}\r\n                    <Label>\r\n                        <span>Password (leave empty to keep unchanged)</span>\r\n                        <Input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            value={formData.password}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Label>\r\n\r\n                    <Label>\r\n                        <span>Precedence Level (1-5)</span>\r\n                        <Input\r\n                            type=\"number\"\r\n                            min=\"1\"\r\n                            max=\"5\"\r\n                            name=\"precedence_level\"\r\n                            value={formData.precedence_level}\r\n                            onChange={handleChange}\r\n                            required\r\n                        />\r\n                    </Label>\r\n\r\n                    <Label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                        Custom Permissions \r\n                        <Select\r\n                            name=\"custom_permissions\"\r\n                            ref={selectRef}\r\n                            isMulti\r\n                            options={options}\r\n                            value={options.filter(opt => formData.custom_permissions.includes(opt.value))}\r\n                            onChange={handlePermissionsChange}\r\n                            placeholder=\"Select permissions...\"\r\n                                                          menuPortalTarget={document.body}\r\n  styles={customStyles}\r\n                        />\r\n                    </Label>\r\n\r\n\r\n\r\n                </form>\r\n            </ModalBody>\r\n\r\n            <ModalFooter>\r\n                <Button layout=\"outline\" onClick={onClose}>Cancel</Button>\r\n                <Button onClick={handleSubmit} disabled={isSubmitting}>\r\n                    {isSubmitting ? 'Updating...' : 'Update'}\r\n                </Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n\r\n    );\r\n};\r\n\r\nexport default EditUserModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { get, _delete } from \"../api/axios\";\r\nimport {\r\n  Table,\r\n  TableHeader,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  TableContainer,\r\n  Button,\r\n} from \"@windmill/react-ui\";\r\nimport toast from \"react-hot-toast\";\r\nimport logo from '../assets/img/mainLogo.png';\r\n\r\nimport {\r\n  AiOutlineEdit,\r\n  AiOutlineDelete,\r\n  AiOutlinePlusCircle,\r\n} from \"react-icons/ai\";\r\nimport CreateUserModal from \"../components/createusers\";\r\nimport EditUserModal from \"../components/EditUser\";\r\n\r\nconst UserManagement = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [zones, setZones] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [refreshTrigger, setRefreshTrigger] = useState(0);\r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n\r\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [refreshTrigger]); // 👈 This is the key\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const [usersRes, zonesRes] = await Promise.all([\r\n        get(\"/users/read/\"),\r\n        // get(\"/zone/list/\"),\r\n      ]);\r\n      setUsers(Array.isArray(usersRes) ? usersRes : []);\r\n      setZones(Array.isArray(zonesRes) ? zonesRes : []);\r\n    } catch (err) {\r\n      console.error(\"Error fetching users or zones:\", err);\r\n      setError(\"Failed to fetch data.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (userId) => {\r\n    try {\r\n      const confirmDelete = window.confirm(\r\n        \"Are you sure you want to delete this User?\"\r\n      );\r\n\r\n      if (confirmDelete) {\r\n        await _delete(`/users/delete/${userId}/`);\r\n\r\n        setUsers((prev) => prev.filter((user) => user.id !== userId));\r\n        toast.success(\"User deleted successfully\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting User:\", error);\r\n      toast.error(\"Failed to delete User. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const handleEdit = (user) => {\r\n    setSelectedUser(user);\r\n    setIsEditModalOpen(true);\r\n  };\r\n\r\n  const handleCreate = () => {\r\n    setIsCreateModalOpen(true);\r\n  };\r\n\r\n  const handleMemberCreated = () => {\r\n    setIsCreateModalOpen(false);\r\n\r\n    setRefreshTrigger((prev) => prev + 1); // 🔁 Triggers the useEffect to call fetchData\r\n  };\r\n  const handleCreateModalClose = () => {\r\n    setIsCreateModalOpen(false);\r\n  };\r\n\r\n  const renderUserZones = (user) => {\r\n    return Array.isArray(user.zones) && user.zones.length > 0\r\n      ? user.zones\r\n        .map((zid) => zones.find((z) => z.id === zid)?.name || \"Unknown\")\r\n        .join(\", \")\r\n      : \"—\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative w-full px-4 py-6\">\r\n\r\n      {/* Content Overlay */}\r\n      <div className=\"relative z-10\">\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <h2 className=\"text-2xl font-semibold  dark:text-white\">\r\n            User Management\r\n          </h2>\r\n\r\n          <button\r\n            onClick={handleCreate}\r\n            className=\"flex items-center bg-purple-600 text-white rounded-lg\"\r\n            style={{\r\n              fontSize: window.innerWidth < 768 ? \"0.875rem\" : \"1rem\",\r\n              padding: window.innerWidth < 768 ? \"0.5rem 1rem\" : \"0.75rem 1rem\",\r\n            }}\r\n          >\r\n            <AiOutlinePlusCircle\r\n              className={`mr-1 ${window.innerWidth < 768 ? \"w-3 h-3\" : \"w-4 h-4\"\r\n                }`}\r\n            />\r\n            Create User\r\n          </button>\r\n        </div>\r\n\r\n        {isLoading ? (\r\n          <p className=\"text-gray-600\">Loading users...</p>\r\n        ) : error ? (\r\n          <p className=\"text-red-500\">{error}</p>\r\n        ) : (\r\n           <>\r\n          <TableContainer className=\"hidden md:block mb-8\">\r\n            <Table>\r\n              <TableHeader>\r\n                <tr>\r\n                  <TableCell>Name</TableCell>\r\n                  <TableCell>ITS</TableCell>\r\n                  <TableCell>Actions</TableCell>\r\n                </tr>\r\n              </TableHeader>\r\n              <TableBody>\r\n                {Array.isArray(users) && users.length === 0 ? (\r\n                  <TableRow>\r\n                    <TableCell colSpan=\"4\" className=\"text-center text-gray-500\">\r\n                      No users found.\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ) : (\r\n                  users.map((user) => (\r\n                    <TableRow key={user.id}>\r\n                      <TableCell>{user.first_name} {user.last_name}</TableCell>\r\n                      <TableCell>{user.username}</TableCell>\r\n                      <TableCell>\r\n                        <div className=\"flex items-center space-x-4\">\r\n                          <Button\r\n                            layout=\"link\"\r\n                            size=\"icon\"\r\n                            aria-label=\"Edit\"\r\n                            onClick={() => handleEdit(user)}\r\n                          >\r\n                            <AiOutlineEdit className=\"w-5 h-5\" />\r\n                          </Button>\r\n                          <Button\r\n                            layout=\"link\"\r\n                            size=\"icon\"\r\n                            aria-label=\"Delete\"\r\n                            onClick={() => handleDelete(user.id)}\r\n                          >\r\n                            <AiOutlineDelete className=\"w-5 h-5\" />\r\n                          </Button>\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n\r\n\r\n                    <div className=\"md:hidden space-y-3\">\r\n                      {users.length === 0 ? (\r\n                        <div className=\"text-center py-8\">\r\n                          <p className=\"text-gray-700 dark:text-gray-300\">No city items found</p>\r\n                        </div>\r\n                      ) : (\r\n                        users.map((user, index) => (\r\n                          <div \r\n                            key={user.id} \r\n                            className=\"bg-white dark:bg-gray-800 rounded-lg shadow-md border dark:border-gray-700 p-4\"\r\n                          >\r\n                            <div className=\"flex justify-between items-start\">\r\n                              <div>\r\n                                <div className=\"flex items-center gap-2 mb-2\">\r\n                                  <span className=\"bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-300 text-xs font-medium px-2 py-1 rounded\">\r\n                                    #{user.id }\r\n                                  </span>\r\n                                </div>\r\n                                <h3 className=\"font-medium text-lg dark:text-white\">{user.first_name} {user.last_name}</h3>\r\n<p className=\"font-medium dark:text-white truncate\">{user.username}</p>\r\n\r\n                              </div>\r\n                              <div className=\"flex space-x-2\">\r\n                                <button \r\n                                  onClick={() => handleEdit(user)}\r\n                                  className=\"text-blue-600 hover:bg-blue-50 dark:text-blue-400 dark:hover:bg-blue-900/30 p-1 rounded\"\r\n                                >\r\n                                  <AiOutlineEdit className=\"h-5 w-5\" />\r\n                                </button>\r\n                                <button \r\n                                  onClick={() => handleDelete(user.id)}\r\n                                  className=\"text-red-600 hover:bg-red-50 dark:text-red-400 dark:hover:bg-red-900/30 p-1 rounded\"\r\n                                >\r\n                                  <AiOutlineDelete className=\"h-5 w-5\" />\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        ))\r\n                      )}\r\n                    </div>\r\n           </>\r\n        )} \r\n        {/* Create Member Modal */}\r\n        <CreateUserModal\r\n          isOpen={isCreateModalOpen}\r\n          onClose={handleCreateModalClose}\r\n          onUserCreated={handleMemberCreated}\r\n        />\r\n\r\n        <EditUserModal\r\n          isOpen={isEditModalOpen}\r\n          onClose={() => setIsEditModalOpen(false)}\r\n          onUserUpdated={() => setRefreshTrigger((prev) => prev + 1)}\r\n          userData={selectedUser}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserManagement;\r\n","import axios from \"axios\";\r\n\r\n// let BASE_URL = \"http://35.172.211.35/api\";\r\nlet BASE_URL = \"https://rms-v2.duckdns.org/api\";\r\n\r\n\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n  console.log(\"Running in Production Mode\");\r\n  BASE_URL = \"http://35.172.211.35/api\";\r\n} else {\r\n  // BASE_URL = \"http://localhost:8000/api/v1\";\r\n  console.log(\"Running in Development Mode\");\r\n}\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: BASE_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"accessToken\");\r\n    if (token) {\r\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    // await logErrorToBackend(error);\r\n    if (error.response && error.response.status === 401) {\r\n      localStorage.clear();\r\n      window.location.href = \"/\";\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const get = async (url, params) => {\r\n  return axiosInstance.get(url, { params }).then((res) => res.data);\r\n};\r\n\r\nexport const post = async (url, data) => {\r\n  return axiosInstance.post(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const put = async (url, data) => {\r\n  return axiosInstance.put(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const patch = async (url, data) => {\r\n  return axiosInstance.patch(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const _delete = async (url) => {\r\n  return axiosInstance.delete(url).then((res) => res.data);\r\n};\r\n\r\nexport const downloadBlob = async (url, filename) => {\r\n  try {\r\n    const response = await axiosInstance.get(url, {\r\n      responseType: \"blob\",\r\n    });\r\n\r\n    const blob = new Blob([response.data], { type: \"application/pdf\" });\r\n    const blobUrl = window.URL.createObjectURL(blob);\r\n\r\n    const link = document.createElement(\"a\");\r\n    link.href = blobUrl;\r\n    link.setAttribute(\"download\", filename);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    link.remove();\r\n    window.URL.revokeObjectURL(blobUrl);\r\n  } catch (err) {\r\n    console.error(\"Download failed:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const uploadFormData = async (url, formData) => {\r\n  try {\r\n    const response = await axiosInstance.post(url, formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(\"File upload failed:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport default axiosInstance;\r\n"],"sourceRoot":""}