{"version":3,"sources":["components/CreateCounterModal.js","components/EditCounterModal.js","pages/Counter.js","api/axios.js","components/Typography/PageTitle.js"],"names":["CreateCounterModal","_ref","isOpen","onClose","onCounterCreated","formData","setFormData","useState","name","zone","zones","setZones","isSubmitting","setIsSubmitting","errors","setErrors","useEffect","async","response","get","error","console","toast","fetchZones","handleChange","e","value","target","prevData","_objectSpread","handleSubmit","preventDefault","validateForm","newErrors","trim","Object","keys","length","dataToSubmit","parseInt","post","success","submit","React","createElement","Modal","ModalHeader","ModalBody","onSubmit","className","Label","Input","onChange","placeholder","Select","map","key","id","ModalFooter","Button","onClick","disabled","EditCounterModal","onCounterUpdated","counterData","zonesLoading","setZonesLoading","zone_id","toString","patch","concat","Counter","useHistory","setCounterData","isLoading","setIsLoading","setError","isCreateModalOpen","setIsCreateModalOpen","isEditModalOpen","setIsEditModalOpen","currentCounter","setCurrentCounter","refreshTrigger","setRefreshTrigger","expandedItem","setExpandedItem","err","fetchCounterData","handleEditClick","counter","handleDeleteCounter","window","confirm","_delete","filter","item","toggleExpand","src","logo","alt","style","top","left","position","transform","width","maxWidth","height","opacity","zIndex","PageTitle","handleAddCounter","fontSize","innerWidth","padding","AiOutlinePlusCircle","Fragment","TableContainer","Table","TableHeader","TableCell","TableBody","index","TableRow","zone_name","layout","size","aria-label","AiOutlineEdit","aria-hidden","AiOutlineDelete","AiOutlineUp","AiOutlineDown","handleCreateModalClose","handleCounterCreated","prev","handleEditModalClose","handleCounterUpdated","BASE_URL","log","axiosInstance","axios","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Promise","reject","status","clear","location","href","url","params","then","res","data","put","delete","downloadBlob","filename","responseType","blob","Blob","type","blobUrl","URL","createObjectURL","link","document","setAttribute","body","appendChild","click","remove","revokeObjectURL","uploadFormData","children"],"mappings":"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","file":"static/js/18.07b426a0.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n  Input,\r\n  Label,\r\n  Select\r\n} from '@windmill/react-ui';\r\nimport { post, get } from '../api/axios';\r\nimport toast from 'react-hot-toast';\r\n\r\nfunction CreateCounterModal({ \r\n  isOpen, \r\n  onClose, \r\n  onCounterCreated \r\n}) {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    zone: ''\r\n  });\r\n\r\n  const [zones, setZones] = useState([]);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  // Reset formData when modal opens\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      setFormData({\r\n        name: '',\r\n        zone: ''\r\n      });\r\n      setErrors({}); // Optionally reset errors\r\n    }\r\n  }, [isOpen]);\r\n\r\n  // Fetch zones for the dropdown\r\n  useEffect(() => {\r\n    const fetchZones = async () => {\r\n      try {\r\n        const response = await get('/zone/list/'); // Adjust endpoint if needed\r\n        setZones(response);\r\n      } catch (error) {\r\n        console.error('Error fetching zones:', error);\r\n        toast.error('Failed to load zones');\r\n      }\r\n    };\r\n\r\n    if (isOpen) {\r\n      fetchZones();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prevData => ({\r\n      ...prevData,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    \r\n    if (!formData.name.trim()) {\r\n      newErrors.name = 'Counter name is required';\r\n    }\r\n    if (!formData.zone) {\r\n      newErrors.zone = 'Zone is required';\r\n    }\r\n    \r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsSubmitting(true);\r\n      \r\n      const dataToSubmit = {\r\n        name: formData.name.trim(),\r\n        zone: parseInt(formData.zone) // Assuming zone ID is sent as integer\r\n      };\r\n      \r\n      await post('/counter/', dataToSubmit);\r\n      \r\n      // Show success toast\r\n      toast.success('Counter created successfully');\r\n      \r\n      if (onCounterCreated) {\r\n        onCounterCreated();\r\n      }\r\n      \r\n      onClose();\r\n    } catch (error) {\r\n      console.error('Error creating counter:', error);\r\n      setErrors({ submit: 'Failed to create counter. Please try again.' });\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose}>\r\n      <ModalHeader>Create New Counter</ModalHeader>\r\n      <ModalBody>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"mb-4\">\r\n            <Label>\r\n              <span>Counter Name *</span>\r\n              <Input \r\n                className=\"mt-1\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleChange}\r\n                placeholder=\"Enter counter name\"\r\n              />\r\n              {errors.name && (\r\n                <span className=\"text-xs text-red-600\">{errors.name}</span>\r\n              )}\r\n            </Label>\r\n          </div>\r\n          \r\n          <div className=\"mb-4\">\r\n            <Label>\r\n              <span>Zone *</span>\r\n              <Select\r\n                className=\"mt-1\"\r\n                name=\"zone\"\r\n                value={formData.zone}\r\n                onChange={handleChange}\r\n              >\r\n                <option value=\"\">Select a zone</option>\r\n                {zones.map((zone) => (\r\n                  <option key={zone.id} value={zone.id}>\r\n                    {zone.name}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n              {errors.zone && (\r\n                <span className=\"text-xs text-red-600\">{errors.zone}</span>\r\n              )}\r\n            </Label>\r\n          </div>\r\n          \r\n          {errors.submit && (\r\n            <div className=\"mb-4\">\r\n              <p className=\"text-sm text-red-600\">{errors.submit}</p>\r\n            </div>\r\n          )}\r\n        </form>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <div className=\"flex flex-col space-y-2 sm:space-y-0 sm:space-x-2 sm:flex-row\">\r\n          <Button \r\n            onClick={handleSubmit} \r\n            disabled={isSubmitting}\r\n          >\r\n            {isSubmitting ? 'Creating...' : 'Create Counter'}\r\n          </Button>\r\n        </div>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default CreateCounterModal;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n  Input,\r\n  Label,\r\n  Select\r\n} from '@windmill/react-ui';\r\nimport { patch, get } from '../api/axios';\r\nimport toast from 'react-hot-toast';\r\n\r\nfunction EditCounterModal({ \r\n  isOpen, \r\n  onClose, \r\n  onCounterUpdated, \r\n  counterData \r\n}) {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    zone: ''\r\n  });\r\n\r\n  const [zones, setZones] = useState([]);\r\n  const [zonesLoading, setZonesLoading] = useState(true); \r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  \r\n  useEffect(() => {\r\n    const fetchZones = async () => {\r\n      try {\r\n        setZonesLoading(true); \r\n        const response = await get('/zone/list/');\r\n        setZones(response);\r\n      } catch (error) {\r\n        console.error('Error fetching zones:', error);\r\n        toast.error('Failed to load zones');\r\n      } finally {\r\n        setZonesLoading(false); \r\n      }\r\n    };\r\n\r\n    if (isOpen) {\r\n      fetchZones();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  \r\n  useEffect(() => {\r\n    if (isOpen && counterData) {\r\n      setFormData({\r\n        name: counterData.name || '',\r\n        zone: counterData.zone_id ? counterData.zone_id.toString() : '' \r\n      });\r\n      setErrors({}); \r\n    }\r\n  }, [isOpen, counterData]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prevData => ({\r\n      ...prevData,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    \r\n    if (!formData.name.trim()) {\r\n      newErrors.name = 'Counter name is required';\r\n    }\r\n    if (!formData.zone) {\r\n      newErrors.zone = 'Zone is required';\r\n    }\r\n    \r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsSubmitting(true);\r\n      \r\n      const dataToSubmit = {\r\n        name: formData.name.trim(),\r\n        zone: parseInt(formData.zone) \r\n      };\r\n      \r\n      await patch(`/counter/${counterData.id}/`, dataToSubmit);\r\n      \r\n      toast.success('Counter updated successfully');\r\n      \r\n      if (onCounterUpdated) {\r\n        onCounterUpdated();\r\n      }\r\n      \r\n      onClose();\r\n    } catch (error) {\r\n      console.error('Error updating counter:', error);\r\n      setErrors({ submit: 'Failed to update counter. Please try again.' });\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose}>\r\n      <ModalHeader>Edit Counter</ModalHeader>\r\n      <ModalBody>\r\n        {zonesLoading ? (\r\n          <div className=\"text-center py-4\">\r\n            <p className=\"text-gray-700 dark:text-gray-300\">Loading zones...</p>\r\n          </div>\r\n        ) : zones.length === 0 ? (\r\n          <div className=\"text-center py-4\">\r\n            <p className=\"text-red-600 dark:text-red-400\">No zones available</p>\r\n          </div>\r\n        ) : (\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"mb-4\">\r\n              <Label>\r\n                <span>Counter Name *</span>\r\n                <Input \r\n                  className=\"mt-1\"\r\n                  name=\"name\"\r\n                  value={formData.name}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Enter counter name\"\r\n                />\r\n                {errors.name && (\r\n                  <span className=\"text-xs text-red-600\">{errors.name}</span>\r\n                )}\r\n              </Label>\r\n            </div>\r\n            \r\n            <div className=\"mb-4\">\r\n              <Label>\r\n                <span>Zone *</span>\r\n                <Select\r\n                  className=\"mt-1\"\r\n                  name=\"zone\"\r\n                  value={formData.zone}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">Select a zone</option>\r\n                  {zones.map((zone) => (\r\n                    <option key={zone.id} value={zone.id.toString()}>\r\n                      {zone.name}\r\n                    </option>\r\n                  ))}\r\n                </Select>\r\n                {errors.zone && (\r\n                  <span className=\"text-xs text-red-600\">{errors.zone}</span>\r\n                )}\r\n              </Label>\r\n            </div>\r\n            \r\n            {errors.submit && (\r\n              <div className=\"mb-4\">\r\n                <p className=\"text-sm text-red-600\">{errors.submit}</p>\r\n              </div>\r\n            )}\r\n          </form>\r\n        )}\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <div className=\"flex flex-col space-y-2 sm:space-y-0 sm:space-x-2 sm:flex-row\">\r\n          <Button \r\n            onClick={handleSubmit} \r\n            disabled={isSubmitting || zonesLoading || zones.length === 0} \r\n          >\r\n            {isSubmitting ? 'Updating...' : 'Update Counter'}\r\n          </Button>\r\n        </div>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default EditCounterModal;","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { get, _delete } from '../api/axios';\r\nimport PageTitle from '../components/Typography/PageTitle';\r\nimport {\r\n  Table,\r\n  TableHeader,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  TableContainer,\r\n  Button\r\n} from '@windmill/react-ui';\r\nimport { \r\n  AiOutlinePlusCircle, \r\n  AiOutlineEdit, \r\n  AiOutlineDelete,\r\n  AiOutlineDown,\r\n  AiOutlineUp \r\n} from 'react-icons/ai';\r\nimport CreateCounterModal from '../components/CreateCounterModal';\r\nimport EditCounterModal from '../components/EditCounterModal';\r\nimport toast from 'react-hot-toast';\r\nimport logo from '../assets/img/mainLogo.png';\r\n\r\nfunction Counter() {\r\n  const history = useHistory();\r\n\r\n  const [counterData, setCounterData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n  const [currentCounter, setCurrentCounter] = useState(null);\r\n  const [refreshTrigger, setRefreshTrigger] = useState(0);\r\n  const [expandedItem, setExpandedItem] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchCounterData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await get('/counter/list/');\r\n        setCounterData(response);\r\n      } catch (err) {\r\n        console.error('Error fetching counter data:', err);\r\n        setError('Failed to load counter data');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCounterData();\r\n  }, [refreshTrigger]);\r\n\r\n  const handleAddCounter = () => {\r\n    setIsCreateModalOpen(true);\r\n  };\r\n\r\n  const handleCreateModalClose = () => {\r\n    setIsCreateModalOpen(false);\r\n  };\r\n\r\n  const handleEditClick = (counter) => {\r\n    setCurrentCounter(counter);\r\n    setIsEditModalOpen(true);\r\n    setExpandedItem(null);\r\n  };\r\n\r\n  const handleEditModalClose = () => {\r\n    setIsEditModalOpen(false);\r\n    setCurrentCounter(null);\r\n  };\r\n\r\n  const handleCounterCreated = () => {\r\n    setRefreshTrigger(prev => prev + 1);\r\n  };\r\n\r\n  const handleCounterUpdated = () => {\r\n    setRefreshTrigger(prev => prev + 1);\r\n  };\r\n\r\n  const handleDeleteCounter = async (id) => {\r\n    try {\r\n      const confirmDelete = window.confirm('Are you sure you want to delete this counter?');\r\n\r\n      if (confirmDelete) {\r\n        await _delete(`/counter/${id}/`);\r\n        setCounterData(prevData => prevData.filter(item => item.id !== id));\r\n        toast.success('Counter deleted successfully');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting counter:', error);\r\n      toast.error('Failed to delete counter. Please try again.');\r\n    }\r\n  };\r\n\r\n  const toggleExpand = (id) => {\r\n    setExpandedItem(expandedItem === id ? null : id);\r\n  };\r\n\r\n  return (\r\n <div className=\"relative w-full px-4 py-6\">\r\n        {/* Watermark Logo */}\r\n        <img\r\n          src={logo}\r\n          alt=\"Watermark\"\r\n          className=\"absolute pointer-events-none select-none\"\r\n          style={{\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            position: \"absolute\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            width: \"70vw\",\r\n            maxWidth: \"400px\",\r\n            height: \"auto\",\r\n            opacity: 0.05,\r\n            zIndex: 0,\r\n          }}\r\n        />\r\n        \r\n    \r\n        {/* Content Overlay */}\r\n        <div className=\"relative z-10\">      {/* Header */}\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <PageTitle>Counters</PageTitle>\r\n        <button \r\n          onClick={handleAddCounter} \r\n          className=\"flex items-center bg-purple-600 text-white rounded-lg\"\r\n          style={{\r\n            fontSize: window.innerWidth < 768 ? '0.875rem' : '1rem',\r\n            padding: window.innerWidth < 768 ? '0.5rem 1rem' : '0.75rem 1rem'\r\n          }}\r\n        >\r\n          <AiOutlinePlusCircle \r\n            className={`mr-1 ${window.innerWidth < 768 ? 'w-3 h-3' : 'w-4 h-4'}`} \r\n          />\r\n          Add Counter\r\n        </button>\r\n      </div>\r\n\r\n      {/* Loading State */}\r\n      {isLoading ? (\r\n        <div className=\"flex justify-center my-8\">\r\n          <p className=\"text-gray-700 dark:text-gray-300\">Loading data...</p>\r\n        </div>\r\n      ) : error ? (\r\n        <div className=\"text-center py-8\">\r\n          <p className=\"text-red-600 dark:text-red-400\">{error}</p>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {/* Desktop Table - Hidden on mobile */}\r\n          <TableContainer className=\"hidden md:block mb-8\">\r\n            <Table>\r\n              <TableHeader>\r\n                <tr>\r\n                  <TableCell>ID</TableCell>\r\n                  <TableCell>Name</TableCell>\r\n                  <TableCell>Zone</TableCell>\r\n                  <TableCell>Actions</TableCell>\r\n                </tr>\r\n              </TableHeader>\r\n              <TableBody>\r\n                {counterData.map((item, index) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell>\r\n                      <span className=\"text-sm font-semibold\">{index + 1}</span>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <span className=\"text-sm\">{item.name}</span>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <span className=\"text-sm\">{item.zone_name || 'N/A'}</span>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <div className=\"flex items-center space-x-4\">\r\n                        <Button\r\n                          layout=\"link\"\r\n                          size=\"icon\"\r\n                          aria-label=\"Edit\"\r\n                          onClick={() => handleEditClick(item)}\r\n                        >\r\n                          <AiOutlineEdit className=\"w-5 h-5\" aria-hidden=\"true\" />\r\n                        </Button>\r\n                        <Button\r\n                          layout=\"link\"\r\n                          size=\"icon\"\r\n                          aria-label=\"Delete\"\r\n                          onClick={() => handleDeleteCounter(item.id)}\r\n                        >\r\n                          <AiOutlineDelete className=\"w-5 h-5\" aria-hidden=\"true\" />\r\n                        </Button>\r\n                      </div>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n\r\n          {/* Mobile View - List with Counter Cards */}\r\n          <div className=\"md:hidden space-y-3\">\r\n            {counterData.length === 0 ? (\r\n              <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\r\n                No counters found\r\n              </div>\r\n            ) : (\r\n              counterData.map((item, index) => (\r\n                <div\r\n                  key={item.id}\r\n                  className=\"bg-white dark:bg-gray-800 rounded-lg border dark:border-gray-700 hover:border-purple-200 dark:hover:border-purple-700 transition-colors\"\r\n                >\r\n                  <div \r\n                    className=\"flex items-center p-3 cursor-pointer\"\r\n                    onClick={() => toggleExpand(item.id)}\r\n                  >\r\n                    <div \r\n                      className=\"h-12 w-12 mr-3 rounded-full bg-purple-100 dark:bg-purple-900 text-purple-600 dark:text-purple-300 \r\n                      flex items-center justify-center font-medium\"\r\n                    >\r\n                      {index + 1}\r\n                    </div>\r\n                    <div className=\"flex-1 min-w-0\">\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <p className=\"font-medium dark:text-white truncate\">{item.name}</p>\r\n                      </div>\r\n                    </div>\r\n                    <button \r\n                      onClick={() => toggleExpand(item.id)}\r\n                      className=\"text-gray-600 dark:text-gray-300\"\r\n                    >\r\n                      {expandedItem === item.id ? <AiOutlineUp className=\"h-5 w-5\" /> : <AiOutlineDown className=\"h-5 w-5\" />}\r\n                    </button>\r\n                  </div>\r\n\r\n                  {expandedItem === item.id && (\r\n                    <div className=\"px-4 pb-4 pt-0 border-t dark:border-gray-700\">\r\n                      <div className=\"mt-2 space-y-2\">\r\n                        <div>\r\n                          <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-1\">Zone</p>\r\n                          <p className=\"text-sm dark:text-white\">{item.zone_name || 'N/A'}</p>\r\n                        </div>\r\n                        <div className=\"flex justify-end space-x-2 mt-2\">\r\n                          <button \r\n                            onClick={() => handleEditClick(item)}\r\n                            className=\"bg-blue-600 text-white px-3 py-1 rounded-md text-xs flex items-center\"\r\n                          >\r\n                            <AiOutlineEdit className=\"mr-1 h-3 w-3\" /> Edit\r\n                          </button>\r\n                          <button \r\n                            onClick={() => handleDeleteCounter(item.id)}\r\n                            className=\"bg-red-600 text-white px-3 py-1 rounded-md text-xs flex items-center\"\r\n                          >\r\n                            <AiOutlineDelete className=\"mr-1 h-3 w-3\" /> Delete\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* Create Counter Modal */}\r\n      <CreateCounterModal\r\n        isOpen={isCreateModalOpen}\r\n        onClose={handleCreateModalClose}\r\n        onCounterCreated={handleCounterCreated}\r\n      />\r\n\r\n      {/* Edit Counter Modal */}\r\n      {currentCounter && (\r\n        <EditCounterModal\r\n          isOpen={isEditModalOpen}\r\n          onClose={handleEditModalClose}\r\n          onCounterUpdated={handleCounterUpdated}\r\n          counterData={currentCounter}\r\n        />\r\n      )}\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Counter;","import axios from \"axios\";\r\n\r\n// let BASE_URL = \"http://35.172.211.35/api\";\r\nlet BASE_URL = \"https://rms-v2.duckdns.org/api\";\r\n\r\n\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n  console.log(\"Running in Production Mode\");\r\n  BASE_URL = \"https://rms-v2.duckdns.org/api\";\r\n} else {\r\n  // BASE_URL = \"http://localhost:8000/api/v1\";\r\n  console.log(\"Running in Development Mode\");\r\n}\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: BASE_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"accessToken\");\r\n    if (token) {\r\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    // await logErrorToBackend(error);\r\n    if (error.response && error.response.status === 401) {\r\n      localStorage.clear();\r\n      window.location.href = \"/\";\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const get = async (url, params) => {\r\n  return axiosInstance.get(url, { params }).then((res) => res.data);\r\n};\r\n\r\nexport const post = async (url, data) => {\r\n  return axiosInstance.post(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const put = async (url, data) => {\r\n  return axiosInstance.put(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const patch = async (url, data) => {\r\n  return axiosInstance.patch(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const _delete = async (url) => {\r\n  return axiosInstance.delete(url).then((res) => res.data);\r\n};\r\n\r\nexport const downloadBlob = async (url, filename) => {\r\n  try {\r\n    const response = await axiosInstance.get(url, {\r\n      responseType: \"blob\",\r\n    });\r\n\r\n    const blob = new Blob([response.data], { type: \"application/pdf\" });\r\n    const blobUrl = window.URL.createObjectURL(blob);\r\n\r\n    const link = document.createElement(\"a\");\r\n    link.href = blobUrl;\r\n    link.setAttribute(\"download\", filename);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    link.remove();\r\n    window.URL.revokeObjectURL(blobUrl);\r\n  } catch (err) {\r\n    console.error(\"Download failed:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const uploadFormData = async (url, formData) => {\r\n  try {\r\n    const response = await axiosInstance.post(url, formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(\"File upload failed:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport default axiosInstance;\r\n","import React from 'react'\r\n\r\nfunction PageTitle({ children }) {\r\n  return (\r\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n"],"sourceRoot":""}