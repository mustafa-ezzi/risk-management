{"version":3,"sources":["components/CreateCityModal.js","components/EditCityModal.js","pages/City.js","api/axios.js","components/Typography/PageTitle.js"],"names":["CreateCityModal","_ref","isOpen","onClose","onCityCreated","history","useHistory","formData","setFormData","useState","name","isSubmitting","setIsSubmitting","useEffect","handleSubmit","async","e","preventDefault","trim","toast","error","submissionData","post","success","push","_error$response","_error$response$data","console","response","data","message","React","createElement","Modal","ModalHeader","ModalBody","onSubmit","Label","className","Input","value","onChange","target","prev","_objectSpread","placeholder","required","ModalFooter","Button","onClick","disabled","block","size","EditCityModal","onCityUpdated","cityData","errors","setErrors","validateForm","newErrors","Object","keys","length","patch","concat","id","submit","prevData","CityList","setCityData","isLoading","setIsLoading","setError","isCreateModalOpen","setIsCreateModalOpen","isEditModalOpen","setIsEditModalOpen","currentCity","setCurrentCity","refreshTrigger","setRefreshTrigger","get","results","err","fetchCityData","handleEditClick","city","handleDeleteCity","window","confirm","_delete","filter","item","PageTitle","handleAddCity","style","fontSize","innerWidth","padding","AiOutlinePlusCircle","Fragment","TableContainer","Table","TableHeader","TableCell","TableBody","map","index","TableRow","key","AiOutlineEdit","AiOutlineDelete","handleCreateModalClose","handleCityCreated","handleEditModalClose","handleCityUpdated","BASE_URL","log","axiosInstance","axios","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Promise","reject","status","clear","location","href","url","params","then","res","put","delete","downloadBlob","filename","responseType","blob","Blob","type","blobUrl","URL","createObjectURL","link","document","setAttribute","body","appendChild","click","remove","revokeObjectURL","uploadFormData","children"],"mappings":"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","file":"static/js/16.ad759232.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'; // Add useEffect import\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n  Input,\r\n  Label\r\n} from '@windmill/react-ui';\r\nimport { post } from '../api/axios';\r\nimport { toast } from 'react-hot-toast';\r\n\r\nconst CreateCityModal = ({ \r\n  isOpen, \r\n  onClose,\r\n  onCityCreated\r\n}) => {\r\n  const history = useHistory();\r\n\r\n  // Form state\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n  });\r\n\r\n  // Submission state\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  // Reset formData when modal opens or closes\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      // Reset form when modal opens\r\n      setFormData({\r\n        name: '',\r\n      });\r\n    }\r\n  }, [isOpen]);\r\n\r\n  // Handle input changes\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n\r\n    // Validate required fields\r\n    if (!formData.name.trim()) {\r\n      toast.error('City name is required');\r\n      setIsSubmitting(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Prepare submission data\r\n      const submissionData = {\r\n        name: formData.name.trim(),\r\n      };\r\n\r\n      // Submit to backend\r\n      const response = await post('requests/cities/', submissionData);\r\n      // Show success toast\r\n      toast.success('City created successfully');\r\n      \r\n      // Close the modal first\r\n      onClose();\r\n      \r\n      // Trigger list refresh\r\n      onCityCreated();\r\n      \r\n      // Then redirect to city list\r\n      history.push('/app/city');\r\n    } catch (error) {\r\n      console.error('Error creating city:', error);\r\n      toast.error(error.response?.data?.message || 'Failed to create city');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose}>\r\n      <ModalHeader>Create New City</ModalHeader>\r\n      <ModalBody>\r\n        <form onSubmit={handleSubmit}>\r\n          <Label className=\"block mb-4\">\r\n            <span>City Name</span>\r\n            <Input \r\n              className=\"mt-1\"\r\n              name=\"name\"\r\n              value={formData.name}\r\n              onChange={handleChange}\r\n              placeholder=\"Enter city name\" \r\n              required\r\n            />\r\n          </Label>\r\n\r\n         \r\n        </form>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <div className=\"hidden sm:block\">\r\n          <Button \r\n            onClick={handleSubmit} \r\n            disabled={isSubmitting}\r\n          >\r\n            {isSubmitting ? 'Creating...' : 'Create City'}\r\n          </Button>\r\n        </div>\r\n        \r\n        {/* Mobile buttons */}\r\n        <div className=\"w-full sm:hidden\">\r\n          <Button \r\n            block \r\n            size=\"large\" \r\n            onClick={handleSubmit}\r\n            disabled={isSubmitting}\r\n          >\r\n            {isSubmitting ? 'Creating...' : 'Create City'}\r\n          </Button>\r\n        </div>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateCityModal;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n  Input,\r\n  Label,\r\n} from '@windmill/react-ui';\r\nimport { patch } from '../api/axios';\r\n\r\nfunction EditCityModal({ isOpen, onClose, onCityUpdated, cityData }) {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n  });\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  // Initialize form data when modal opens or cityData changes\r\n  useEffect(() => {\r\n    if (cityData) {\r\n      setFormData({\r\n        name: cityData.name || '',\r\n      });\r\n    }\r\n  }, [cityData]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prevData => ({\r\n      ...prevData,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    if (!formData.name.trim()) {\r\n      newErrors.name = 'City name is required';\r\n    }\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsSubmitting(true);\r\n      \r\n      // Send PATCH request to update city\r\n      await patch(`/requests/cities/${cityData.id}/edit/`, formData);\r\n      \r\n      // Call the callback to refresh the city list\r\n      if (onCityUpdated) {\r\n        onCityUpdated();\r\n      }\r\n      \r\n      // Close the modal\r\n      onClose();\r\n    } catch (error) {\r\n      console.error('Error updating city:', error);\r\n      setErrors({ submit: 'Failed to update city. Please try again.' });\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose}>\r\n      <ModalHeader>Edit City Item</ModalHeader>\r\n      <ModalBody>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"mb-4\">\r\n            <Label>\r\n              <span>City Name</span>\r\n              <Input \r\n                className=\"mt-1\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleChange}\r\n                placeholder=\"Enter city name\"\r\n              />\r\n              {errors.name && (\r\n                <span className=\"text-xs text-red-600\">{errors.name}</span>\r\n              )}\r\n            </Label>\r\n          </div>\r\n\r\n          \r\n          {errors.submit && (\r\n            <div className=\"mb-4\">\r\n              <p className=\"text-sm text-red-600\">{errors.submit}</p>\r\n            </div>\r\n          )}\r\n        </form>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <div className=\"flex flex-col space-y-2 sm:space-y-0 sm:space-x-2 sm:flex-row\">\r\n        \r\n          <Button \r\n            onClick={handleSubmit} \r\n            disabled={isSubmitting}\r\n          >\r\n            {isSubmitting ? 'Updating...' : 'Update City'}\r\n          </Button>\r\n        </div>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default EditCityModal;","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { get, _delete, patch } from '../api/axios';\r\nimport PageTitle from '../components/Typography/PageTitle';\r\nimport {\r\n  Table,\r\n  TableHeader,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  TableContainer,\r\n  Button,\r\n} from '@windmill/react-ui';\r\nimport { AiOutlinePlusCircle, AiOutlineEdit, AiOutlineDelete } from 'react-icons/ai';\r\nimport CreateCityModal from '../components/CreateCityModal';\r\nimport EditCityModal from '../components/EditCityModal';\r\nimport toast from 'react-hot-toast';\r\nimport logo from '../assets/img/mainLogo.png';\r\n\r\nfunction CityList() {\r\n  const history = useHistory();\r\n  \r\n  const [cityData, setCityData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n  const [currentCity, setCurrentCity] = useState(null);\r\n  const [refreshTrigger, setRefreshTrigger] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchCityData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await get('requests/cities/');\r\n        setCityData(response.results);\r\n      } catch (err) {\r\n        console.error('Error fetching city data:', err);\r\n        setError('Failed to load city data');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCityData();\r\n  }, [refreshTrigger]);\r\n\r\n  const handleAddCity = () => {\r\n    setIsCreateModalOpen(true);\r\n  };\r\n\r\n  const handleCreateModalClose = () => {\r\n    setIsCreateModalOpen(false);\r\n  };\r\n\r\n  const handleEditClick = (city) => {\r\n    setCurrentCity(city);\r\n    setIsEditModalOpen(true);\r\n  };\r\n\r\n  const handleEditModalClose = () => {\r\n    setIsEditModalOpen(false);\r\n    setCurrentCity(null);\r\n  };\r\n\r\n  const handleCityCreated = () => {\r\n    setRefreshTrigger(prev => prev + 1);\r\n  };\r\n\r\n  const handleCityUpdated = () => {\r\n    setRefreshTrigger(prev => prev + 1);\r\n    toast.success('City updated successfully');\r\n  };\r\n\r\n  const handleDeleteCity = async (id) => {\r\n    try {\r\n      const confirmDelete = window.confirm('Are you sure you want to delete this city item?');\r\n\r\n      if (confirmDelete) {\r\n        await _delete(`requests/cities/${id}/delete/`);\r\n        \r\n        setCityData(prevData => prevData.filter(item => item.id !== id));\r\n        toast.success('City deleted successfully');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting city:', error);\r\n      toast.error('Failed to delete city. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n  <div className=\"relative w-full px-4 py-6\">\r\n    \r\n        {/* Content Overlay */}\r\n        <div className=\"relative z-10\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <PageTitle>City List</PageTitle>\r\n        <button \r\n          onClick={handleAddCity} \r\n          className=\"flex items-center bg-purple-600 hover:bg-purple-700 text-white rounded-lg dark:bg-purple-700 dark:hover:bg-purple-600\"\r\n          style={{\r\n            fontSize: window.innerWidth < 768 ? '0.875rem' : '1rem',\r\n            padding: window.innerWidth < 768 ? '0.5rem 1rem' : '0.75rem 1rem'\r\n          }}\r\n        >\r\n          <AiOutlinePlusCircle \r\n            className={`mr-1 ${window.innerWidth < 768 ? 'w-3 h-3' : 'w-4 h-4'}`} \r\n          />\r\n          Add City\r\n        </button>\r\n      </div>\r\n\r\n      {/* Loading State */}\r\n      {isLoading ? (\r\n        <div className=\"flex justify-center my-8\">\r\n          <p className=\"text-gray-700 dark:text-gray-300\">Loading data...</p>\r\n        </div>\r\n      ) : error ? (\r\n        <div className=\"text-center py-8\">\r\n          <p className=\"text-red-600 dark:text-red-400\">{error}</p>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {/* Desktop Table - Hidden on mobile */}\r\n          <TableContainer className=\"hidden md:block mb-8\">\r\n            <Table>\r\n              <TableHeader>\r\n                <tr>\r\n                  <TableCell>ID</TableCell>\r\n                  <TableCell>Name</TableCell>\r\n                  <TableCell>Actions</TableCell>\r\n                </tr>\r\n              </TableHeader>\r\n              <TableBody>\r\n                {cityData.map((item, index) => (\r\n                  <TableRow key={item.id} className=\"dark:bg-gray-800 dark:hover:bg-gray-700\">\r\n                    <TableCell>\r\n                      <span className=\"text-sm font-semibold dark:text-white\">{index + 1}</span>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <span className=\"text-sm dark:text-white\">{item.name}</span>\r\n                    </TableCell>\r\n                   \r\n                    <TableCell>\r\n                      <div className=\"flex items-center space-x-4\">\r\n                        <button\r\n                          onClick={() => handleEditClick(item)}\r\n                          className=\"text-gray-600 hover:text-blue-600 dark:text-gray-300 dark:hover:text-blue-400\"\r\n                        >\r\n                          <AiOutlineEdit className=\"h-4 w-4\" />\r\n                        </button>\r\n                        <button\r\n                          onClick={() => handleDeleteCity(item.id)}\r\n                          className=\"text-gray-600 hover:text-red-600 dark:text-gray-300 dark:hover:text-red-400\"\r\n                        >\r\n                          <AiOutlineDelete className=\"h-4 w-4\" />\r\n                        </button>\r\n                      </div>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n\r\n          {/* Mobile View - Simple List */}\r\n          <div className=\"md:hidden space-y-3\">\r\n            {cityData.length === 0 ? (\r\n              <div className=\"text-center py-8\">\r\n                <p className=\"text-gray-700 dark:text-gray-300\">No city items found</p>\r\n              </div>\r\n            ) : (\r\n              cityData.map((item, index) => (\r\n                <div \r\n                  key={item.id} \r\n                  className=\"bg-white dark:bg-gray-800 rounded-lg shadow-md border dark:border-gray-700 p-4\"\r\n                >\r\n                  <div className=\"flex justify-between items-start\">\r\n                    <div>\r\n                      <div className=\"flex items-center gap-2 mb-2\">\r\n                        <span className=\"bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-300 text-xs font-medium px-2 py-1 rounded\">\r\n                          #{index + 1}\r\n                        </span>\r\n                      </div>\r\n                      <h3 className=\"font-medium text-lg dark:text-white\">{item.name}</h3>\r\n                      \r\n                    </div>\r\n                    <div className=\"flex space-x-2\">\r\n                      <button \r\n                        onClick={() => handleEditClick(item)}\r\n                        className=\"text-blue-600 hover:bg-blue-50 dark:text-blue-400 dark:hover:bg-blue-900/30 p-1 rounded\"\r\n                      >\r\n                        <AiOutlineEdit className=\"h-5 w-5\" />\r\n                      </button>\r\n                      <button \r\n                        onClick={() => handleDeleteCity(item.id)}\r\n                        className=\"text-red-600 hover:bg-red-50 dark:text-red-400 dark:hover:bg-red-900/30 p-1 rounded\"\r\n                      >\r\n                        <AiOutlineDelete className=\"h-5 w-5\" />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n    </div>\r\n      {/* Create City Modal */}\r\n      <CreateCityModal\r\n        isOpen={isCreateModalOpen}\r\n        onClose={handleCreateModalClose}\r\n        onCityCreated={handleCityCreated}\r\n      />\r\n\r\n      {/* Edit City Modal */}\r\n      {currentCity && (\r\n        <EditCityModal\r\n          isOpen={isEditModalOpen}\r\n          onClose={handleEditModalClose}\r\n          onCityUpdated={handleCityUpdated}\r\n          cityData={currentCity}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CityList;","import axios from \"axios\";\r\n\r\n// let BASE_URL = \"http://35.172.211.35/api\";\r\nlet BASE_URL = \"https://rms-v2.duckdns.org/api\";\r\n\r\n\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n  console.log(\"Running in Production Mode\");\r\n  BASE_URL = \"http://35.172.211.35/api\";\r\n} else {\r\n  // BASE_URL = \"http://localhost:8000/api/v1\";\r\n  console.log(\"Running in Development Mode\");\r\n}\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: BASE_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"accessToken\");\r\n    if (token) {\r\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    // await logErrorToBackend(error);\r\n    if (error.response && error.response.status === 401) {\r\n      localStorage.clear();\r\n      window.location.href = \"/\";\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const get = async (url, params) => {\r\n  return axiosInstance.get(url, { params }).then((res) => res.data);\r\n};\r\n\r\nexport const post = async (url, data) => {\r\n  return axiosInstance.post(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const put = async (url, data) => {\r\n  return axiosInstance.put(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const patch = async (url, data) => {\r\n  return axiosInstance.patch(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const _delete = async (url) => {\r\n  return axiosInstance.delete(url).then((res) => res.data);\r\n};\r\n\r\nexport const downloadBlob = async (url, filename) => {\r\n  try {\r\n    const response = await axiosInstance.get(url, {\r\n      responseType: \"blob\",\r\n    });\r\n\r\n    const blob = new Blob([response.data], { type: \"application/pdf\" });\r\n    const blobUrl = window.URL.createObjectURL(blob);\r\n\r\n    const link = document.createElement(\"a\");\r\n    link.href = blobUrl;\r\n    link.setAttribute(\"download\", filename);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    link.remove();\r\n    window.URL.revokeObjectURL(blobUrl);\r\n  } catch (err) {\r\n    console.error(\"Download failed:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const uploadFormData = async (url, formData) => {\r\n  try {\r\n    const response = await axiosInstance.post(url, formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(\"File upload failed:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport default axiosInstance;\r\n","import React from 'react'\r\n\r\nfunction PageTitle({ children }) {\r\n  return (\r\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n"],"sourceRoot":""}