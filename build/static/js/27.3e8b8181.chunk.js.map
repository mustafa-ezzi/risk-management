{"version":3,"sources":["pages/CreateLeftoverDegsModal.js","components/EditLeftoverDegsModal.js","pages/LeftOverDegs.js","api/axios.js"],"names":["CreateLeftoverDegsModal","_ref","isOpen","onClose","miqaatId","onSuccess","formData","setFormData","useState","menu","unit","container","total_cooked","total_received","zone","dropdownOptions","setDropdownOptions","menus","units","containers","zones","isSubmitting","setIsSubmitting","error","setError","useEffect","async","menusRes","unitsRes","containersRes","zonesRes","Promise","all","get","err","console","fetchDropdownOptions","handleInputChange","e","name","value","target","prev","_objectSpread","handleSubmit","preventDefault","submissionData","miqaat","missingFields","filter","field","length","concat","join","parseInt","response","post","_err$response","data","errorMessages","errorData","Object","keys","forEach","key","Array","isArray","push","React","createElement","Modal","ModalHeader","ModalBody","className","role","onSubmit","Label","Select","onChange","required","map","id","Input","type","placeholder","ModalFooter","Button","onClick","disabled","block","size","EditLeftoverDegsModal","leftoverDegsData","isDropdownLoading","setIsDropdownLoading","results","_leftoverDegsData$zon","_leftoverDegsData$zon2","_leftoverDegsData$men","_leftoverDegsData$men2","_leftoverDegsData$uni","_leftoverDegsData$uni2","_leftoverDegsData$con","_leftoverDegsData$con2","zone_id","menu_id","unit_id","container_id","Error","some","totalCooked","totalReceived","isNaN","patch","toast","success","_err$response$data","message","min","LeftoverDegs","_leftoverData$leftove","useParams","history","useHistory","leftoverData","setLeftoverData","isLoading","setIsLoading","miqaatDetails","setMiqaatDetails","isCreateModalOpen","setIsCreateModalOpen","isEditModalOpen","setIsEditModalOpen","currentLeftoverDeg","setCurrentLeftoverDeg","expandedItem","setExpandedItem","fetchLeftoverData","fetchMiqaatDetails","handleEditLeftoverDeg","leftoverDegItem","handleDeleteLeftoverDeg","window","confirm","_delete","leftoverDegId","prevData","leftover_degs","item","toggleExpand","src","logo","alt","style","top","left","position","transform","width","maxWidth","height","opacity","zIndex","handleBackClick","goBack","AiOutlineArrowLeft","fontSize","innerWidth","miqaat_name","handleAddLeftoverDeg","padding","AiOutlinePlusCircle","Fragment","TableContainer","Table","TableHeader","TableCell","TableBody","index","TableRow","menu_name","container_name","unit_name","zone_name","AiOutlineEdit","AiOutlineDelete","stopPropagation","AiOutlineDown","handleCreateModalClose","handleEditModalClose","BASE_URL","log","axiosInstance","axios","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","reject","status","clear","location","href","url","params","then","res","put","delete","downloadBlob","filename","responseType","blob","Blob","blobUrl","URL","createObjectURL","link","document","setAttribute","body","appendChild","click","remove","revokeObjectURL","uploadFormData"],"mappings":"+MAqSeA,MAxRiBC,IAKzB,IAL0B,OAC/BC,EAAM,QACNC,EAAO,SACPC,EAAQ,UACRC,GACDJ,EACC,MAAOK,EAAUC,GAAeC,mBAAS,CACvCC,KAAM,GACNC,KAAM,GACNC,UAAW,GACXC,aAAc,GACdC,eAAgB,GAChBC,KAAM,MAGDC,EAAiBC,GAAsBR,mBAAS,CACrDS,MAAO,GACPC,MAAO,GACPC,WAAY,GACZC,MAAO,MAGFC,EAAcC,GAAmBd,oBAAS,IAC1Ce,EAAOC,GAAYhB,mBAAS,MAGnCiB,oBAAU,KAsBJvB,GArByBwB,WAC3B,IACE,MAAOC,EAAUC,EAAUC,EAAeC,SAAkBC,QAAQC,IAAI,CACtEC,YAAI,eACJA,YAAI,eACJA,YAAI,oBACJA,YAAI,iBAGNjB,EAAmB,CACjBC,MAAOU,EACPT,MAAOU,EACPT,WAAYU,EACZT,MAAOU,IAET,MAAOI,GACPC,QAAQZ,MAAM,mCAAoCW,GAClDV,EAAS,qCAKXY,IAED,CAAClC,IAEJ,MAAMmC,EAAqBC,IACzB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1BlC,EAAYmC,GAAIC,wBAAA,GACXD,GAAI,IACP,CAACH,GAAOC,MAINI,EAAelB,UACnBY,EAAEO,iBACFvB,GAAgB,GAChBE,EAAS,MAET,IAEE,MAAMsB,EAAcH,wBAAA,GACfrC,GAAQ,IACXyC,OAAQ3C,IAKJ4C,EADiB,CAAC,OAAQ,OAAQ,YAAa,eAAgB,iBAAkB,QAClDC,OAAOC,IAAUJ,EAAeI,IAErE,GAAIF,EAAcG,OAAS,EAGzB,OAFA3B,EAAS,uCAAD4B,OAAwCJ,EAAcK,KAAK,aACnE/B,GAAgB,GAKlBwB,EAAerC,KAAO6C,SAASR,EAAerC,KAAM,IACpDqC,EAAepC,KAAO4C,SAASR,EAAepC,KAAM,IACpDoC,EAAenC,UAAY2C,SAASR,EAAenC,UAAW,IAC9DmC,EAAehC,KAAOwC,SAASR,EAAehC,KAAM,IACpDgC,EAAelC,aAAe0C,SAASR,EAAelC,aAAc,IACpEkC,EAAejC,eAAiByC,SAASR,EAAejC,eAAgB,IACxEiC,EAAeC,OAASO,SAASR,EAAeC,OAAQ,IAGxD,MAAMQ,QAAiBC,YAAK,kBAAmBV,GAG/CzC,EAAUkD,GAGVhD,EAAY,CACVE,KAAM,GACNC,KAAM,GACNC,UAAW,GACXC,aAAc,GACdC,eAAgB,GAChBC,KAAM,KAERX,IACA,MAAO+B,GAAM,IAADuB,EAIZ,GAHAtB,QAAQZ,MAAM,gCAAiCW,GAG/B,QAAhBuB,EAAIvB,EAAIqB,gBAAQ,IAAAE,OAAA,EAAZA,EAAcC,KAAM,CACtB,MAAMC,EAAgB,GAChBC,EAAY1B,EAAIqB,SAASG,KAE/BG,OAAOC,KAAKF,GAAWG,QAAQC,IACzBC,MAAMC,QAAQN,EAAUI,KAC1BL,EAAcQ,KAAK,GAADf,OAAIY,EAAG,MAAAZ,OAAKQ,EAAUI,GAAKX,KAAK,UAIlDM,EAAcR,OAAS,EACzB3B,EAASmC,EAAcN,KAAK,OAE5B7B,EAAS,iEAGXA,EAAS,kCAEZ,QACCF,GAAgB,KAIpB,OACE8C,IAAAC,cAACC,QAAK,CAACpE,OAAQA,EAAQC,QAASA,GAC9BiE,IAAAC,cAACE,cAAW,KAAC,wBACbH,IAAAC,cAACG,YAAS,KACPjD,GACC6C,IAAAC,cAAA,OAAKI,UAAU,gFAAgFC,KAAK,SAClGN,IAAAC,cAAA,QAAMI,UAAU,mBAAmBlD,IAGvC6C,IAAAC,cAAA,QAAMM,SAAU/B,GACdwB,IAAAC,cAAA,OAAKI,UAAU,0BAEbL,IAAAC,cAACO,QAAK,CAACH,UAAU,iBACfL,IAAAC,cAAA,QAAMI,UAAU,oCAAmC,QACnDL,IAAAC,cAACQ,SAAM,CACLtC,KAAK,OACLC,MAAOlC,EAASG,KAChBqE,SAAUzC,EACVoC,UAAU,OACVM,UAAQ,GAERX,IAAAC,cAAA,UAAQ7B,MAAM,IAAG,eAChBzB,EAAgBE,MAAM+D,IAAIvE,GACzB2D,IAAAC,cAAA,UAAQL,IAAKvD,EAAKwE,GAAIzC,MAAO/B,EAAKwE,IAC/BxE,EAAK8B,SAOd6B,IAAAC,cAACO,QAAK,CAACH,UAAU,iBACfL,IAAAC,cAAA,QAAMI,UAAU,oCAAmC,QACnDL,IAAAC,cAACQ,SAAM,CACLtC,KAAK,OACLC,MAAOlC,EAASI,KAChBoE,SAAUzC,EACVoC,UAAU,OACVM,UAAQ,GAERX,IAAAC,cAAA,UAAQ7B,MAAM,IAAG,eAChBzB,EAAgBG,MAAM8D,IAAItE,GACzB0D,IAAAC,cAAA,UAAQL,IAAKtD,EAAKuE,GAAIzC,MAAO9B,EAAKuE,IAC/BvE,EAAK6B,SAOd6B,IAAAC,cAACO,QAAK,CAACH,UAAU,iBACfL,IAAAC,cAAA,QAAMI,UAAU,oCAAmC,aACnDL,IAAAC,cAACQ,SAAM,CACLtC,KAAK,YACLC,MAAOlC,EAASK,UAChBmE,SAAUzC,EACVoC,UAAU,OACVM,UAAQ,GAERX,IAAAC,cAAA,UAAQ7B,MAAM,IAAG,oBAChBzB,EAAgBI,WAAW6D,IAAIrE,GAC9ByD,IAAAC,cAAA,UAAQL,IAAKrD,EAAUsE,GAAIzC,MAAO7B,EAAUsE,IACzCtE,EAAU4B,SAOnB6B,IAAAC,cAACO,QAAK,CAACH,UAAU,iBACfL,IAAAC,cAAA,QAAMI,UAAU,oCAAmC,QACnDL,IAAAC,cAACQ,SAAM,CACLtC,KAAK,OACLC,MAAOlC,EAASQ,KAChBgE,SAAUzC,EACVoC,UAAU,OACVM,UAAQ,GAERX,IAAAC,cAAA,UAAQ7B,MAAM,IAAG,eAChBzB,EAAgBK,MAAM4D,IAAIlE,GACzBsD,IAAAC,cAAA,UAAQL,IAAKlD,EAAKmE,GAAIzC,MAAO1B,EAAKmE,IAC/BnE,EAAKyB,SAOd6B,IAAAC,cAACO,QAAK,CAACH,UAAU,iBACfL,IAAAC,cAAA,QAAMI,UAAU,oCAAmC,gBACnDL,IAAAC,cAACa,QAAK,CACJC,KAAK,SACL5C,KAAK,eACLC,MAAOlC,EAASM,aAChBkE,SAAUzC,EACV+C,YAAY,qBACZX,UAAU,OACVM,UAAQ,KAKZX,IAAAC,cAACO,QAAK,CAACH,UAAU,iBACfL,IAAAC,cAAA,QAAMI,UAAU,oCAAmC,kBACnDL,IAAAC,cAACa,QAAK,CACJC,KAAK,SACL5C,KAAK,iBACLC,MAAOlC,EAASO,eAChBiE,SAAUzC,EACV+C,YAAY,uBACZX,UAAU,OACVM,UAAQ,QAMlBX,IAAAC,cAACgB,cAAW,KAEVjB,IAAAC,cAAA,OAAKI,UAAU,mBACbL,IAAAC,cAACiB,SAAM,CACLC,QAAS3C,EACT4C,SAAUnE,GAETA,EAAe,cAAgB,WAKpC+C,IAAAC,cAAA,OAAKI,UAAU,oBAEbL,IAAAC,cAACiB,SAAM,CACLG,OAAK,EACLC,KAAK,QACLH,QAAS3C,EACT4C,SAAUnE,GAETA,EAAe,cAAgB,c,iBC8B7BsE,MA7Se1F,IAMvB,IANwB,OAC7BC,EAAM,QACNC,EAAO,SACPC,EAAQ,iBACRwF,EAAgB,UAChBvF,GACDJ,EACC,MAAOK,EAAUC,GAAeC,mBAAS,CACvCuC,OAAQ3C,EACRU,KAAM,GACNL,KAAM,GACNC,KAAM,GACNC,UAAW,GACXC,aAAc,GACdC,eAAgB,MAGXE,EAAiBC,GAAsBR,mBAAS,CACrDY,MAAO,GACPH,MAAO,GACPC,MAAO,GACPC,WAAY,MAGPE,EAAcC,GAAmBd,oBAAS,IAC1Ce,EAAOC,GAAYhB,mBAAS,OAC5BqF,EAAmBC,GAAwBtF,oBAAS,GAG3DiB,oBAAU,KAyBJvB,GAxByBwB,WAC3BoE,GAAqB,GACrB,IACE,MAAOhE,EAAUH,EAAUC,EAAUC,SAAuBE,QAAQC,IAAI,CACtEC,YAAI,eACJA,YAAI,eACJA,YAAI,eACJA,YAAI,sBAGNjB,EAAmB,CACjBI,MAAO6C,MAAMC,QAAQpC,GAAYA,EAAWA,EAASiE,SAAW,GAChE9E,MAAOgD,MAAMC,QAAQvC,GAAYA,EAAWA,EAASoE,SAAW,GAChE7E,MAAO+C,MAAMC,QAAQtC,GAAYA,EAAWA,EAASmE,SAAW,GAChE5E,WAAY8C,MAAMC,QAAQrC,GAAiBA,EAAgBA,EAAckE,SAAW,KAEtF,MAAO7D,GACPC,QAAQZ,MAAM,mCAAoCW,GAClDV,EAAS,mCACV,QACCsE,GAAqB,KAKvB1D,IAED,CAAClC,IAGJuB,oBAAU,KACqC,IAADuE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAxCX,IAAqBC,GACvBtF,EAAY,CACVwC,OAAQ3C,EACRU,KAAM8E,EAAiBY,UAAqC,QAA9BR,EAA0B,QAA1BC,EAAKL,EAAiB9E,YAAI,IAAAmF,OAAA,EAArBA,EAAuBhB,UAAE,IAAAe,IAAI,IAChEvF,KAAMmF,EAAiBa,UAAqC,QAA9BP,EAA0B,QAA1BC,EAAKP,EAAiBnF,YAAI,IAAA0F,OAAA,EAArBA,EAAuBlB,UAAE,IAAAiB,IAAI,IAChExF,KAAMkF,EAAiBc,UAAqC,QAA9BN,EAA0B,QAA1BC,EAAKT,EAAiBlF,YAAI,IAAA2F,OAAA,EAArBA,EAAuBpB,UAAE,IAAAmB,IAAI,IAChEzF,UAAWiF,EAAiBe,eAA+C,QAAnCL,EAA+B,QAA/BC,EAAKX,EAAiBjF,iBAAS,IAAA4F,OAAA,EAA1BA,EAA4BtB,UAAE,IAAAqB,IAAI,IAC/E1F,aAAcgF,EAAiBhF,cAAgB,GAC/CC,eAAgB+E,EAAiB/E,gBAAkB,MAGtD,CAAC+E,EAAkBxF,EAAUyF,IAEhC,MAAMxD,EAAqBC,IACzB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1BlC,EAAYmC,GAAIC,wBAAA,GACXD,GAAI,IACP,CAACH,GAAOC,MAINI,EAAelB,UACnBY,EAAEO,iBACFvB,GAAgB,GAChBE,EAAS,MAET,IAEE,MACMwB,EADiB,CAAC,OAAQ,OAAQ,OAAQ,YAAa,eAAgB,kBACxCC,OAAOC,IAAU5C,EAAS4C,IAE/D,GAAIF,EAAcG,OAAS,EACzB,MAAM,IAAIyD,MAAM,uCAADxD,OAAwCJ,EAAcK,KAAK,QAI5E,IAAKtC,EAAgBK,MAAMyF,KAAK/F,GAAQA,EAAKmE,KAAO3B,SAAShD,EAASQ,OACpE,MAAM,IAAI8F,MAAM,8BAElB,IAAK7F,EAAgBE,MAAM4F,KAAKpG,GAAQA,EAAKwE,KAAO3B,SAAShD,EAASG,OACpE,MAAM,IAAImG,MAAM,8BAElB,IAAK7F,EAAgBG,MAAM2F,KAAKnG,GAAQA,EAAKuE,KAAO3B,SAAShD,EAASI,OACpE,MAAM,IAAIkG,MAAM,8BAElB,IAAK7F,EAAgBI,WAAW0F,KAAKlG,GAAaA,EAAUsE,KAAO3B,SAAShD,EAASK,YACnF,MAAM,IAAIiG,MAAM,mCAIlB,MAAME,EAAcxD,SAAShD,EAASM,cAChCmG,EAAgBzD,SAAShD,EAASO,gBACxC,GAAImG,MAAMF,IAAgBA,EAAc,EACtC,MAAM,IAAIF,MAAM,8CAElB,GAAII,MAAMD,IAAkBA,EAAgB,EAC1C,MAAM,IAAIH,MAAM,gDAIlB,MAAM9D,EAAcH,wBAAA,GACfrC,GAAQ,IACXyC,OAAQO,SAASlD,GACjBU,KAAMwC,SAAShD,EAASQ,MACxBL,KAAM6C,SAAShD,EAASG,MACxBC,KAAM4C,SAAShD,EAASI,MACxBC,UAAW2C,SAAShD,EAASK,WAC7BC,aAAckG,EACdjG,eAAgBkG,UAIZE,YAAM,kBAAD7D,OAAmBwC,EAAiBX,GAAE,KAAKnC,GAEtDoE,IAAMC,QAAQ,6CACd9G,IACAF,IACA,MAAO+B,GAAM,IAADuB,EAAA2D,EACZjF,QAAQZ,MAAM,uCAAwCW,GACtDV,EAASU,EAAImF,UAAuB,QAAhB5D,EAAIvB,EAAIqB,gBAAQ,IAAAE,GAAM,QAAN2D,EAAZ3D,EAAcC,YAAI,IAAA0D,OAAN,EAAZA,EAAoBC,UAAW,yCACxD,QACC/F,GAAgB,KAIpB,OACE8C,IAAAC,cAACC,QAAK,CAACpE,OAAQA,EAAQC,QAASA,GAC9BiE,IAAAC,cAACE,cAAW,KAAC,6BACbH,IAAAC,cAACG,YAAS,KACPjD,GACC6C,IAAAC,cAAA,OAAKI,UAAU,gFAAgFC,KAAK,SAClGN,IAAAC,cAAA,QAAMI,UAAU,mBAAmBlD,IAGtCsE,EACCzB,IAAAC,cAAA,KAAGI,UAAU,oCAAmC,sBAEhDL,IAAAC,cAAA,QAAMM,SAAU/B,GACdwB,IAAAC,cAAA,OAAKI,UAAU,yCAEbL,IAAAC,cAACO,QAAK,CAACH,UAAU,iBACfL,IAAAC,cAAA,QAAMI,UAAU,oCAAmC,UACnDL,IAAAC,cAACQ,SAAM,CACLtC,KAAK,OACLC,MAAOlC,EAASQ,KAChBgE,SAAUzC,EACVoC,UAAU,OACVM,UAAQ,EACRS,SAAUnE,GAEV+C,IAAAC,cAAA,UAAQ7B,MAAM,IAAG,eAChBzB,EAAgBK,MAAM4D,IAAIlE,GACzBsD,IAAAC,cAAA,UAAQL,IAAKlD,EAAKmE,GAAIzC,MAAO1B,EAAKmE,IAC/BnE,EAAKyB,SAOd6B,IAAAC,cAACO,QAAK,CAACH,UAAU,iBACfL,IAAAC,cAAA,QAAMI,UAAU,oCAAmC,UACnDL,IAAAC,cAACQ,SAAM,CACLtC,KAAK,OACLC,MAAOlC,EAASG,KAChBqE,SAAUzC,EACVoC,UAAU,OACVM,UAAQ,EACRS,SAAUnE,GAEV+C,IAAAC,cAAA,UAAQ7B,MAAM,IAAG,eAChBzB,EAAgBE,MAAM+D,IAAIvE,GACzB2D,IAAAC,cAAA,UAAQL,IAAKvD,EAAKwE,GAAIzC,MAAO/B,EAAKwE,IAC/BxE,EAAK8B,SAOd6B,IAAAC,cAACO,QAAK,CAACH,UAAU,iBACfL,IAAAC,cAAA,QAAMI,UAAU,oCAAmC,UACnDL,IAAAC,cAACQ,SAAM,CACLtC,KAAK,OACLC,MAAOlC,EAASI,KAChBoE,SAAUzC,EACVoC,UAAU,OACVM,UAAQ,EACRS,SAAUnE,GAEV+C,IAAAC,cAAA,UAAQ7B,MAAM,IAAG,eAChBzB,EAAgBG,MAAM8D,IAAItE,GACzB0D,IAAAC,cAAA,UAAQL,IAAKtD,EAAKuE,GAAIzC,MAAO9B,EAAKuE,IAC/BvE,EAAK6B,SAOd6B,IAAAC,cAACO,QAAK,CAACH,UAAU,iBACfL,IAAAC,cAAA,QAAMI,UAAU,oCAAmC,eACnDL,IAAAC,cAACQ,SAAM,CACLtC,KAAK,YACLC,MAAOlC,EAASK,UAChBmE,SAAUzC,EACVoC,UAAU,OACVM,UAAQ,EACRS,SAAUnE,GAEV+C,IAAAC,cAAA,UAAQ7B,MAAM,IAAG,oBAChBzB,EAAgBI,WAAW6D,IAAIrE,GAC9ByD,IAAAC,cAAA,UAAQL,IAAKrD,EAAUsE,GAAIzC,MAAO7B,EAAUsE,IACzCtE,EAAU4B,SAOnB6B,IAAAC,cAACO,QAAK,CAACH,UAAU,iBACfL,IAAAC,cAAA,QAAMI,UAAU,oCAAmC,kBACnDL,IAAAC,cAACa,QAAK,CACJC,KAAK,SACL5C,KAAK,eACLC,MAAOlC,EAASM,aAChBkE,SAAUzC,EACVoC,UAAU,OACVW,YAAY,qBACZkC,IAAI,IACJvC,UAAQ,EACRS,SAAUnE,KAKd+C,IAAAC,cAACO,QAAK,CAACH,UAAU,iBACfL,IAAAC,cAAA,QAAMI,UAAU,oCAAmC,oBACnDL,IAAAC,cAACa,QAAK,CACJC,KAAK,SACL5C,KAAK,iBACLC,MAAOlC,EAASO,eAChBiE,SAAUzC,EACVoC,UAAU,OACVW,YAAY,uBACZkC,IAAI,IACJvC,UAAQ,EACRS,SAAUnE,QAOtB+C,IAAAC,cAACgB,cAAW,KACVjB,IAAAC,cAAA,OAAKI,UAAU,mBACbL,IAAAC,cAACiB,SAAM,CACLC,QAAS3C,EACT4C,SAAUnE,GAAgBwE,GAEzBxE,EAAe,cAAgB,WAKpC+C,IAAAC,cAAA,OAAKI,UAAU,oBACbL,IAAAC,cAACiB,SAAM,CACLG,OAAK,EACLC,KAAK,QACLH,QAAS3C,EACT4C,SAAUnE,GAAgBwE,GAEzBxE,EAAe,cAAgB,c,iBC8C7BkG,UA1Uf,WAAyB,IAADC,EACtB,MAAM,GAAEvC,GAAOwC,cACTC,EAAUC,eAETC,EAAcC,GAAmBrH,mBAAS,OAC1CsH,EAAWC,GAAgBvH,oBAAS,IACpCe,EAAOC,GAAYhB,mBAAS,OAC5BwH,EAAeC,GAAoBzH,mBAAS,OAC5C0H,EAAmBC,GAAwB3H,oBAAS,IACpD4H,EAAiBC,GAAsB7H,oBAAS,IAChD8H,EAAoBC,GAAyB/H,mBAAS,OACtDgI,EAAcC,GAAmBjI,mBAAS,MAEjDiB,oBAAU,KACRiH,IACAC,KACC,CAAC1D,IAEJ,MAAMyD,EAAoBhH,UACxBqG,GAAa,GACbvG,EAAS,MAET,IACE,MAAM+B,QAAiBtB,YAAI,kBAADmB,OAAmB6B,EAAE,MAC/C4C,EAAgBtE,GAChB,MAAOrB,GACPC,QAAQZ,MAAM,qCAAsCW,GACpDV,EAAS,wDACV,QACCuG,GAAa,KAIXY,EAAqBjH,UACzB,IACE,MAAM6B,QAAiBtB,YAAI,WAADmB,OAAY6B,EAAE,MACxCgD,EAAiB1E,GACjB,MAAOrB,GACPC,QAAQZ,MAAM,iCAAkCW,KAsB9C0G,EAAyBC,IAC7BN,EAAsBM,GACtBR,GAAmB,IAGfS,EAA0BpH,UAC9B,IACwBqH,OAAOC,QAAQ,sEAE7BC,YAAQ,kBAAD7F,OAAmB8F,EAAa,MAC7CrB,EAAgBsB,GAAQxG,wBAAA,GACnBwG,GAAQ,IACXC,cAAeD,EAASC,cAAcnG,OAAOoG,GAAQA,EAAKpE,KAAOiE,MAEnEhC,IAAMC,QAAQ,8CAEhB,MAAO5F,GACPY,QAAQZ,MAAM,uCAAwCA,GACtD2F,IAAM3F,MAAM,8DAIV+H,EAAgBrE,IACpBwD,EAAgBD,IAAiBvD,EAAK,KAAOA,IAG/C,OACDb,IAAAC,cAAA,OAAKI,UAAU,6BAERL,IAAAC,cAAA,OACEkF,IAAKC,IACLC,IAAI,YACJhF,UAAU,2CACViF,MAAO,CACLC,IAAK,MACLC,KAAM,MACNC,SAAU,WACVC,UAAW,wBACXC,MAAO,OACPC,SAAU,QACVC,OAAQ,OACRC,QAAS,IACTC,OAAQ,KAKZ/F,IAAAC,cAAA,OAAKI,UAAU,iBAAgB,SACjCL,IAAAC,cAAA,OAAKI,UAAU,0CACbL,IAAAC,cAAA,OAAKI,UAAU,qBACbL,IAAAC,cAAA,UAAQkB,QAnEQ6E,KACtB1C,EAAQ2C,UAkEgC5F,UAAU,QAC1CL,IAAAC,cAACiG,IAAkB,CAAC7F,UAAU,6BAEhCL,IAAAC,cAAA,MACEqF,MAAO,CACLa,SAAUxB,OAAOyB,WAAa,IAAM,UAAY,UAElD/F,UAAU,iCACX,gBAEEuD,GAAa,MAAA5E,OAAU4E,EAAcyC,eAG1CrG,IAAAC,cAAA,UACEkB,QA7EqBmF,KAC3BvC,GAAqB,IA6Ef1D,UAAU,wDACViF,MAAO,CACLa,SAAUxB,OAAOyB,WAAa,IAAM,WAAa,OACjDG,QAAS5B,OAAOyB,WAAa,IAAM,cAAgB,iBAGrDpG,IAAAC,cAACuG,IAAmB,CAClBnG,UAAS,QAAArB,OAAU2F,OAAOyB,WAAa,IAAM,UAAY,aACzD,QAML1C,EACC1D,IAAAC,cAAA,OAAKI,UAAU,4BACbL,IAAAC,cAAA,KAAGI,UAAU,oCAAmC,oBAEhDlD,EACF6C,IAAAC,cAAA,OAAKI,UAAU,oBACbL,IAAAC,cAAA,KAAGI,UAAU,gBAAgBlD,GAC7B6C,IAAAC,cAAA,UACEkB,QAASmD,EACTjE,UAAU,mDACX,UAKHL,IAAAC,cAAAD,IAAAyG,SAAA,KAEEzG,IAAAC,cAACyG,iBAAc,CAACrG,UAAU,wBACxBL,IAAAC,cAAC0G,QAAK,KACJ3G,IAAAC,cAAC2G,cAAW,KACV5G,IAAAC,cAAA,UACED,IAAAC,cAAC4G,YAAS,KAAC,MACX7G,IAAAC,cAAC4G,YAAS,KAAC,QACX7G,IAAAC,cAAC4G,YAAS,KAAC,aACX7G,IAAAC,cAAC4G,YAAS,KAAC,QACX7G,IAAAC,cAAC4G,YAAS,KAAC,gBACX7G,IAAAC,cAAC4G,YAAS,KAAC,kBACX7G,IAAAC,cAAC4G,YAAS,KAAC,QACX7G,IAAAC,cAAC4G,YAAS,CAACxG,UAAU,cAAa,aAGtCL,IAAAC,cAAC6G,YAAS,KACK,OAAZtD,QAAY,IAAZA,GAA2B,QAAfJ,EAAZI,EAAcwB,qBAAa,IAAA5B,OAAf,EAAZA,EAA6BxC,IAAI,CAACqE,EAAM8B,IACvC/G,IAAAC,cAAC+G,WAAQ,CAACpH,IAAKqF,EAAKpE,IAClBb,IAAAC,cAAC4G,YAAS,KACR7G,IAAAC,cAAA,QAAMI,UAAU,WAAW0G,EAAQ,IAErC/G,IAAAC,cAAC4G,YAAS,KACR7G,IAAAC,cAAA,QAAMI,UAAU,uBAAuB4E,EAAKgC,WAAa,QAE3DjH,IAAAC,cAAC4G,YAAS,KACR7G,IAAAC,cAAA,QAAMI,UAAU,WAAW4E,EAAKiC,gBAAkB,QAEpDlH,IAAAC,cAAC4G,YAAS,KACR7G,IAAAC,cAAA,QAAMI,UAAU,WAAW4E,EAAKkC,WAAa,QAE/CnH,IAAAC,cAAC4G,YAAS,KACR7G,IAAAC,cAAA,QAAMI,UAAU,uBACQ,MAArB4E,EAAKzI,aAAuByI,EAAKzI,aAAe,QAGrDwD,IAAAC,cAAC4G,YAAS,KACR7G,IAAAC,cAAA,QAAMI,UAAU,uBACU,MAAvB4E,EAAKxI,eAAyBwI,EAAKxI,eAAiB,QAGzDuD,IAAAC,cAAC4G,YAAS,KACR7G,IAAAC,cAAA,QAAMI,UAAU,WAAW4E,EAAKmC,WAAa,QAE/CpH,IAAAC,cAAC4G,YAAS,CAACxG,UAAU,cACnBL,IAAAC,cAAA,UACEkB,QAASA,IAAMqD,EAAsBS,GACrC5E,UAAU,sFAEVL,IAAAC,cAACoH,IAAa,CAAChH,UAAU,0BAE3BL,IAAAC,cAAA,UACEkB,QAASA,IAAMuD,EAAwBO,EAAKpE,IAC5CR,UAAU,+EAEVL,IAAAC,cAACqH,IAAe,CAACjH,UAAU,gCAUzCL,IAAAC,cAAA,OAAKI,UAAU,wBACC,OAAZmD,QAAY,IAAZA,OAAY,EAAZA,EAAcwB,gBAAuD,IAAtCxB,EAAawB,cAAcjG,OAK1DyE,EAAawB,cAAcpE,IAAI,CAACqE,EAAM8B,IACpC/G,IAAAC,cAAA,OACEL,IAAKqF,EAAKpE,GACVR,UAAU,8EAEVL,IAAAC,cAAA,OACEI,UAAU,uDACVc,QAASA,IAAM+D,EAAaD,EAAKpE,KAEjCb,IAAAC,cAAA,OAAKI,UAAU,+BACbL,IAAAC,cAAA,OAAKI,UAAU,mIACZ0G,EAAQ,GAEX/G,IAAAC,cAAA,OAAKI,UAAU,gDAAgD4E,EAAKgC,WAAa,QAEnFjH,IAAAC,cAAA,UACEkB,QAAUjD,IACRA,EAAEqJ,kBACFrC,EAAaD,EAAKpE,KAEpBR,UAAU,oCAEVL,IAAAC,cAACuH,IAAa,CACZnH,UAAS,gCAAArB,OAAkCoF,IAAiBa,EAAKpE,GAAK,aAAe,QAK1FuD,IAAiBa,EAAKpE,IACrBb,IAAAC,cAAA,OAAKI,UAAU,gDACbL,IAAAC,cAAA,OAAKI,UAAU,kBACbL,IAAAC,cAAA,WACED,IAAAC,cAAA,KAAGI,UAAU,iDAAgD,cAC7DL,IAAAC,cAAA,KAAGI,UAAU,4CAA4C4E,EAAKiC,gBAAkB,QAElFlH,IAAAC,cAAA,WACED,IAAAC,cAAA,KAAGI,UAAU,iDAAgD,SAC7DL,IAAAC,cAAA,KAAGI,UAAU,4CAA4C4E,EAAKkC,WAAa,QAE7EnH,IAAAC,cAAA,WACED,IAAAC,cAAA,KAAGI,UAAU,iDAAgD,iBAC7DL,IAAAC,cAAA,KAAGI,UAAU,4CACW,MAArB4E,EAAKzI,aAAuByI,EAAKzI,aAAe,QAGrDwD,IAAAC,cAAA,WACED,IAAAC,cAAA,KAAGI,UAAU,iDAAgD,mBAC7DL,IAAAC,cAAA,KAAGI,UAAU,4CACa,MAAvB4E,EAAKxI,eAAyBwI,EAAKxI,eAAiB,QAGzDuD,IAAAC,cAAA,WACED,IAAAC,cAAA,KAAGI,UAAU,iDAAgD,SAC7DL,IAAAC,cAAA,KAAGI,UAAU,4CAA4C4E,EAAKmC,WAAa,SAG/EpH,IAAAC,cAAA,OAAKI,UAAU,mCACbL,IAAAC,cAAA,UACEkB,QAASA,IAAMqD,EAAsBS,GACrC5E,UAAU,2HAEVL,IAAAC,cAACoH,IAAa,CAAChH,UAAU,iBAAiB,QAG5CL,IAAAC,cAAA,UACEkB,QAASA,IAAMuD,EAAwBO,EAAKpE,IAC5CR,UAAU,uHAEVL,IAAAC,cAACqH,IAAe,CAACjH,UAAU,iBAAiB,cAxExDL,IAAAC,cAAA,OAAKI,UAAU,oBACbL,IAAAC,cAAA,KAAGI,UAAU,oCAAmC,qCAqFzDyD,GACC9D,IAAAC,cAACrE,EAAuB,CACtBE,OAAQgI,EACR/H,QAnQuB0L,KAC7B1D,GAAqB,IAmQf/H,SAAU6E,EACV5E,UAAWqI,IAIdN,GAAmBE,GAClBlE,IAAAC,cAACsB,EAAqB,CACpBzF,OAAQkI,EACRjI,QAxQqB2L,KAC3BzD,GAAmB,GACnBE,EAAsB,OAuQhBnI,SAAU6E,EACVW,iBAAkB0C,EAClBjI,UAAWqI,Q,gCCzVrB,2PAGA,IAAIqD,EAAW,iCAKb5J,QAAQ6J,IAAI,8BACZD,EAAW,iCAMb,MAAME,EAAgBC,IAAMC,OAAO,CACjCC,QAASL,EACTM,QAAS,CACP,eAAgB,sBAIpBJ,EAAcK,aAAaC,QAAQC,IAChCC,IACC,MAAMC,EAAQC,aAAaC,QAAQ,eAInC,OAHIF,IACFD,EAAOJ,QAAuB,cAAC,UAAAjJ,OAAasJ,IAEvCD,GAERlL,GACQQ,QAAQ8K,OAAOtL,IAI1B0K,EAAcK,aAAa/I,SAASiJ,IACjCjJ,GAAaA,EACd7B,UAEMH,EAAMgC,UAAsC,MAA1BhC,EAAMgC,SAASuJ,SACnCH,aAAaI,QACbhE,OAAOiE,SAASC,KAAO,KAElBlL,QAAQ8K,OAAOtL,KAInB,MAAMU,EAAMP,MAAOwL,EAAKC,IACtBlB,EAAchK,IAAIiL,EAAK,CAAEC,WAAUC,KAAMC,GAAQA,EAAI3J,MAGjDF,EAAO9B,MAAOwL,EAAKxJ,IACvBuI,EAAczI,KAAK0J,EAAKxJ,GAAM0J,KAAMC,GAAQA,EAAI3J,MAG5C4J,EAAM5L,MAAOwL,EAAKxJ,IACtBuI,EAAcqB,IAAIJ,EAAKxJ,GAAM0J,KAAMC,GAAQA,EAAI3J,MAG3CuD,EAAQvF,MAAOwL,EAAKxJ,IACxBuI,EAAchF,MAAMiG,EAAKxJ,GAAM0J,KAAMC,GAAQA,EAAI3J,MAG7CuF,EAAUvH,SACduK,EAAcsB,OAAOL,GAAKE,KAAMC,GAAQA,EAAI3J,MAGxC8J,EAAe9L,MAAOwL,EAAKO,KACtC,IACE,MAAMlK,QAAiB0I,EAAchK,IAAIiL,EAAK,CAC5CQ,aAAc,SAGVC,EAAO,IAAIC,KAAK,CAACrK,EAASG,MAAO,CAAEyB,KAAM,oBACzC0I,EAAU9E,OAAO+E,IAAIC,gBAAgBJ,GAErCK,EAAOC,SAAS5J,cAAc,KACpC2J,EAAKf,KAAOY,EACZG,EAAKE,aAAa,WAAYT,GAC9BQ,SAASE,KAAKC,YAAYJ,GAC1BA,EAAKK,QACLL,EAAKM,SACLvF,OAAO+E,IAAIS,gBAAgBV,GAC3B,MAAO3L,GAEP,MADAC,QAAQZ,MAAM,mBAAoBW,GAC5BA,IAIGsM,EAAiB9M,MAAOwL,EAAK5M,KACxC,IAME,aALuB2L,EAAczI,KAAK0J,EAAK5M,EAAU,CACvD+L,QAAS,CACP,eAAgB,0BAGJ3I,KAChB,MAAOxB,GAEP,MADAC,QAAQZ,MAAM,sBAAuBW,GAC/BA","file":"static/js/27.3e8b8181.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n  Input,\r\n  Label,\r\n  Select\r\n} from '@windmill/react-ui';\r\nimport { get, post } from '../api/axios';\r\n\r\nconst CreateLeftoverDegsModal = ({ \r\n  isOpen, \r\n  onClose, \r\n  miqaatId, \r\n  onSuccess \r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    menu: '',\r\n    unit: '',\r\n    container: '',\r\n    total_cooked: '',\r\n    total_received: '',\r\n    zone: ''\r\n  });\r\n\r\n  const [dropdownOptions, setDropdownOptions] = useState({\r\n    menus: [],\r\n    units: [],\r\n    containers: [],\r\n    zones: []\r\n  });\r\n\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch dropdown options\r\n  useEffect(() => {\r\n    const fetchDropdownOptions = async () => {\r\n      try {\r\n        const [menusRes, unitsRes, containersRes, zonesRes] = await Promise.all([\r\n          get('/menu/list/'),\r\n          get('/unit/list/'),\r\n          get('/container/list/'),\r\n          get('/zone/list/')\r\n        ]);\r\n\r\n        setDropdownOptions({\r\n          menus: menusRes,\r\n          units: unitsRes,\r\n          containers: containersRes,\r\n          zones: zonesRes\r\n        });\r\n      } catch (err) {\r\n        console.error('Error fetching dropdown options:', err);\r\n        setError('Failed to load dropdown options');\r\n      }\r\n    };\r\n\r\n    if (isOpen) {\r\n      fetchDropdownOptions();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n    setError(null);\r\n\r\n    try {\r\n      // Prepare submission data\r\n      const submissionData = {\r\n        ...formData,\r\n        miqaat: miqaatId\r\n      };\r\n\r\n      // Validate required fields\r\n      const requiredFields = ['menu', 'unit', 'container', 'total_cooked', 'total_received', 'zone'];\r\n      const missingFields = requiredFields.filter(field => !submissionData[field]);\r\n      \r\n      if (missingFields.length > 0) {\r\n        setError(`Please fill in all required fields: ${missingFields.join(', ')}`);\r\n        setIsSubmitting(false);\r\n        return;\r\n      }\r\n\r\n      // Convert string numbers to integers for backend\r\n      submissionData.menu = parseInt(submissionData.menu, 10);\r\n      submissionData.unit = parseInt(submissionData.unit, 10);\r\n      submissionData.container = parseInt(submissionData.container, 10);\r\n      submissionData.zone = parseInt(submissionData.zone, 10);\r\n      submissionData.total_cooked = parseInt(submissionData.total_cooked, 10);\r\n      submissionData.total_received = parseInt(submissionData.total_received, 10);\r\n      submissionData.miqaat = parseInt(submissionData.miqaat, 10);\r\n\r\n      // Submit data\r\n      const response = await post('/leftover-degs/', submissionData);\r\n      \r\n      // Call success callback\r\n      onSuccess(response);\r\n      \r\n      // Reset form and close modal\r\n      setFormData({\r\n        menu: '',\r\n        unit: '',\r\n        container: '',\r\n        total_cooked: '',\r\n        total_received: '',\r\n        zone: ''\r\n      });\r\n      onClose();\r\n    } catch (err) {\r\n      console.error('Error creating leftover degs:', err);\r\n      \r\n      // Handle validation errors from backend\r\n      if (err.response?.data) {\r\n        const errorMessages = [];\r\n        const errorData = err.response.data;\r\n        \r\n        Object.keys(errorData).forEach(key => {\r\n          if (Array.isArray(errorData[key])) {\r\n            errorMessages.push(`${key}: ${errorData[key].join(', ')}`);\r\n          }\r\n        });\r\n        \r\n        if (errorMessages.length > 0) {\r\n          setError(errorMessages.join('; '));\r\n        } else {\r\n          setError('Failed to create leftover degs. Please check your input.');\r\n        }\r\n      } else {\r\n        setError('Failed to create leftover degs');\r\n      }\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose}>\r\n      <ModalHeader>Create Leftover Degs</ModalHeader>\r\n      <ModalBody>\r\n        {error && (\r\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">\r\n            <span className=\"block sm:inline\">{error}</span>\r\n          </div>\r\n        )}\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"grid grid-cols-2 gap-4\">\r\n            {/* Menu Dropdown */}\r\n            <Label className=\"block text-sm\">\r\n              <span className=\"text-gray-700 dark:text-gray-400\">Menu</span>\r\n              <Select\r\n                name=\"menu\"\r\n                value={formData.menu}\r\n                onChange={handleInputChange}\r\n                className=\"mt-1\"\r\n                required\r\n              >\r\n                <option value=\"\">Select Menu</option>\r\n                {dropdownOptions.menus.map(menu => (\r\n                  <option key={menu.id} value={menu.id}>\r\n                    {menu.name}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n            </Label>\r\n\r\n            {/* Unit Dropdown */}\r\n            <Label className=\"block text-sm\">\r\n              <span className=\"text-gray-700 dark:text-gray-400\">Unit</span>\r\n              <Select\r\n                name=\"unit\"\r\n                value={formData.unit}\r\n                onChange={handleInputChange}\r\n                className=\"mt-1\"\r\n                required\r\n              >\r\n                <option value=\"\">Select Unit</option>\r\n                {dropdownOptions.units.map(unit => (\r\n                  <option key={unit.id} value={unit.id}>\r\n                    {unit.name}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n            </Label>\r\n\r\n            {/* Container Dropdown */}\r\n            <Label className=\"block text-sm\">\r\n              <span className=\"text-gray-700 dark:text-gray-400\">Container</span>\r\n              <Select\r\n                name=\"container\"\r\n                value={formData.container}\r\n                onChange={handleInputChange}\r\n                className=\"mt-1\"\r\n                required\r\n              >\r\n                <option value=\"\">Select Container</option>\r\n                {dropdownOptions.containers.map(container => (\r\n                  <option key={container.id} value={container.id}>\r\n                    {container.name}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n            </Label>\r\n\r\n            {/* Zone Dropdown */}\r\n            <Label className=\"block text-sm\">\r\n              <span className=\"text-gray-700 dark:text-gray-400\">Zone</span>\r\n              <Select\r\n                name=\"zone\"\r\n                value={formData.zone}\r\n                onChange={handleInputChange}\r\n                className=\"mt-1\"\r\n                required\r\n              >\r\n                <option value=\"\">Select Zone</option>\r\n                {dropdownOptions.zones.map(zone => (\r\n                  <option key={zone.id} value={zone.id}>\r\n                    {zone.name}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n            </Label>\r\n\r\n            {/* Total Cooked Input */}\r\n            <Label className=\"block text-sm\">\r\n              <span className=\"text-gray-700 dark:text-gray-400\">Total Cooked</span>\r\n              <Input\r\n                type=\"number\"\r\n                name=\"total_cooked\"\r\n                value={formData.total_cooked}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Enter total cooked\"\r\n                className=\"mt-1\"\r\n                required\r\n              />\r\n            </Label>\r\n\r\n            {/* Total Received Input */}\r\n            <Label className=\"block text-sm\">\r\n              <span className=\"text-gray-700 dark:text-gray-400\">Total Received</span>\r\n              <Input\r\n                type=\"number\"\r\n                name=\"total_received\"\r\n                value={formData.total_received}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Enter total received\"\r\n                className=\"mt-1\"\r\n                required\r\n              />\r\n            </Label>\r\n          </div>\r\n        </form>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        \r\n        <div className=\"hidden sm:block\">\r\n          <Button \r\n            onClick={handleSubmit} \r\n            disabled={isSubmitting}\r\n          >\r\n            {isSubmitting ? 'Creating...' : 'Create'}\r\n          </Button>\r\n        </div>\r\n        \r\n        {/* Mobile buttons */}\r\n        <div className=\"w-full sm:hidden\">\r\n         \r\n          <Button \r\n            block \r\n            size=\"large\" \r\n            onClick={handleSubmit}\r\n            disabled={isSubmitting}\r\n          >\r\n            {isSubmitting ? 'Creating...' : 'Create'}\r\n          </Button>\r\n        </div>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateLeftoverDegsModal;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n  Input,\r\n  Label,\r\n  Select\r\n} from '@windmill/react-ui';\r\nimport { get, patch } from '../api/axios';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst EditLeftoverDegsModal = ({ \r\n  isOpen, \r\n  onClose, \r\n  miqaatId, \r\n  leftoverDegsData,\r\n  onSuccess \r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    miqaat: miqaatId,\r\n    zone: '',\r\n    menu: '',\r\n    unit: '',\r\n    container: '',\r\n    total_cooked: '',\r\n    total_received: ''\r\n  });\r\n\r\n  const [dropdownOptions, setDropdownOptions] = useState({\r\n    zones: [],\r\n    menus: [],\r\n    units: [],\r\n    containers: []\r\n  });\r\n\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [isDropdownLoading, setIsDropdownLoading] = useState(false);\r\n\r\n  // Fetch dropdown options when modal opens\r\n  useEffect(() => {\r\n    const fetchDropdownOptions = async () => {\r\n      setIsDropdownLoading(true);\r\n      try {\r\n        const [zonesRes, menusRes, unitsRes, containersRes] = await Promise.all([\r\n          get('/zone/list/'),\r\n          get('/menu/list/'),\r\n          get('/unit/list/'),\r\n          get('/container/list/')\r\n        ]);\r\n\r\n        setDropdownOptions({\r\n          zones: Array.isArray(zonesRes) ? zonesRes : zonesRes.results || [],\r\n          menus: Array.isArray(menusRes) ? menusRes : menusRes.results || [],\r\n          units: Array.isArray(unitsRes) ? unitsRes : unitsRes.results || [],\r\n          containers: Array.isArray(containersRes) ? containersRes : containersRes.results || []\r\n        });\r\n      } catch (err) {\r\n        console.error('Error fetching dropdown options:', err);\r\n        setError('Failed to load dropdown options');\r\n      } finally {\r\n        setIsDropdownLoading(false);\r\n      }\r\n    };\r\n\r\n    if (isOpen) {\r\n      fetchDropdownOptions();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  // Set form data after dropdown options are loaded or leftoverDegsData changes\r\n  useEffect(() => {\r\n    if (leftoverDegsData && !isDropdownLoading) {\r\n      setFormData({\r\n        miqaat: miqaatId,\r\n        zone: leftoverDegsData.zone_id || (leftoverDegsData.zone?.id ?? ''),\r\n        menu: leftoverDegsData.menu_id || (leftoverDegsData.menu?.id ?? ''),\r\n        unit: leftoverDegsData.unit_id || (leftoverDegsData.unit?.id ?? ''),\r\n        container: leftoverDegsData.container_id || (leftoverDegsData.container?.id ?? ''),\r\n        total_cooked: leftoverDegsData.total_cooked || '',\r\n        total_received: leftoverDegsData.total_received || ''\r\n      });\r\n    }\r\n  }, [leftoverDegsData, miqaatId, isDropdownLoading]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n    setError(null);\r\n\r\n    try {\r\n      // Validate required fields\r\n      const requiredFields = ['zone', 'menu', 'unit', 'container', 'total_cooked', 'total_received'];\r\n      const missingFields = requiredFields.filter(field => !formData[field]);\r\n      \r\n      if (missingFields.length > 0) {\r\n        throw new Error(`Please fill in all required fields: ${missingFields.join(', ')}`);\r\n      }\r\n\r\n      // Validate dropdown selections\r\n      if (!dropdownOptions.zones.some(zone => zone.id === parseInt(formData.zone))) {\r\n        throw new Error('Please select a valid zone');\r\n      }\r\n      if (!dropdownOptions.menus.some(menu => menu.id === parseInt(formData.menu))) {\r\n        throw new Error('Please select a valid menu');\r\n      }\r\n      if (!dropdownOptions.units.some(unit => unit.id === parseInt(formData.unit))) {\r\n        throw new Error('Please select a valid unit');\r\n      }\r\n      if (!dropdownOptions.containers.some(container => container.id === parseInt(formData.container))) {\r\n        throw new Error('Please select a valid container');\r\n      }\r\n\r\n      // Validate numeric fields\r\n      const totalCooked = parseInt(formData.total_cooked);\r\n      const totalReceived = parseInt(formData.total_received);\r\n      if (isNaN(totalCooked) || totalCooked < 0) {\r\n        throw new Error('Total cooked must be a non-negative number');\r\n      }\r\n      if (isNaN(totalReceived) || totalReceived < 0) {\r\n        throw new Error('Total received must be a non-negative number');\r\n      }\r\n\r\n      // Prepare submission data\r\n      const submissionData = {\r\n        ...formData,\r\n        miqaat: parseInt(miqaatId),\r\n        zone: parseInt(formData.zone),\r\n        menu: parseInt(formData.menu),\r\n        unit: parseInt(formData.unit),\r\n        container: parseInt(formData.container),\r\n        total_cooked: totalCooked,\r\n        total_received: totalReceived\r\n      };\r\n\r\n      // Submit the form\r\n      await patch(`/leftover-degs/${leftoverDegsData.id}/`, submissionData);\r\n      \r\n      toast.success('Leftover degs record updated successfully');\r\n      onSuccess();\r\n      onClose();\r\n    } catch (err) {\r\n      console.error('Error updating leftover degs record:', err);\r\n      setError(err.message || err.response?.data?.message || 'Failed to update leftover degs record');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose}>\r\n      <ModalHeader>Edit Leftover Degs Record</ModalHeader>\r\n      <ModalBody>\r\n        {error && (\r\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">\r\n            <span className=\"block sm:inline\">{error}</span>\r\n          </div>\r\n        )}\r\n        {isDropdownLoading ? (\r\n          <p className=\"text-gray-700 dark:text-gray-400\">Loading options...</p>\r\n        ) : (\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              {/* Zone Dropdown */}\r\n              <Label className=\"block text-sm\">\r\n                <span className=\"text-gray-700 dark:text-gray-400\">Zone *</span>\r\n                <Select\r\n                  name=\"zone\"\r\n                  value={formData.zone}\r\n                  onChange={handleInputChange}\r\n                  className=\"mt-1\"\r\n                  required\r\n                  disabled={isSubmitting}\r\n                >\r\n                  <option value=\"\">Select Zone</option>\r\n                  {dropdownOptions.zones.map(zone => (\r\n                    <option key={zone.id} value={zone.id}>\r\n                      {zone.name}\r\n                    </option>\r\n                  ))}\r\n                </Select>\r\n              </Label>\r\n\r\n              {/* Menu Dropdown */}\r\n              <Label className=\"block text-sm\">\r\n                <span className=\"text-gray-700 dark:text-gray-400\">Menu *</span>\r\n                <Select\r\n                  name=\"menu\"\r\n                  value={formData.menu}\r\n                  onChange={handleInputChange}\r\n                  className=\"mt-1\"\r\n                  required\r\n                  disabled={isSubmitting}\r\n                >\r\n                  <option value=\"\">Select Menu</option>\r\n                  {dropdownOptions.menus.map(menu => (\r\n                    <option key={menu.id} value={menu.id}>\r\n                      {menu.name}\r\n                    </option>\r\n                  ))}\r\n                </Select>\r\n              </Label>\r\n\r\n              {/* Unit Dropdown */}\r\n              <Label className=\"block text-sm\">\r\n                <span className=\"text-gray-700 dark:text-gray-400\">Unit *</span>\r\n                <Select\r\n                  name=\"unit\"\r\n                  value={formData.unit}\r\n                  onChange={handleInputChange}\r\n                  className=\"mt-1\"\r\n                  required\r\n                  disabled={isSubmitting}\r\n                >\r\n                  <option value=\"\">Select Unit</option>\r\n                  {dropdownOptions.units.map(unit => (\r\n                    <option key={unit.id} value={unit.id}>\r\n                      {unit.name}\r\n                    </option>\r\n                  ))}\r\n                </Select>\r\n              </Label>\r\n\r\n              {/* Container Dropdown */}\r\n              <Label className=\"block text-sm\">\r\n                <span className=\"text-gray-700 dark:text-gray-400\">Container *</span>\r\n                <Select\r\n                  name=\"container\"\r\n                  value={formData.container}\r\n                  onChange={handleInputChange}\r\n                  className=\"mt-1\"\r\n                  required\r\n                  disabled={isSubmitting}\r\n                >\r\n                  <option value=\"\">Select Container</option>\r\n                  {dropdownOptions.containers.map(container => (\r\n                    <option key={container.id} value={container.id}>\r\n                      {container.name}\r\n                    </option>\r\n                  ))}\r\n                </Select>\r\n              </Label>\r\n\r\n              {/* Total Cooked Input */}\r\n              <Label className=\"block text-sm\">\r\n                <span className=\"text-gray-700 dark:text-gray-400\">Total Cooked *</span>\r\n                <Input \r\n                  type=\"number\"\r\n                  name=\"total_cooked\"\r\n                  value={formData.total_cooked}\r\n                  onChange={handleInputChange}\r\n                  className=\"mt-1\"\r\n                  placeholder=\"Enter total cooked\"\r\n                  min=\"0\"\r\n                  required\r\n                  disabled={isSubmitting}\r\n                />\r\n              </Label>\r\n\r\n              {/* Total Received Input */}\r\n              <Label className=\"block text-sm\">\r\n                <span className=\"text-gray-700 dark:text-gray-400\">Total Received *</span>\r\n                <Input \r\n                  type=\"number\"\r\n                  name=\"total_received\"\r\n                  value={formData.total_received}\r\n                  onChange={handleInputChange}\r\n                  className=\"mt-1\"\r\n                  placeholder=\"Enter total received\"\r\n                  min=\"0\"\r\n                  required\r\n                  disabled={isSubmitting}\r\n                />\r\n              </Label>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <div className=\"hidden sm:block\">\r\n          <Button \r\n            onClick={handleSubmit} \r\n            disabled={isSubmitting || isDropdownLoading}\r\n          >\r\n            {isSubmitting ? 'Updating...' : 'Update'}\r\n          </Button>\r\n        </div>\r\n        \r\n        {/* Mobile buttons */}\r\n        <div className=\"w-full sm:hidden\">\r\n          <Button \r\n            block \r\n            size=\"large\" \r\n            onClick={handleSubmit}\r\n            disabled={isSubmitting || isDropdownLoading}\r\n          >\r\n            {isSubmitting ? 'Updating...' : 'Update'}\r\n          </Button>\r\n        </div>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditLeftoverDegsModal;","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { get, _delete } from '../api/axios';\r\nimport {\r\n  Table,\r\n  TableHeader,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  TableContainer,\r\n} from '@windmill/react-ui';\r\nimport {\r\n  AiOutlinePlusCircle,\r\n  AiOutlineArrowLeft,\r\n  AiOutlineDelete,\r\n  AiOutlineEdit,\r\n  AiOutlineDown,\r\n} from 'react-icons/ai';\r\nimport CreateLeftoverDegsModal from './CreateLeftoverDegsModal';\r\nimport EditLeftoverDegsModal from '../components/EditLeftoverDegsModal';\r\nimport toast from 'react-hot-toast';\r\nimport logo from '../assets/img/mainLogo.png';\r\n\r\nfunction LeftoverDegs() {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const [leftoverData, setLeftoverData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [miqaatDetails, setMiqaatDetails] = useState(null);\r\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n  const [currentLeftoverDeg, setCurrentLeftoverDeg] = useState(null);\r\n  const [expandedItem, setExpandedItem] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchLeftoverData();\r\n    fetchMiqaatDetails();\r\n  }, [id]);\r\n\r\n  const fetchLeftoverData = async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await get(`/leftover-degs/${id}/`);\r\n      setLeftoverData(response);\r\n    } catch (err) {\r\n      console.error('Error fetching leftover degs data:', err);\r\n      setError('Failed to load leftover degs data. Please try again.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchMiqaatDetails = async () => {\r\n    try {\r\n      const response = await get(`/miqaat/${id}/`);\r\n      setMiqaatDetails(response);\r\n    } catch (err) {\r\n      console.error('Error fetching miqaat details:', err);\r\n      // Don't set error state to avoid blocking UI\r\n    }\r\n  };\r\n\r\n  const handleBackClick = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const handleAddLeftoverDeg = () => {\r\n    setIsCreateModalOpen(true);\r\n  };\r\n\r\n  const handleCreateModalClose = () => {\r\n    setIsCreateModalOpen(false);\r\n  };\r\n\r\n  const handleEditModalClose = () => {\r\n    setIsEditModalOpen(false);\r\n    setCurrentLeftoverDeg(null);\r\n  };\r\n\r\n  const handleEditLeftoverDeg = (leftoverDegItem) => {\r\n    setCurrentLeftoverDeg(leftoverDegItem);\r\n    setIsEditModalOpen(true);\r\n  };\r\n\r\n  const handleDeleteLeftoverDeg = async (leftoverDegId) => {\r\n    try {\r\n      const confirmDelete = window.confirm('Are you sure you want to delete this leftover degs record?');\r\n      if (confirmDelete) {\r\n        await _delete(`/leftover-degs/${leftoverDegId}/`);\r\n        setLeftoverData(prevData => ({\r\n          ...prevData,\r\n          leftover_degs: prevData.leftover_degs.filter(item => item.id !== leftoverDegId),\r\n        }));\r\n        toast.success('Leftover degs record deleted successfully');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting leftover degs record:', error);\r\n      toast.error('Failed to delete leftover degs record. Please try again.');\r\n    }\r\n  };\r\n\r\n  const toggleExpand = (id) => {\r\n    setExpandedItem(expandedItem === id ? null : id);\r\n  };\r\n\r\n  return (\r\n <div className=\"relative w-full px-4 py-6\">\r\n        {/* Watermark Logo */}\r\n        <img\r\n          src={logo}\r\n          alt=\"Watermark\"\r\n          className=\"absolute pointer-events-none select-none\"\r\n          style={{\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            position: \"absolute\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            width: \"70vw\",\r\n            maxWidth: \"400px\",\r\n            height: \"auto\",\r\n            opacity: 0.05,\r\n            zIndex: 0,\r\n          }}\r\n        />\r\n    \r\n        {/* Content Overlay */}\r\n        <div className=\"relative z-10\">      {/* Header */}\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <div className=\"flex items-center\">\r\n          <button onClick={handleBackClick} className=\"mr-4\">\r\n            <AiOutlineArrowLeft className=\"w-5 h-5 dark:text-white\" />\r\n          </button>\r\n          <h1\r\n            style={{\r\n              fontSize: window.innerWidth < 768 ? '1.25rem' : '1.5rem',\r\n            }}\r\n            className=\"font-semibold dark:text-white\"\r\n          >\r\n            Leftover Degs\r\n            {miqaatDetails && ` - ${miqaatDetails.miqaat_name}`}\r\n          </h1>\r\n        </div>\r\n        <button\r\n          onClick={handleAddLeftoverDeg}\r\n          className=\"flex items-center bg-purple-600 text-white rounded-lg\"\r\n          style={{\r\n            fontSize: window.innerWidth < 768 ? '0.875rem' : '1rem',\r\n            padding: window.innerWidth < 768 ? '0.5rem 1rem' : '0.75rem 1rem',\r\n          }}\r\n        >\r\n          <AiOutlinePlusCircle\r\n            className={`mr-1 ${window.innerWidth < 768 ? 'w-3 h-3' : 'w-4 h-4'}`}\r\n          />\r\n          Add\r\n        </button>\r\n      </div>\r\n\r\n      {/* Loading State */}\r\n      {isLoading ? (\r\n        <div className=\"flex justify-center my-8\">\r\n          <p className=\"text-gray-700 dark:text-gray-400\">Loading data...</p>\r\n        </div>\r\n      ) : error ? (\r\n        <div className=\"text-center py-8\">\r\n          <p className=\"text-red-600\">{error}</p>\r\n          <button\r\n            onClick={fetchLeftoverData}\r\n            className=\"mt-4 bg-purple-600 text-white px-4 py-2 rounded\"\r\n          >\r\n            Retry\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {/* Desktop Table - Hidden on mobile */}\r\n          <TableContainer className=\"hidden md:block mb-8\">\r\n            <Table>\r\n              <TableHeader>\r\n                <tr>\r\n                  <TableCell>ID</TableCell>\r\n                  <TableCell>Menu</TableCell>\r\n                  <TableCell>Container</TableCell>\r\n                  <TableCell>Unit</TableCell>\r\n                  <TableCell>Total Cooked</TableCell>\r\n                  <TableCell>Total Received</TableCell>\r\n                  <TableCell>Zone</TableCell>\r\n                  <TableCell className=\"text-right\">Actions</TableCell>\r\n                </tr>\r\n              </TableHeader>\r\n              <TableBody>\r\n                {leftoverData?.leftover_degs?.map((item, index) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell>\r\n                      <span className=\"text-sm\">{index + 1}</span>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <span className=\"text-sm font-medium\">{item.menu_name || 'N/A'}</span>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <span className=\"text-sm\">{item.container_name || 'N/A'}</span>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <span className=\"text-sm\">{item.unit_name || 'N/A'}</span>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <span className=\"text-sm font-medium\">\r\n                        {item.total_cooked != null ? item.total_cooked : 'N/A'}\r\n                      </span>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <span className=\"text-sm font-medium\">\r\n                        {item.total_received != null ? item.total_received : 'N/A'}\r\n                      </span>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <span className=\"text-sm\">{item.zone_name || 'N/A'}</span>\r\n                    </TableCell>\r\n                    <TableCell className=\"text-right\">\r\n                      <button\r\n                        onClick={() => handleEditLeftoverDeg(item)}\r\n                        className=\"text-gray-600 hover:text-blue-600 dark:text-gray-400 dark:hover:text-blue-500 mr-2\"\r\n                      >\r\n                        <AiOutlineEdit className=\"h-4 w-4 inline-block\" />\r\n                      </button>\r\n                      <button\r\n                        onClick={() => handleDeleteLeftoverDeg(item.id)}\r\n                        className=\"text-gray-600 hover:text-red-600 dark:text-gray-400 dark:hover:text-red-500\"\r\n                      >\r\n                        <AiOutlineDelete className=\"h-4 w-4 inline-block\" />\r\n                      </button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n\r\n          {/* Mobile View - Card Based Layout */}\r\n          <div className=\"md:hidden space-y-3\">\r\n            {!leftoverData?.leftover_degs || leftoverData.leftover_degs.length === 0 ? (\r\n              <div className=\"text-center py-8\">\r\n                <p className=\"text-gray-700 dark:text-gray-400\">No leftover degs records found</p>\r\n              </div>\r\n            ) : (\r\n              leftoverData.leftover_degs.map((item, index) => (\r\n                <div\r\n                  key={item.id}\r\n                  className=\"bg-white dark:bg-gray-800 rounded-lg shadow-md border dark:border-gray-700\"\r\n                >\r\n                  <div\r\n                    className=\"flex items-center justify-between p-4 cursor-pointer\"\r\n                    onClick={() => toggleExpand(item.id)}\r\n                  >\r\n                    <div className=\"flex items-center space-x-3\">\r\n                      <div className=\"bg-gray-100 dark:bg-gray-700 h-8 w-8 rounded-full flex items-center justify-center text-gray-700 dark:text-gray-300 font-medium\">\r\n                        {index + 1}\r\n                      </div>\r\n                      <div className=\"font-medium text-gray-800 dark:text-gray-200\">{item.menu_name || 'N/A'}</div>\r\n                    </div>\r\n                    <button\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        toggleExpand(item.id);\r\n                      }}\r\n                      className=\"text-gray-600 dark:text-gray-400\"\r\n                    >\r\n                      <AiOutlineDown\r\n                        className={`h-4 w-4 transition-transform ${expandedItem === item.id ? 'rotate-180' : ''}`}\r\n                      />\r\n                    </button>\r\n                  </div>\r\n\r\n                  {expandedItem === item.id && (\r\n                    <div className=\"px-4 pb-4 pt-0 border-t dark:border-gray-700\">\r\n                      <div className=\"mt-2 space-y-2\">\r\n                        <div>\r\n                          <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-1\">Container:</p>\r\n                          <p className=\"text-sm text-gray-700 dark:text-gray-300\">{item.container_name || 'N/A'}</p>\r\n                        </div>\r\n                        <div>\r\n                          <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-1\">Unit:</p>\r\n                          <p className=\"text-sm text-gray-700 dark:text-gray-300\">{item.unit_name || 'N/A'}</p>\r\n                        </div>\r\n                        <div>\r\n                          <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-1\">Total Cooked:</p>\r\n                          <p className=\"text-sm text-gray-700 dark:text-gray-300\">\r\n                            {item.total_cooked != null ? item.total_cooked : 'N/A'}\r\n                          </p>\r\n                        </div>\r\n                        <div>\r\n                          <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-1\">Total Received:</p>\r\n                          <p className=\"text-sm text-gray-700 dark:text-gray-300\">\r\n                            {item.total_received != null ? item.total_received : 'N/A'}\r\n                          </p>\r\n                        </div>\r\n                        <div>\r\n                          <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-1\">Zone:</p>\r\n                          <p className=\"text-sm text-gray-700 dark:text-gray-300\">{item.zone_name || 'N/A'}</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mt-4 flex justify-end space-x-2\">\r\n                        <button\r\n                          onClick={() => handleEditLeftoverDeg(item)}\r\n                          className=\"text-white px-4 py-1 rounded-md bg-blue-600 hover:bg-blue-700 dark:bg-blue-500 dark:hover:bg-blue-600 flex items-center\"\r\n                        >\r\n                          <AiOutlineEdit className=\"h-4 w-4 mr-1\" />\r\n                          Edit\r\n                        </button>\r\n                        <button\r\n                          onClick={() => handleDeleteLeftoverDeg(item.id)}\r\n                          className=\"text-white px-4 py-1 rounded-md bg-red-600 hover:bg-red-700 dark:bg-red-500 dark:hover:bg-red-600 flex items-center\"\r\n                        >\r\n                          <AiOutlineDelete className=\"h-4 w-4 mr-1\" />\r\n                          Delete\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* Modals */}\r\n      {isCreateModalOpen && (\r\n        <CreateLeftoverDegsModal\r\n          isOpen={isCreateModalOpen}\r\n          onClose={handleCreateModalClose}\r\n          miqaatId={id}\r\n          onSuccess={fetchLeftoverData}\r\n        />\r\n      )}\r\n\r\n      {isEditModalOpen && currentLeftoverDeg && (\r\n        <EditLeftoverDegsModal\r\n          isOpen={isEditModalOpen}\r\n          onClose={handleEditModalClose}\r\n          miqaatId={id}\r\n          leftoverDegsData={currentLeftoverDeg}\r\n          onSuccess={fetchLeftoverData}\r\n        />\r\n      )}\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LeftoverDegs;","import axios from \"axios\";\r\n\r\n// let BASE_URL = \"http://35.172.211.35/api\";\r\nlet BASE_URL = \"https://rms-v2.duckdns.org/api\";\r\n\r\n\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n  console.log(\"Running in Production Mode\");\r\n  BASE_URL = \"https://rms-v2.duckdns.org/api\";\r\n} else {\r\n  // BASE_URL = \"http://localhost:8000/api/v1\";\r\n  console.log(\"Running in Development Mode\");\r\n}\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: BASE_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"accessToken\");\r\n    if (token) {\r\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    // await logErrorToBackend(error);\r\n    if (error.response && error.response.status === 401) {\r\n      localStorage.clear();\r\n      window.location.href = \"/\";\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const get = async (url, params) => {\r\n  return axiosInstance.get(url, { params }).then((res) => res.data);\r\n};\r\n\r\nexport const post = async (url, data) => {\r\n  return axiosInstance.post(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const put = async (url, data) => {\r\n  return axiosInstance.put(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const patch = async (url, data) => {\r\n  return axiosInstance.patch(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const _delete = async (url) => {\r\n  return axiosInstance.delete(url).then((res) => res.data);\r\n};\r\n\r\nexport const downloadBlob = async (url, filename) => {\r\n  try {\r\n    const response = await axiosInstance.get(url, {\r\n      responseType: \"blob\",\r\n    });\r\n\r\n    const blob = new Blob([response.data], { type: \"application/pdf\" });\r\n    const blobUrl = window.URL.createObjectURL(blob);\r\n\r\n    const link = document.createElement(\"a\");\r\n    link.href = blobUrl;\r\n    link.setAttribute(\"download\", filename);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    link.remove();\r\n    window.URL.revokeObjectURL(blobUrl);\r\n  } catch (err) {\r\n    console.error(\"Download failed:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const uploadFormData = async (url, formData) => {\r\n  try {\r\n    const response = await axiosInstance.post(url, formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(\"File upload failed:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport default axiosInstance;\r\n"],"sourceRoot":""}