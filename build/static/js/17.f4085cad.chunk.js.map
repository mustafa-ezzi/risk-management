{"version":3,"sources":["components/CreateContainerModal.js","components/EditContainerModal.js","pages/Container.js","api/axios.js","components/Typography/PageTitle.js"],"names":["CreateContainerModal","_ref","isOpen","onClose","onContainerCreated","formData","setFormData","useState","name","isSubmitting","setIsSubmitting","errors","setErrors","useEffect","handleSubmit","async","e","preventDefault","validateForm","newErrors","trim","Object","keys","length","dataToSubmit","post","toast","success","error","console","submit","React","createElement","Modal","ModalHeader","ModalBody","onSubmit","className","Label","Input","value","onChange","target","prevData","_objectSpread","placeholder","ModalFooter","Button","onClick","disabled","EditContainerModal","onContainerUpdated","containerData","patch","concat","id","Container","useHistory","setContainerData","isLoading","setIsLoading","setError","isCreateModalOpen","setIsCreateModalOpen","isEditModalOpen","setIsEditModalOpen","currentContainer","setCurrentContainer","refreshTrigger","setRefreshTrigger","response","get","err","fetchContainerData","handleEditClick","container","handleDeleteContainer","window","confirm","_delete","filter","item","src","logo","alt","style","top","left","position","transform","width","maxWidth","height","opacity","zIndex","PageTitle","handleAddContainer","fontSize","innerWidth","padding","AiOutlinePlusCircle","Fragment","TableContainer","Table","TableHeader","TableCell","TableBody","map","index","TableRow","key","layout","size","aria-label","AiOutlineEdit","aria-hidden","AiOutlineDelete","handleCreateModalClose","handleContainerCreated","prev","handleEditModalClose","handleContainerUpdated","BASE_URL","log","axiosInstance","axios","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Promise","reject","status","clear","location","href","url","params","then","res","data","put","delete","downloadBlob","filename","responseType","blob","Blob","type","blobUrl","URL","createObjectURL","link","document","setAttribute","body","appendChild","click","remove","revokeObjectURL","uploadFormData","children"],"mappings":"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","file":"static/js/17.f4085cad.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n  Input,\r\n  Label\r\n} from '@windmill/react-ui';\r\nimport { post } from '../api/axios';\r\nimport toast from 'react-hot-toast';\r\n\r\nfunction CreateContainerModal({\r\n  isOpen,\r\n  onClose,\r\n  onContainerCreated\r\n}) {\r\n  const [formData, setFormData] = useState({\r\n    name: ''\r\n  });\r\n\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      setFormData({\r\n        name: ''\r\n      });\r\n      setErrors({});\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prevData => ({\r\n      ...prevData,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n\r\n    if (!formData.name.trim()) {\r\n      newErrors.name = 'Container name is required';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsSubmitting(true);\r\n\r\n      \r\n      const dataToSubmit = {\r\n        name: formData.name.trim()\r\n      };\r\n\r\n      \r\n      const response = await post('/container/', dataToSubmit);\r\n\r\n      \r\n      toast.success('Container created successfully');\r\n\r\n      \r\n      if (onContainerCreated) {\r\n        onContainerCreated();\r\n      }\r\n\r\n      \r\n      onClose();\r\n    } catch (error) {\r\n      console.error('Error creating container:', error);\r\n      setErrors({ submit: 'Failed to create container. Please try again.' });\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose}>\r\n      <ModalHeader>Create New Container</ModalHeader>\r\n      <ModalBody>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"mb-4\">\r\n            <Label>\r\n              <span>Container Name *</span>\r\n              <Input\r\n                className=\"mt-1\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleChange}\r\n                placeholder=\"Enter container name\"\r\n              />\r\n              {errors.name && (\r\n                <span className=\"text-xs text-red-600\">{errors.name}</span>\r\n              )}\r\n            </Label>\r\n          </div>\r\n\r\n          {errors.submit && (\r\n            <div className=\"mb-4\">\r\n              <p className=\"text-sm text-red-600\">{errors.submit}</p>\r\n            </div>\r\n          )}\r\n        </form>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <div className=\"flex flex-col space-y-2 sm:space-y-0 sm:space-x-2 sm:flex-row\">\r\n          <Button\r\n            onClick={handleSubmit}\r\n            disabled={isSubmitting}\r\n          >\r\n            {isSubmitting ? 'Creating...' : 'Create Container'}\r\n          </Button>\r\n        </div>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default CreateContainerModal;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n  Input,\r\n  Label\r\n} from '@windmill/react-ui';\r\nimport { patch } from '../api/axios';\r\nimport toast from 'react-hot-toast';\r\n\r\nfunction EditContainerModal({ \r\n  isOpen, \r\n  onClose, \r\n  onContainerUpdated, \r\n  containerData \r\n}) {\r\n  const [formData, setFormData] = useState({\r\n    name: ''\r\n  });\r\n\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  // Initialize form data when modal opens or containerData changes\r\n  useEffect(() => {\r\n    if (containerData) {\r\n      setFormData({\r\n        name: containerData.name || ''\r\n      });\r\n    }\r\n  }, [containerData]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prevData => ({\r\n      ...prevData,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    \r\n    if (!formData.name.trim()) {\r\n      newErrors.name = 'Container name is required';\r\n    }\r\n    \r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsSubmitting(true);\r\n      \r\n      // Prepare data for submission\r\n      const dataToSubmit = {\r\n        name: formData.name.trim()\r\n      };\r\n      \r\n      // Send PATCH request to update container\r\n      await patch(`/container/${containerData.id}/`, dataToSubmit);\r\n      \r\n      // Call the callback to refresh the container list\r\n      if (onContainerUpdated) {\r\n        onContainerUpdated();\r\n      }\r\n      \r\n      // Close the modal\r\n      onClose();\r\n    } catch (error) {\r\n      console.error('Error updating container:', error);\r\n      setErrors({ submit: 'Failed to update container. Please try again.' });\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose}>\r\n      <ModalHeader>Edit Container</ModalHeader>\r\n      <ModalBody>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"mb-4\">\r\n            <Label>\r\n              <span>Container Name *</span>\r\n              <Input \r\n                className=\"mt-1\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleChange}\r\n                placeholder=\"Enter container name\"\r\n              />\r\n              {errors.name && (\r\n                <span className=\"text-xs text-red-600\">{errors.name}</span>\r\n              )}\r\n            </Label>\r\n          </div>\r\n          \r\n          {errors.submit && (\r\n            <div className=\"mb-4\">\r\n              <p className=\"text-sm text-red-600\">{errors.submit}</p>\r\n            </div>\r\n          )}\r\n        </form>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <div className=\"flex flex-col space-y-2 sm:space-y-0 sm:space-x-2 sm:flex-row\">\r\n       \r\n          <Button \r\n            onClick={handleSubmit} \r\n            disabled={isSubmitting}\r\n          >\r\n            {isSubmitting ? 'Updating...' : 'Update Container'}\r\n          </Button>\r\n        </div>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default EditContainerModal;","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { get, _delete } from '../api/axios';\r\nimport PageTitle from '../components/Typography/PageTitle';\r\nimport {\r\n    Table,\r\n    TableHeader,\r\n    TableCell,\r\n    TableBody,\r\n    TableRow,\r\n    TableContainer,\r\n    Button\r\n} from '@windmill/react-ui';\r\nimport { \r\n    AiOutlinePlusCircle, \r\n    AiOutlineEdit, \r\n    AiOutlineDelete \r\n} from 'react-icons/ai';\r\nimport CreateContainerModal from '../components/CreateContainerModal';\r\nimport EditContainerModal from '../components/EditContainerModal';\r\nimport toast from 'react-hot-toast';\r\nimport logo from '../assets/img/mainLogo.png';\r\n\r\nfunction Container() {\r\n    const history = useHistory();\r\n\r\n    const [containerData, setContainerData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\r\n    const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n    const [currentContainer, setCurrentContainer] = useState(null);\r\n    const [refreshTrigger, setRefreshTrigger] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const fetchContainerData = async () => {\r\n            try {\r\n                setIsLoading(true);\r\n                const response = await get('/container/list/');\r\n                setContainerData(response);\r\n            } catch (err) {\r\n                console.error('Error fetching container data:', err);\r\n                setError('Failed to load container data');\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchContainerData();\r\n    }, [refreshTrigger]);\r\n\r\n    const handleAddContainer = () => {\r\n        setIsCreateModalOpen(true);\r\n    };\r\n\r\n    const handleCreateModalClose = () => {\r\n        setIsCreateModalOpen(false);\r\n    };\r\n\r\n    const handleEditClick = (container) => {\r\n        setCurrentContainer(container);\r\n        setIsEditModalOpen(true);\r\n    };\r\n\r\n    const handleEditModalClose = () => {\r\n        setIsEditModalOpen(false);\r\n        setCurrentContainer(null);\r\n    };\r\n\r\n    const handleContainerCreated = () => {\r\n        setRefreshTrigger(prev => prev + 1);\r\n    };\r\n\r\n    const handleContainerUpdated = () => {\r\n        setRefreshTrigger(prev => prev + 1);\r\n        toast.success('Container updated successfully');\r\n    };\r\n\r\n    const handleDeleteContainer = async (id) => {\r\n        try {\r\n            const confirmDelete = window.confirm('Are you sure you want to delete this container?');\r\n\r\n            if (confirmDelete) {\r\n                await _delete(`/container/${id}/`);\r\n                \r\n                setContainerData(prevData => prevData.filter(item => item.id !== id));\r\n                toast.success('Container deleted successfully');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting container:', error);\r\n            toast.error('Failed to delete container. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n <div className=\"relative w-full px-4 py-6\">\r\n        {/* Watermark Logo */}\r\n       <img\r\n         src={logo}\r\n         alt=\"Watermark\"\r\n         className=\"absolute pointer-events-none select-none\"\r\n         style={{\r\n           top: \"50%\",\r\n           left: \"50%\",\r\n           position: \"absolute\",\r\n           transform: \"translate(-50%, -50%)\",\r\n           width: \"70vw\",\r\n           maxWidth: \"400px\",\r\n           height: \"auto\",\r\n           opacity: 0.05,\r\n           zIndex: 0,\r\n         }}\r\n       />\r\n       \r\n    \r\n        {/* Content Overlay */}\r\n        <div className=\"relative z-10\">            {/* Header */}\r\n            <div className=\"flex items-center justify-between mb-6\">\r\n                <PageTitle>Containers</PageTitle>\r\n                <button \r\n                    onClick={handleAddContainer} \r\n                    className=\"flex items-center bg-purple-600 text-white rounded-lg\"\r\n                    style={{\r\n                        fontSize: window.innerWidth < 768 ? '0.875rem' : '1rem',\r\n                        padding: window.innerWidth < 768 ? '0.5rem 1rem' : '0.75rem 1rem'\r\n                    }}\r\n                >\r\n                    <AiOutlinePlusCircle \r\n                        className={`mr-1 ${window.innerWidth < 768 ? 'w-3 h-3' : 'w-4 h-4'}`} \r\n                    />\r\n                    Add Container\r\n                </button>\r\n            </div>\r\n\r\n            {/* Loading State */}\r\n            {isLoading ? (\r\n                <div className=\"flex justify-center my-8\">\r\n                    <p className=\"text-gray-700 dark:text-gray-300\">Loading data...</p>\r\n                </div>\r\n            ) : error ? (\r\n                <div className=\"text-center py-8\">\r\n                    <p className=\"text-red-600 dark:text-red-400\">{error}</p>\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    {/* Desktop Table - Hidden on mobile */}\r\n                    <TableContainer className=\"hidden md:block mb-8\">\r\n                        <Table>\r\n                            <TableHeader>\r\n                                <tr>\r\n                                    <TableCell>ID</TableCell>\r\n                                    <TableCell>Name</TableCell>\r\n                                    <TableCell>Actions</TableCell>\r\n                                </tr>\r\n                            </TableHeader>\r\n                            <TableBody>\r\n                                {containerData.map((item, index) => (\r\n                                    <TableRow key={item.id}>\r\n                                        <TableCell>\r\n                                            <span className=\"text-sm font-semibold\">{index + 1}</span>\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <span className=\"text-sm\">{item.name}</span>\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <div className=\"flex items-center space-x-4\">\r\n                                                <Button\r\n                                                    layout=\"link\"\r\n                                                    size=\"icon\"\r\n                                                    aria-label=\"Edit\"\r\n                                                    onClick={() => handleEditClick(item)}\r\n                                                >\r\n                                                    <AiOutlineEdit className=\"w-5 h-5\" aria-hidden=\"true\" />\r\n                                                </Button>\r\n                                                <Button\r\n                                                    layout=\"link\"\r\n                                                    size=\"icon\"\r\n                                                    aria-label=\"Delete\"\r\n                                                    onClick={() => handleDeleteContainer(item.id)}\r\n                                                >\r\n                                                    <AiOutlineDelete className=\"w-5 h-5\" aria-hidden=\"true\" />\r\n                                                </Button>\r\n                                            </div>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n\r\n                    {/* Mobile View - List with Container Cards */}\r\n                    <div className=\"md:hidden space-y-3\">\r\n                        {containerData.length === 0 ? (\r\n                            <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\r\n                                No containers found\r\n                            </div>\r\n                        ) : (\r\n                            containerData.map((item, index) => (\r\n                                <div\r\n                                    key={item.id}\r\n                                    className=\"bg-white dark:bg-gray-800 rounded-lg border dark:border-gray-700 hover:border-purple-200 dark:hover:border-purple-700 transition-colors\"\r\n                                >\r\n                                    <div className=\"flex items-center p-3\">\r\n                                        <div \r\n                                            className=\"h-12 w-12 mr-3 rounded-full bg-purple-100 dark:bg-purple-900 text-purple-600 dark:text-purple-300 \r\n                                            flex items-center justify-center font-medium\"\r\n                                        >\r\n                                            {index + 1}\r\n                                        </div>\r\n                                        <div className=\"flex-1 min-w-0\">\r\n                                            <div className=\"flex items-center justify-between\">\r\n                                                <p className=\"font-medium dark:text-white truncate\">{item.name}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"flex space-x-2\">\r\n                                            <button \r\n                                                onClick={() => handleEditClick(item)}\r\n                                                className=\"text-blue-600 dark:text-blue-400 hover:bg-blue-50 dark:hover:bg-blue-900/30 p-1 rounded\"\r\n                                            >\r\n                                                <AiOutlineEdit className=\"h-5 w-5\" />\r\n                                            </button>\r\n                                            <button \r\n                                                onClick={() => handleDeleteContainer(item.id)}\r\n                                                className=\"text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/30 p-1 rounded\"\r\n                                            >\r\n                                                <AiOutlineDelete className=\"h-5 w-5\" />\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        )}\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            {/* Create Container Modal */}\r\n            <CreateContainerModal\r\n                isOpen={isCreateModalOpen}\r\n                onClose={handleCreateModalClose}\r\n                onContainerCreated={handleContainerCreated}\r\n            />\r\n\r\n            {/* Edit Container Modal */}\r\n            {currentContainer && (\r\n                <EditContainerModal\r\n                    isOpen={isEditModalOpen}\r\n                    onClose={handleEditModalClose}\r\n                    onContainerUpdated={handleContainerUpdated}\r\n                    containerData={currentContainer}\r\n                />\r\n            )}\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Container;","import axios from \"axios\";\r\n\r\n// let BASE_URL = \"http://35.172.211.35/api\";\r\nlet BASE_URL = \"https://rms-v2.duckdns.org/api\";\r\n\r\n\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n  console.log(\"Running in Production Mode\");\r\n  BASE_URL = \"http://35.172.211.35/api\";\r\n} else {\r\n  // BASE_URL = \"http://localhost:8000/api/v1\";\r\n  console.log(\"Running in Development Mode\");\r\n}\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: BASE_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"accessToken\");\r\n    if (token) {\r\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    // await logErrorToBackend(error);\r\n    if (error.response && error.response.status === 401) {\r\n      localStorage.clear();\r\n      window.location.href = \"/\";\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const get = async (url, params) => {\r\n  return axiosInstance.get(url, { params }).then((res) => res.data);\r\n};\r\n\r\nexport const post = async (url, data) => {\r\n  return axiosInstance.post(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const put = async (url, data) => {\r\n  return axiosInstance.put(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const patch = async (url, data) => {\r\n  return axiosInstance.patch(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const _delete = async (url) => {\r\n  return axiosInstance.delete(url).then((res) => res.data);\r\n};\r\n\r\nexport const downloadBlob = async (url, filename) => {\r\n  try {\r\n    const response = await axiosInstance.get(url, {\r\n      responseType: \"blob\",\r\n    });\r\n\r\n    const blob = new Blob([response.data], { type: \"application/pdf\" });\r\n    const blobUrl = window.URL.createObjectURL(blob);\r\n\r\n    const link = document.createElement(\"a\");\r\n    link.href = blobUrl;\r\n    link.setAttribute(\"download\", filename);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    link.remove();\r\n    window.URL.revokeObjectURL(blobUrl);\r\n  } catch (err) {\r\n    console.error(\"Download failed:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const uploadFormData = async (url, formData) => {\r\n  try {\r\n    const response = await axiosInstance.post(url, formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(\"File upload failed:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport default axiosInstance;\r\n","import React from 'react'\r\n\r\nfunction PageTitle({ children }) {\r\n  return (\r\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n"],"sourceRoot":""}