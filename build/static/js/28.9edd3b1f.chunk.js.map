{"version":3,"sources":["components/CreateMiqaatAttendanceModal.js","components/EditMiqaatAttendanceModal.js","pages/MiqaatAttendance.js","api/axios.js"],"names":["CreateMiqaatAttendanceModal","_ref","isOpen","onClose","miqaatId","onSuccess","formData","setFormData","useState","miqaat","zone","member","counter","checkin_time","checkout_time","dropdownOptions","setDropdownOptions","zones","members","counters","isSubmitting","setIsSubmitting","error","setError","useEffect","async","zonesRes","membersRes","countersRes","Promise","all","get","err","console","fetchDropdownOptions","handleInputChange","e","name","value","target","prev","_objectSpread","handleSubmit","preventDefault","missingFields","filter","field","length","concat","join","validateTimes","checkin","checkout","Date","toISOString","split","submissionData","parseInt","response","post","toast","success","_err$response","_err$response$data","data","message","React","createElement","Modal","ModalHeader","ModalBody","className","role","onSubmit","Label","Select","onChange","required","map","key","id","full_name","its","Input","type","ModalFooter","Button","onClick","disabled","block","size","EditMiqaatAttendanceModal","attendanceData","isDropdownLoading","setIsDropdownLoading","Array","isArray","results","_attendanceData$zone$","_attendanceData$zone","_attendanceData$membe","_attendanceData$membe2","_attendanceData$count","_attendanceData$count2","zone_id","member_id","counter_id","Error","some","today","checkinDate","patch","MiqaatAttendance","useParams","history","useHistory","setAttendanceData","isLoading","setIsLoading","miqaatDetails","setMiqaatDetails","isCreateModalOpen","setIsCreateModalOpen","isEditModalOpen","setIsEditModalOpen","currentAttendance","setCurrentAttendance","expandedItem","setExpandedItem","editZone","setEditZone","editSubZone","setEditSubZone","setZones","subZones","setSubZones","handlePatchAttendance","sub_zone","fetchAttendanceData","fetchMiqaatDetails","zonesResponse","fetchZones","subzonesResponse","fetchSubZones","src","logo","alt","style","top","left","position","transform","width","maxWidth","height","opacity","zIndex","handleBackClick","goBack","AiOutlineArrowLeft","fontSize","window","innerWidth","miqaat_name","TableContainer","Table","TableHeader","TableCell","TableBody","item","index","TableRow","is_attendance","zone_name","subZone","sub_zone_name","Fragment","AiOutlineEdit","handleEditAttendance","attendanceItem","confirm","_delete","attendanceId","handleDeleteAttendance","AiOutlineDelete","handleAddAttendanceForMember","AiOutlinePlusCircle","handleCreateModalClose","handleAttendanceCreated","handleEditModalClose","handleAttendanceUpdated","BASE_URL","log","axiosInstance","axios","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","reject","status","clear","location","href","url","params","then","res","put","delete","downloadBlob","filename","responseType","blob","Blob","blobUrl","URL","createObjectURL","link","document","setAttribute","body","appendChild","click","remove","revokeObjectURL","uploadFormData"],"mappings":"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","file":"static/js/28.9edd3b1f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n  Input,\r\n  Label,\r\n  Select,\r\n} from '@windmill/react-ui';\r\nimport { get, post } from '../api/axios';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst CreateMiqaatAttendanceModal = ({\r\n  isOpen,\r\n  onClose,\r\n  miqaatId,\r\n  onSuccess\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    miqaat: miqaatId,\r\n    zone: '',\r\n    member: '',\r\n    counter: '',\r\n    checkin_time: '',\r\n    checkout_time: ''\r\n  });\r\n\r\n  const [dropdownOptions, setDropdownOptions] = useState({\r\n    zones: [],\r\n    members: [],\r\n    counters: []\r\n  });\r\n\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch dropdown options when modal opens\r\n  useEffect(() => {\r\n    const fetchDropdownOptions = async () => {\r\n      try {\r\n        const [zonesRes, membersRes, countersRes] = await Promise.all([\r\n          get('/zone/list/'),\r\n          get('/member/list/'),\r\n          get('/counter/list/')\r\n        ]);\r\n\r\n        setDropdownOptions({\r\n          zones: zonesRes,\r\n          members: membersRes,\r\n          counters: countersRes\r\n        });\r\n      } catch (err) {\r\n        console.error('Error fetching dropdown options:', err);\r\n        setError('Failed to load dropdown options');\r\n      }\r\n    };\r\n\r\n    if (isOpen) {\r\n      fetchDropdownOptions();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const validateTimes = (checkin, checkout) => {\r\n    if (!checkin || !checkout) return true;\r\n\r\n    const today = new Date().toISOString().split('T')[0];\r\n  \r\n\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n    setError(null);\r\n\r\n    try {\r\n      // Validate required fields\r\n      const requiredFields = ['zone', 'member', 'counter', 'checkin_time', 'checkout_time'];\r\n      const missingFields = requiredFields.filter(field => !formData[field]);\r\n\r\n      if (missingFields.length > 0) {\r\n        setError(`Please fill in all required fields: ${missingFields.join(', ')}`);\r\n        setIsSubmitting(false);\r\n        return;\r\n      }\r\n\r\n      // Validate time range\r\n      if (!validateTimes(formData.checkin_time, formData.checkout_time)) {\r\n        setError('Invalid time range');\r\n        setIsSubmitting(false);\r\n        return;\r\n      }\r\n\r\n      // Prepare submission data\r\n      const submissionData = {\r\n        ...formData,\r\n        miqaat: parseInt(miqaatId),\r\n        zone: parseInt(formData.zone),\r\n        member: parseInt(formData.member),\r\n        counter: parseInt(formData.counter)\r\n      };\r\n\r\n      // Submit the form\r\n      const response = await post('/miqaat-attendance/', submissionData);\r\n\r\n      // Show success toast\r\n      toast.success('Attendance record created successfully');\r\n\r\n      // Call success callback\r\n      onSuccess(response);\r\n\r\n      // Close the modal\r\n      onClose();\r\n    } catch (err) {\r\n      console.error('Error creating attendance record:', err);\r\n      setError(err.response?.data?.message || 'Failed to create attendance record');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose}>\r\n      <ModalHeader>Add Attendance Record</ModalHeader>\r\n      <ModalBody>\r\n        {error && (\r\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">\r\n            <span className=\"block sm:inline\">{error}</span>\r\n          </div>\r\n        )}\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            {/* Member Dropdown */}\r\n            <Label className=\"block text-sm\">\r\n              <span className=\"text-gray-700 dark:text-gray-400\">Member *</span>\r\n              <Select\r\n                name=\"member\"\r\n                value={formData.member}\r\n                onChange={handleInputChange}\r\n                className=\"mt-1\"\r\n                required\r\n              >\r\n                <option value=\"\">Select Member</option>\r\n                {dropdownOptions.members.map(member => (\r\n                  <option key={member.id} value={member.id}>\r\n                    {member.full_name || member.its || `Member #${member.id}`}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n            </Label>\r\n\r\n            {/* Zone Dropdown */}\r\n            <Label className=\"block text-sm\">\r\n              <span className=\"text-gray-700 dark:text-gray-400\">Zone *</span>\r\n              <Select\r\n                name=\"zone\"\r\n                value={formData.zone}\r\n                onChange={handleInputChange}\r\n                className=\"mt-1\"\r\n                required\r\n              >\r\n                <option value=\"\">Select Zone</option>\r\n                {dropdownOptions.zones.map(zone => (\r\n                  <option key={zone.id} value={zone.id}>\r\n                    {zone.name}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n            </Label>\r\n\r\n            {/* Check-in Time */}\r\n            <Label className=\"block text-sm\">\r\n              <span className=\"text-gray-700 dark:text-gray-400\">Check-in Time *</span>\r\n              <Input\r\n                type=\"time\"\r\n                name=\"checkin_time\"\r\n                value={formData.checkin_time}\r\n                onChange={handleInputChange}\r\n                className=\"mt-1\"\r\n                required\r\n              />\r\n            </Label>\r\n\r\n            {/* Check-out Time */}\r\n            <Label className=\"block text-sm\">\r\n              <span className=\"text-gray-700 dark:text-gray-400\">Check-out Time *</span>\r\n              <Input\r\n                type=\"time\"\r\n                name=\"checkout_time\"\r\n                value={formData.checkout_time}\r\n                onChange={handleInputChange}\r\n                className=\"mt-1\"\r\n                required\r\n              />\r\n              \r\n            </Label>\r\n\r\n\r\n            {/* Counter Dropdown */}\r\n            <Label className=\"block text-sm col-span-1 md:col-span-2\">\r\n              <span className=\"text-gray-700 dark:text-gray-400\">Counter *</span>\r\n              <Select\r\n                name=\"counter\"\r\n                value={formData.counter}\r\n                onChange={handleInputChange}\r\n                className=\"mt-1\"\r\n                required\r\n              >\r\n                <option value=\"\">Select Counter</option>\r\n                {dropdownOptions.counters.map(counter => (\r\n                  <option key={counter.id} value={counter.id}>\r\n                    {counter.name || `Counter #${counter.id}`}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n            </Label>\r\n          </div>\r\n        </form>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n     \r\n        <div className=\"hidden sm:block\">\r\n          <Button\r\n            onClick={handleSubmit}\r\n            disabled={isSubmitting}\r\n          >\r\n            {isSubmitting ? 'Saving...' : 'Save'}\r\n          </Button>\r\n        </div>\r\n\r\n        {/* Mobile buttons */}\r\n        <div className=\"w-full sm:hidden\">\r\n        \r\n          <Button\r\n            block\r\n            size=\"large\"\r\n            onClick={handleSubmit}\r\n            disabled={isSubmitting}\r\n          >\r\n            {isSubmitting ? 'Saving...' : 'Save'}\r\n          </Button>\r\n        </div>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateMiqaatAttendanceModal;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n  Input,\r\n  Label,\r\n  Select,\r\n  HelperText,\r\n} from '@windmill/react-ui';\r\nimport { get, patch } from '../api/axios';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst EditMiqaatAttendanceModal = ({\r\n  isOpen,\r\n  onClose,\r\n  miqaatId,\r\n  attendanceData,\r\n  onSuccess\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    miqaat: miqaatId,\r\n    zone: '',\r\n    member: '',\r\n    counter: '',\r\n    checkin_time: '',\r\n    checkout_time: '',\r\n  });\r\n\r\n  const [dropdownOptions, setDropdownOptions] = useState({\r\n    zones: [],\r\n    members: [],\r\n    counters: [],\r\n  });\r\n\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [isDropdownLoading, setIsDropdownLoading] = useState(false);\r\n\r\n  // Fetch dropdown options when modal opens\r\n  useEffect(() => {\r\n    const fetchDropdownOptions = async () => {\r\n      setIsDropdownLoading(true);\r\n      try {\r\n        const [zonesRes, membersRes, countersRes] = await Promise.all([\r\n          get('/zone/list/'),\r\n          get('/member/list/'),\r\n          get('/counter/list/'),\r\n        ]);\r\n\r\n        setDropdownOptions({\r\n          zones: Array.isArray(zonesRes) ? zonesRes : zonesRes.results || [],\r\n          members: Array.isArray(membersRes) ? membersRes : membersRes.results || [],\r\n          counters: Array.isArray(countersRes) ? countersRes : countersRes.results || [],\r\n        });\r\n      } catch (err) {\r\n        console.error('Error fetching dropdown options:', err);\r\n        setError('Failed to load dropdown options');\r\n      } finally {\r\n        setIsDropdownLoading(false);\r\n      }\r\n    };\r\n\r\n    if (isOpen) {\r\n      fetchDropdownOptions();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  // Set form data after dropdown options are loaded or attendanceData changes\r\n  useEffect(() => {\r\n    if (attendanceData && !isDropdownLoading) {\r\n      setFormData({\r\n        miqaat: miqaatId,\r\n        zone: attendanceData.zone_id || (attendanceData.zone?.id ?? ''),\r\n        member: attendanceData.member_id || (attendanceData.member?.id ?? ''),\r\n        counter: attendanceData.counter_id || (attendanceData.counter?.id ?? ''),\r\n        checkin_time: attendanceData.checkin_time || '',\r\n        checkout_time: attendanceData.checkout_time || '',\r\n      });\r\n    }\r\n  }, [attendanceData, miqaatId, isDropdownLoading]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const validateTimes = (checkin, checkout) => {\r\n    if (!checkin || !checkout) return true;\r\n\r\n    const today = new Date().toISOString().split('T')[0];\r\n    const checkinDate = new Date(`${today}T${checkin}`);\r\n    const checkoutDate = new Date(`${today}T${checkout}`);\r\n\r\n    return checkoutDate >= checkinDate; // Ensure checkout is after checkin\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n    setError(null);\r\n\r\n    try {\r\n      // Validate required fields\r\n      const requiredFields = ['zone', 'member', 'counter', 'checkin_time', 'checkout_time'];\r\n      const missingFields = requiredFields.filter(field => !formData[field]);\r\n\r\n      if (missingFields.length > 0) {\r\n        throw new Error(`Please fill in all required fields: ${missingFields.join(', ')}`);\r\n      }\r\n\r\n      // Validate dropdown selections\r\n      if (!dropdownOptions.zones.some(zone => zone.id === parseInt(formData.zone))) {\r\n        throw new Error('Please select a valid zone');\r\n      }\r\n      if (!dropdownOptions.members.some(member => member.id === parseInt(formData.member))) {\r\n        throw new Error('Please select a valid member');\r\n      }\r\n      if (!dropdownOptions.counters.some(counter => counter.id === parseInt(formData.counter))) {\r\n        throw new Error('Please select a valid counter');\r\n      }\r\n\r\n      // Validate time range\r\n      if (!validateTimes(formData.checkin_time, formData.checkout_time)) {\r\n        throw new Error('Check-out time must be after check-in time');\r\n      }\r\n\r\n      // Prepare submission data\r\n      const submissionData = {\r\n        ...formData,\r\n        miqaat: parseInt(miqaatId),\r\n        zone: parseInt(formData.zone),\r\n        member: parseInt(formData.member),\r\n        counter: parseInt(formData.counter),\r\n      };\r\n\r\n      // Submit the form\r\n      await patch(`/miqaat-attendance/${attendanceData.id}/`, submissionData);\r\n\r\n      toast.success('Attendance record updated successfully');\r\n      onSuccess();\r\n      onClose();\r\n    } catch (err) {\r\n      console.error('Error updating attendance record:', err);\r\n      setError(err.message || 'Failed to update attendance record');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose}>\r\n      <ModalHeader>Edit Attendance Record</ModalHeader>\r\n      <ModalBody>\r\n        {error && (\r\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">\r\n            <span className=\"block sm:inline\">{error}</span>\r\n          </div>\r\n        )}\r\n        {isDropdownLoading ? (\r\n          <p className=\"text-gray-700 dark:text-gray-400\">Loading options...</p>\r\n        ) : (\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              {/* Member Dropdown */}\r\n              <Label className=\"block text-sm\">\r\n                <span className=\"text-gray-700 dark:text-gray-400\">Member *</span>\r\n                <Select\r\n                  name=\"member\"\r\n                  value={formData.member}\r\n                  onChange={handleInputChange}\r\n                  className=\"mt-1\"\r\n                  required\r\n                  disabled={isSubmitting}\r\n                >\r\n                  <option value=\"\">Select Member</option>\r\n                  {dropdownOptions.members.map(member => (\r\n                    <option key={member.id} value={member.id}>\r\n                      {member.full_name || member.its || `Member #${member.id}`}\r\n                    </option>\r\n                  ))}\r\n                </Select>\r\n              </Label>\r\n\r\n              {/* Zone Dropdown */}\r\n              <Label className=\"block text-sm\">\r\n                <span className=\"text-gray-700 dark:text-gray-400\">Zone *</span>\r\n                <Select\r\n                  name=\"zone\"\r\n                  value={formData.zone}\r\n                  onChange={handleInputChange}\r\n                  className=\"mt-1\"\r\n                  required\r\n                  disabled={isSubmitting}\r\n                >\r\n                  <option value=\"\">Select Zone</option>\r\n                  {dropdownOptions.zones.map(zone => (\r\n                    <option key={zone.id} value={zone.id}>\r\n                      {zone.name}\r\n                    </option>\r\n                  ))}\r\n                </Select>\r\n              </Label>\r\n\r\n\r\n\r\n              {/* Check-in Time */}\r\n              <Label className=\"block text-sm\">\r\n                <span className=\"text-gray-700 dark:text-gray-400\">Check-in Time *</span>\r\n                <Input\r\n                  type=\"time\"\r\n                  name=\"checkin_time\"\r\n                  value={formData.checkin_time}\r\n                  onChange={handleInputChange}\r\n                  className=\"mt-1\"\r\n                  required\r\n                  disabled={isSubmitting}\r\n                />\r\n              </Label>\r\n\r\n              {/* Check-out Time */}\r\n              <Label className=\"block text-sm\">\r\n                <span className=\"text-gray-700 dark:text-gray-400\">Check-out Time *</span>\r\n                <Input\r\n                  type=\"time\"\r\n                  name=\"checkout_time\"\r\n                  value={formData.checkout_time}\r\n                  onChange={handleInputChange}\r\n                  className=\"mt-1\"\r\n                  required\r\n                  disabled={isSubmitting}\r\n                />\r\n\r\n              </Label>\r\n\r\n              {/* Counter Dropdown */}\r\n              <Label className=\"block text-sm col-span-1 md:col-span-2\">\r\n                <span className=\"text-gray-700 dark:text-gray-400\">Counter *</span>\r\n                <Select\r\n                  name=\"counter\"\r\n                  value={formData.counter}\r\n                  onChange={handleInputChange}\r\n                  className=\"mt-1\"\r\n                  required\r\n                  disabled={isSubmitting}\r\n                >\r\n                  <option value=\"\">Select Counter</option>\r\n                  {dropdownOptions.counters.map(counter => (\r\n                    <option key={counter.id} value={counter.id}>\r\n                      {counter.name || `Counter #${counter.id}`}\r\n                    </option>\r\n                  ))}\r\n                </Select>\r\n              </Label>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <div className=\"hidden sm:block\">\r\n          <Button\r\n            onClick={handleSubmit}\r\n            disabled={isSubmitting || isDropdownLoading}\r\n          >\r\n            {isSubmitting ? 'Updating...' : 'Update'}\r\n          </Button>\r\n        </div>\r\n        <div className=\"w-full sm:hidden\">\r\n          <Button\r\n            block\r\n            size=\"large\"\r\n            onClick={handleSubmit}\r\n            disabled={isSubmitting || isDropdownLoading}\r\n          >\r\n            {isSubmitting ? 'Updating...' : 'Update'}\r\n          </Button>\r\n        </div>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditMiqaatAttendanceModal;","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { get, _delete, post, patch } from '../api/axios';\r\nimport {\r\n  Table,\r\n  TableHeader,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  TableContainer,\r\n\r\n} from '@windmill/react-ui';\r\nimport { AiOutlinePlusCircle, AiOutlineArrowLeft, AiOutlineDelete, AiOutlineEdit } from 'react-icons/ai';\r\nimport CreateMiqaatAttendanceModal from '../components/CreateMiqaatAttendanceModal';\r\nimport logo from '../assets/img/mainLogo.png';\r\n\r\nimport EditMiqaatAttendanceModal from '../components/EditMiqaatAttendanceModal';\r\nimport toast from 'react-hot-toast';\r\n// import { Input, Label, Select, Textarea, Button } from '@windmill/react-ui'\r\n\r\n\r\nfunction MiqaatAttendance() {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const [attendanceData, setAttendanceData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [miqaatDetails, setMiqaatDetails] = useState(null);\r\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n  const [currentAttendance, setCurrentAttendance] = useState(null);\r\n  const [expandedItem, setExpandedItem] = useState(null);\r\n  const [editZone, setEditZone] = useState(null);\r\n  const [editSubZone, setEditSubZone] = useState(null);\r\n  const [zones, setZones] = useState([]);\r\n  const [subZones, setSubZones] = useState([]);\r\n\r\n\r\n  const handleEditAttendance = (attendanceItem) => {\r\n    setCurrentAttendance(attendanceItem);\r\n    setEditZone(attendanceItem.zone);\r\n    setEditSubZone(attendanceItem.sub_zone);\r\n  };\r\n\r\n\r\n  const handlePatchAttendance = async () => {\r\n    if (!currentAttendance) return;\r\n    try {\r\n      await patch(`/miqaat-attendance/${currentAttendance.id}/`, {\r\n        zone: editZone,\r\n        sub_zone: editSubZone,\r\n      }, 'patch'); // Make sure your axios handles patch\r\n      toast.success('Attendance updated successfully');\r\n      setCurrentAttendance(null);\r\n      fetchAttendanceData();\r\n    } catch (error) {\r\n      console.error('Patch failed:', error);\r\n      toast.error('Failed to update attendance');\r\n    }\r\n  };\r\n\r\n\r\n  const handleDeleteAttendance = async (attendanceId) => {\r\n    try {\r\n      const confirmDelete = window.confirm('Are you sure?');\r\n      if (confirmDelete) {\r\n        await _delete(`/miqaat-attendance/${attendanceId}/`);\r\n        toast.success('Deleted');\r\n        fetchAttendanceData(); // Refresh to reflect the absence and allow \"Add\" again\r\n      }\r\n    } catch (e) {\r\n      toast.error('Delete failed');\r\n    }\r\n  };\r\n\r\n\r\n  const handleAddAttendanceForMember = async (member) => {\r\n    try {\r\n      const response = await post('/miqaat-attendance/', {\r\n        member: member.id,\r\n        miqaat: parseInt(id, 10), // 👈 fix here\r\n        zone: member.zone,\r\n        sub_zone: member.sub_zone,\r\n      });\r\n      toast.success('Attendance created successfully');\r\n      fetchAttendanceData(); // Refresh the table\r\n    } catch (error) {\r\n      console.error('Failed to create attendance:', error);\r\n      toast.error('Failed to create attendance. Please try again.');\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchAttendanceData();\r\n    fetchMiqaatDetails();\r\n\r\n    const fetchZones = async () => {\r\n      const zonesResponse = await get('/zone/list/');\r\n      setZones(zonesResponse);\r\n    };\r\n\r\n    const fetchSubZones = async () => {\r\n      const subzonesResponse = await get('/sub-zone/list/');\r\n      setSubZones(subzonesResponse);\r\n    };\r\n\r\n    fetchZones();\r\n    fetchSubZones();\r\n  }, [id]);\r\n\r\n  const fetchAttendanceData = async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await get(`/miqaat/member-attendance/?miqaat_id=${id}`);\r\n      setAttendanceData(response);\r\n    } catch (err) {\r\n      console.error('Error fetching attendance data:', err);\r\n      setError('Failed to load attendance data. Please try again.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchMiqaatDetails = async () => {\r\n    try {\r\n      const response = await get(`/miqaat/${id}/`);\r\n      setMiqaatDetails(response);\r\n    } catch (err) {\r\n      console.error('Error fetching miqaat details:', err);\r\n      // Don't set error state to avoid blocking UI\r\n    }\r\n  };\r\n\r\n  const formatTimeToAMPM = (timeString) => {\r\n    if (!timeString) return 'N/A';\r\n\r\n    const [hours, minutes] = timeString.split(':');\r\n\r\n    let hour = parseInt(hours, 10);\r\n    const ampm = hour >= 12 ? 'PM' : 'AM';\r\n    hour = hour % 12 || 12;\r\n\r\n    return `${hour}:${minutes} ${ampm}`;\r\n  };\r\n  ;\r\n\r\n  const handleBackClick = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const handleAddAttendance = () => {\r\n    setIsCreateModalOpen(true);\r\n  };\r\n\r\n\r\n  const handleCreateModalClose = () => {\r\n    setIsCreateModalOpen(false);\r\n  };\r\n\r\n\r\n  const handleEditModalClose = () => {\r\n    setIsEditModalOpen(false);\r\n    setCurrentAttendance(null);\r\n  };\r\n\r\n  const handleAttendanceCreated = () => {\r\n    fetchAttendanceData();\r\n  };\r\n\r\n  const handleAttendanceUpdated = () => {\r\n    fetchAttendanceData();\r\n  };\r\n\r\n  const toggleExpand = (id) => {\r\n    setExpandedItem(expandedItem === id ? null : id);\r\n  };\r\n\r\n  return (\r\n  <div className=\"relative w-full px-4 py-6\">\r\n        {/* Watermark Logo */}\r\n         <img\r\n           src={logo}\r\n           alt=\"Watermark\"\r\n           className=\"absolute pointer-events-none select-none\"\r\n           style={{\r\n             top: \"50%\",\r\n             left: \"50%\",\r\n             position: \"absolute\",\r\n             transform: \"translate(-50%, -50%)\",\r\n             width: \"70vw\",\r\n             maxWidth: \"400px\",\r\n             height: \"auto\",\r\n             opacity: 0.05,\r\n             zIndex: 0,\r\n           }}\r\n         />\r\n    \r\n        {/* Content Overlay */}\r\n        <div className=\"relative z-10\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <div className=\"flex items-center\">\r\n          <button onClick={handleBackClick} className=\"mr-4\">\r\n            <AiOutlineArrowLeft className=\"w-5 h-5 dark:text-white\" />\r\n          </button>\r\n          <h1\r\n            style={{\r\n              fontSize: window.innerWidth < 768 ? '1.25rem' : '1.5rem',\r\n            }}\r\n            className=\"font-semibold dark:text-white\"\r\n          >\r\n            Attendance\r\n            {miqaatDetails && ` - ${miqaatDetails.miqaat_name}`}\r\n          </h1>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Loading/Error State */}\r\n      {isLoading ? (\r\n        <div className=\"flex justify-center my-8\">\r\n          <p className=\"text-gray-700 dark:text-gray-400\">Loading data...</p>\r\n        </div>\r\n      ) : error ? (\r\n        <div className=\"text-center py-8\">\r\n          <p className=\"text-red-600\">{error}</p>\r\n          <button\r\n            onClick={fetchAttendanceData}\r\n            className=\"mt-4 bg-purple-600 text-white px-4 py-2 rounded\"\r\n          >\r\n            Retry\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"overflow-x-auto\">\r\n          <TableContainer className=\"mb-8 min-w-[600px]\">\r\n            <Table>\r\n              <TableHeader>\r\n                <tr>\r\n                  <TableCell>ID</TableCell>\r\n                  <TableCell>Name</TableCell>\r\n                  <TableCell>ITS</TableCell>\r\n                  <TableCell>Zone</TableCell>\r\n                  <TableCell>Sub Zone</TableCell>\r\n                  <TableCell className=\"text-right\">Actions</TableCell>\r\n                </tr>\r\n              </TableHeader>\r\n              <TableBody>\r\n                {attendanceData?.map((item, index) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell>\r\n                      <span className=\"text-sm\">{index + 1}</span>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <span className=\"text-sm font-medium\">{item.full_name || 'N/A'}</span>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <span className=\"text-sm\">{item.its}</span>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {item.is_attendance && currentAttendance?.id === item.id ? (\r\n                        <select\r\n                          value={editZone}\r\n                          onChange={(e) => setEditZone(parseInt(e.target.value))}\r\n                          className=\"w-full px-3 py-2 text-sm border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 dark:bg-gray-700 dark:text-gray-100\"\r\n                        >\r\n                          <option value=\"\">Select Zone</option>\r\n                          {zones.map((zone) => (\r\n                            <option key={zone.id} value={zone.id}>{zone.name}</option>\r\n                          ))}\r\n                        </select>\r\n                      ) : (\r\n                        <span className=\"text-sm\">{item.zone_name}</span>\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {item.is_attendance && currentAttendance?.id === item.id ? (\r\n                        <select\r\n                          value={editSubZone}\r\n                          onChange={(e) => setEditSubZone(parseInt(e.target.value))}\r\n                          className=\"w-full px-3 py-2 text-sm border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 dark:bg-gray-700 dark:text-gray-100\"\r\n                        >\r\n                          <option value=\"\">Select Sub-zone</option>\r\n                          {subZones.map((subZone) => (\r\n                            <option key={subZone.id} value={subZone.id}>{subZone.name}</option>\r\n                          ))}\r\n                        </select>\r\n                      ) : (\r\n                        <span className=\"text-sm\">{item.sub_zone_name}</span>\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell className=\"text-right\">\r\n                      {item.is_attendance ? (\r\n                        <div className=\"flex flex-wrap justify-end gap-2\">\r\n                          {currentAttendance?.id === item.id ? (\r\n                            <>\r\n                              <button\r\n                                onClick={handlePatchAttendance}\r\n                                className=\"text-green-600 hover:text-green-800 dark:text-green-400 dark:hover:text-green-600 flex items-center space-x-1\"\r\n                              >\r\n                                <AiOutlineEdit className=\"h-4 w-4\" />\r\n                                <span className=\"text-sm\">Save</span>\r\n                              </button>\r\n                              <button\r\n                                onClick={() => {\r\n                                  setCurrentAttendance(null);\r\n                                  setEditZone(null);\r\n                                  setEditSubZone(null);\r\n                                }}\r\n                                className=\"text-gray-600 hover:text-gray-800 dark:text-gray-400 dark:hover:text-gray-300 flex items-center space-x-1\"\r\n                              >\r\n                                <span className=\"text-sm\">Cancel</span>\r\n                              </button>\r\n                            </>\r\n                          ) : (\r\n\r\n                            <>\r\n                              <button\r\n                                onClick={() => handleEditAttendance(item)}\r\n                                className=\"text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-600 flex items-center space-x-1\"\r\n                              >\r\n                                <AiOutlineEdit className=\"h-4 w-4\" />\r\n                                <span className=\"text-sm\">Edit</span>\r\n                              </button>\r\n                              <button\r\n                                onClick={() => handleDeleteAttendance(item.id)}\r\n                                className=\"text-red-600 hover:text-red-800 dark:text-red-400 dark:hover:text-red-600 flex items-center space-x-1\"\r\n                              >\r\n                                <AiOutlineDelete className=\"h-4 w-4\" />\r\n                                <span className=\"text-sm\">Delete</span>\r\n                              </button>\r\n                            </>\r\n                          )}\r\n                        </div>\r\n\r\n                      ) : (\r\n                                                <div className=\"flex flex-wrap justify-end gap-2\">\r\n\r\n                        <button\r\n                          onClick={() => handleAddAttendanceForMember(item)}\r\n                          className=\"text-green-600 hover:text-green-800 dark:text-green-400 dark:hover:text-green-600 flex items-center space-x-1\"\r\n                        >\r\n                          <AiOutlinePlusCircle className=\"w-4 h-4\" />\r\n                          <span className=\"text-sm\">save</span>\r\n\r\n                        </button>\r\n                        </div>\r\n                      )}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modals */}\r\n      {isCreateModalOpen && (\r\n        <CreateMiqaatAttendanceModal\r\n          isOpen={isCreateModalOpen}\r\n          onClose={handleCreateModalClose}\r\n          miqaatId={id}\r\n          onSuccess={handleAttendanceCreated}\r\n        />\r\n      )}\r\n\r\n      {isEditModalOpen && currentAttendance && (\r\n        <EditMiqaatAttendanceModal\r\n          isOpen={isEditModalOpen}\r\n          onClose={handleEditModalClose}\r\n          miqaatId={id}\r\n          attendanceData={currentAttendance}\r\n          onSuccess={handleAttendanceUpdated}\r\n        />\r\n      )}\r\n    </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default MiqaatAttendance;","import axios from \"axios\";\r\n\r\n// let BASE_URL = \"http://35.172.211.35/api\";\r\nlet BASE_URL = \"https://rms-v2.duckdns.org/api\";\r\n\r\n\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n  console.log(\"Running in Production Mode\");\r\n  BASE_URL = \"https://rms-v2.duckdns.org/api\";\r\n} else {\r\n  // BASE_URL = \"http://localhost:8000/api/v1\";\r\n  console.log(\"Running in Development Mode\");\r\n}\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: BASE_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"accessToken\");\r\n    if (token) {\r\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    // await logErrorToBackend(error);\r\n    if (error.response && error.response.status === 401) {\r\n      localStorage.clear();\r\n      window.location.href = \"/\";\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const get = async (url, params) => {\r\n  return axiosInstance.get(url, { params }).then((res) => res.data);\r\n};\r\n\r\nexport const post = async (url, data) => {\r\n  return axiosInstance.post(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const put = async (url, data) => {\r\n  return axiosInstance.put(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const patch = async (url, data) => {\r\n  return axiosInstance.patch(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const _delete = async (url) => {\r\n  return axiosInstance.delete(url).then((res) => res.data);\r\n};\r\n\r\nexport const downloadBlob = async (url, filename) => {\r\n  try {\r\n    const response = await axiosInstance.get(url, {\r\n      responseType: \"blob\",\r\n    });\r\n\r\n    const blob = new Blob([response.data], { type: \"application/pdf\" });\r\n    const blobUrl = window.URL.createObjectURL(blob);\r\n\r\n    const link = document.createElement(\"a\");\r\n    link.href = blobUrl;\r\n    link.setAttribute(\"download\", filename);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    link.remove();\r\n    window.URL.revokeObjectURL(blobUrl);\r\n  } catch (err) {\r\n    console.error(\"Download failed:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const uploadFormData = async (url, formData) => {\r\n  try {\r\n    const response = await axiosInstance.post(url, formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(\"File upload failed:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport default axiosInstance;\r\n"],"sourceRoot":""}