{"version":3,"sources":["pages/CreateDistributionModal.js","components/EditDistributionModal.js","pages/Distribution.js","api/axios.js"],"names":["CreateDistributionModal","_ref","isOpen","onClose","onSuccess","id","useParams","formData","setFormData","useState","miqaat","zone","counter_packing","ibadullah_count","mumin_count","loading","setLoading","error","setError","zones","setZones","counterPackings","setCounterPackings","useEffect","fetchZones","fetchCounterPackings","async","response","get","console","url","concat","handleChange","e","name","value","target","prev","_objectSpread","handleSubmit","preventDefault","payload","parseInt","post","React","createElement","Modal","ModalHeader","ModalBody","className","onSubmit","Label","Select","onChange","required","disabled","map","key","cp","menu_name","quantity","filled_percentage","Input","type","min","ModalFooter","Button","onClick","EditDistributionModal","miqaatId","distributionData","dropdownOptions","setDropdownOptions","counter_packings","isSubmitting","setIsSubmitting","isDropdownLoading","setIsDropdownLoading","_counterPackingsRes$c","zonesRes","counterPackingsRes","Promise","all","Array","isArray","results","err","fetchDropdownOptions","_distributionData$zon","_distributionData$zon2","_distributionData$cou","_distributionData$cou2","zone_id","counter_packing_id","handleInputChange","missingFields","filter","field","length","Error","join","some","ibadullahCount","muminCount","isNaN","submissionData","patch","toast","success","_err$response","_err$response$data","message","data","role","counterPacking","zone_name","placeholder","block","size","Distribution","_distributionData$dis","history","useHistory","setDistributionData","isLoading","setIsLoading","miqaatDetails","setMiqaatDetails","isCreateModalOpen","setIsCreateModalOpen","isEditModalOpen","setIsEditModalOpen","currentDistribution","setCurrentDistribution","expandedItem","setExpandedItem","fetchDistributionData","fetchMiqaatDetails","handleEditDistribution","distributionItem","handleDeleteDistribution","window","confirm","_delete","distributionId","prevData","distributions","item","toggleExpand","reduce","acc","ibadullah","mumin","total","src","logo","alt","style","top","left","position","transform","width","maxWidth","height","opacity","zIndex","handleBackClick","goBack","AiOutlineArrowLeft","fontSize","innerWidth","miqaat_name","handleAddDistribution","padding","AiOutlinePlusCircle","Fragment","TableContainer","Table","TableHeader","TableCell","TableBody","index","TableRow","AiOutlineEdit","AiOutlineDelete","stopPropagation","AiOutlineDown","handleCreateModalClose","handleEditModalClose","BASE_URL","log","axiosInstance","axios","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","reject","status","clear","location","href","params","then","res","put","delete","downloadBlob","filename","responseType","blob","Blob","blobUrl","URL","createObjectURL","link","document","setAttribute","body","appendChild","click","remove","revokeObjectURL","uploadFormData"],"mappings":"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","file":"static/js/26.95bbc385.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport {\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Button,\r\n    Label,\r\n    Input,\r\n    Select\r\n} from '@windmill/react-ui';\r\nimport { get, post } from '../api/axios';\r\n\r\nfunction CreateDistributionModal({ isOpen, onClose, onSuccess }) {\r\n    const { id } = useParams(); // Get miqaat ID if present in URL\r\n    const [formData, setFormData] = useState({\r\n        miqaat: id || '',\r\n        zone: '',\r\n        counter_packing: '',\r\n        ibadullah_count: 0,\r\n        mumin_count: 0\r\n    });\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [zones, setZones] = useState([]);\r\n    const [counterPackings, setCounterPackings] = useState([]);\r\n\r\n    // Fetch zones and counter packings when modal opens\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            fetchZones();\r\n            fetchCounterPackings();\r\n        }\r\n    }, [isOpen, id]);\r\n\r\n    const fetchZones = async () => {\r\n        try {\r\n            const response = await get('/zone/list/');\r\n            setZones(response);\r\n        } catch (error) {\r\n            console.error('Error fetching zones:', error);\r\n            setError('Failed to load zones data');\r\n        }\r\n    };\r\n\r\n    const fetchCounterPackings = async () => {\r\n        try {\r\n            let url = `/counter-packing/${id}/`;\r\n\r\n            const response = await get(url);\r\n            setCounterPackings(response.counter_packing);\r\n        } catch (error) {\r\n            console.error('Error fetching counter packings:', error);\r\n            setError('Failed to load counter packings data');\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        setError('');\r\n\r\n        try {\r\n            // Convert string values to numbers where needed\r\n            const payload = {\r\n                ...formData,\r\n                ibadullah_count: parseInt(formData.ibadullah_count, 10),\r\n                mumin_count: parseInt(formData.mumin_count, 10),\r\n                miqaat: parseInt(formData.miqaat, 10),\r\n                zone: parseInt(formData.zone, 10),\r\n                counter_packing: parseInt(formData.counter_packing, 10)\r\n            };\r\n\r\n            const response = await post('/distribution/', payload);\r\n\r\n            // Reset form and close modal\r\n            setFormData({\r\n                miqaat: id || '',\r\n                zone: '',\r\n                counter_packing: '',\r\n                ibadullah_count: 0,\r\n                mumin_count: 0\r\n            });\r\n\r\n            onSuccess(response);\r\n            onClose();\r\n        } catch (error) {\r\n            console.error('Error creating distribution:', error);\r\n            setError('Failed to create distribution. Please try again.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal isOpen={isOpen} onClose={onClose}>\r\n            <ModalHeader>Add New Distribution</ModalHeader>\r\n            <ModalBody>\r\n                {error && (\r\n                    <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\r\n                        {error}\r\n                    </div>\r\n                )}\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <Label className=\"mt-4\">\r\n                        <span>Zone</span>\r\n                        <Select\r\n                            className=\"mt-1\"\r\n                            name=\"zone\"\r\n                            value={formData.zone}\r\n                            onChange={handleChange}\r\n                            required\r\n                        >\r\n                            <option value=\"\" disabled>Select a zone</option>\r\n                            {zones.map(zone => (\r\n                                <option key={zone.id} value={zone.id}>\r\n                                    {zone.name}\r\n                                </option>\r\n                            ))}\r\n                        </Select>\r\n                    </Label>\r\n\r\n                    <Label className=\"mt-4\">\r\n                        <span>Counter Packing</span>\r\n                        <Select\r\n                            className=\"mt-1\"\r\n                            name=\"counter_packing\"\r\n                            value={formData.counter_packing}\r\n                            onChange={handleChange}\r\n                            required\r\n                        >\r\n                            <option value=\"\" disabled>Select a counter packing</option>\r\n                            {counterPackings.map(cp => (\r\n                                <option key={cp.id} value={cp.id}>\r\n                                    {cp.menu_name},  Quantity: {cp.quantity} (Fill: {cp.filled_percentage}%)\r\n                                </option>\r\n                            ))}\r\n                        </Select>\r\n                    </Label>\r\n\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mt-4\">\r\n                        <Label>\r\n                            <span>Ibadullah Count</span>\r\n                            <Input\r\n                                className=\"mt-1\"\r\n                                type=\"number\"\r\n                                name=\"ibadullah_count\"\r\n                                value={formData.ibadullah_count}\r\n                                onChange={handleChange}\r\n                                min=\"0\"\r\n                                required\r\n                            />\r\n                        </Label>\r\n\r\n                        <Label>\r\n                            <span>Mumin Count</span>\r\n                            <Input\r\n                                className=\"mt-1\"\r\n                                type=\"number\"\r\n                                name=\"mumin_count\"\r\n                                value={formData.mumin_count}\r\n                                onChange={handleChange}\r\n                                min=\"0\"\r\n                                required\r\n                            />\r\n                        </Label>\r\n                    </div>\r\n\r\n                    {/* Hidden input for miqaat ID if needed */}\r\n                    <input\r\n                        type=\"hidden\"\r\n                        name=\"miqaat\"\r\n                        value={formData.miqaat}\r\n                    />\r\n                </form>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <div className=\"flex justify-end space-x-2\">\r\n\r\n                    <Button disabled={loading} onClick={handleSubmit}>\r\n                        {loading ? 'Saving...' : 'Save'}\r\n                    </Button>\r\n                </div>\r\n            </ModalFooter>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default CreateDistributionModal;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n  Input,\r\n  Label,\r\n  Select\r\n} from '@windmill/react-ui';\r\nimport { get, patch } from '../api/axios';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst EditDistributionModal = ({\r\n  isOpen,\r\n  onClose,\r\n  miqaatId,\r\n  distributionData,\r\n  onSuccess\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    miqaat: miqaatId,\r\n    zone: '',\r\n    counter_packing: '',\r\n    ibadullah_count: '',\r\n    mumin_count: ''\r\n  });\r\n\r\n  const [dropdownOptions, setDropdownOptions] = useState({\r\n    zones: [],\r\n    counter_packings: []\r\n  });\r\n\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [isDropdownLoading, setIsDropdownLoading] = useState(false);\r\n\r\n  // Fetch dropdown options when modal opens\r\n  useEffect(() => {\r\n    const fetchDropdownOptions = async () => {\r\n      setIsDropdownLoading(true);\r\n      try {\r\n        const [zonesRes, counterPackingsRes] = await Promise.all([\r\n          get('/zone/list/'),\r\n          get(`/counter-packing/${miqaatId}/`)\r\n        ]);\r\n\r\n        setDropdownOptions({\r\n          zones: Array.isArray(zonesRes) ? zonesRes : zonesRes.results || [],\r\n          counter_packings: Array.isArray(counterPackingsRes.counter_packing) ? \r\n            counterPackingsRes.counter_packing : \r\n            counterPackingsRes.counter_packing?.results || []\r\n        });\r\n      } catch (err) {\r\n        console.error('Error fetching dropdown options:', err);\r\n        setError('Failed to load dropdown options');\r\n      } finally {\r\n        setIsDropdownLoading(false);\r\n      }\r\n    };\r\n\r\n    if (isOpen) {\r\n      fetchDropdownOptions();\r\n    }\r\n  }, [isOpen, miqaatId]);\r\n\r\n  // Set form data after dropdown options are loaded or distributionData changes\r\n  useEffect(() => {\r\n    if (distributionData && !isDropdownLoading) {\r\n      setFormData({\r\n        miqaat: miqaatId,\r\n        zone: distributionData.zone_id || (distributionData.zone?.id ?? ''),\r\n        counter_packing: distributionData.counter_packing_id || (distributionData.counter_packing?.id ?? ''),\r\n        ibadullah_count: distributionData.ibadullah_count || '',\r\n        mumin_count: distributionData.mumin_count || ''\r\n      });\r\n    }\r\n  }, [distributionData, miqaatId, isDropdownLoading]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n    setError(null);\r\n\r\n    try {\r\n      // Validate required fields\r\n      const requiredFields = ['zone', 'counter_packing', 'ibadullah_count', 'mumin_count'];\r\n      const missingFields = requiredFields.filter(field => !formData[field]);\r\n      \r\n      if (missingFields.length > 0) {\r\n        throw new Error(`Please fill in all required fields: ${missingFields.join(', ')}`);\r\n      }\r\n\r\n      // Validate dropdown selections\r\n      if (!dropdownOptions.zones.some(zone => zone.id === parseInt(formData.zone))) {\r\n        throw new Error('Please select a valid zone');\r\n      }\r\n      if (!dropdownOptions.counter_packings.some(cp => cp.id === parseInt(formData.counter_packing))) {\r\n        throw new Error('Please select a valid counter packing');\r\n      }\r\n\r\n      // Validate numeric fields\r\n      const ibadullahCount = parseInt(formData.ibadullah_count);\r\n      const muminCount = parseInt(formData.mumin_count);\r\n      if (isNaN(ibadullahCount) || ibadullahCount < 0) {\r\n        throw new Error('Ibadullah count must be a non-negative number');\r\n      }\r\n      if (isNaN(muminCount) || muminCount < 0) {\r\n        throw new Error('Mumin count must be a non-negative number');\r\n      }\r\n\r\n      // Prepare submission data\r\n      const submissionData = {\r\n        ...formData,\r\n        miqaat: parseInt(miqaatId),\r\n        zone: parseInt(formData.zone),\r\n        counter_packing: parseInt(formData.counter_packing),\r\n        ibadullah_count: ibadullahCount,\r\n        mumin_count: muminCount\r\n      };\r\n\r\n      // Submit the form\r\n      await patch(`/distribution/${distributionData.id}/`, submissionData);\r\n      \r\n      toast.success('Distribution record updated successfully');\r\n      onSuccess();\r\n      onClose();\r\n    } catch (err) {\r\n      console.error('Error updating distribution record:', err);\r\n      setError(err.message || err.response?.data?.message || 'Failed to update distribution record');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose}>\r\n      <ModalHeader>Edit Distribution Record</ModalHeader>\r\n      <ModalBody>\r\n        {error && (\r\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">\r\n            <span className=\"block sm:inline\">{error}</span>\r\n          </div>\r\n        )}\r\n        {isDropdownLoading ? (\r\n          <p className=\"text-gray-700 dark:text-gray-400\">Loading options...</p>\r\n        ) : (\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              {/* Zone Dropdown */}\r\n              <Label className=\"block text-sm\">\r\n                <span className=\"text-gray-700 dark:text-gray-400\">Zone *</span>\r\n                <Select\r\n                  name=\"zone\"\r\n                  value={formData.zone}\r\n                  onChange={handleInputChange}\r\n                  className=\"mt-1\"\r\n                  required\r\n                  disabled={isSubmitting}\r\n                >\r\n                  <option value=\"\">Select Zone</option>\r\n                  {dropdownOptions.zones.map(zone => (\r\n                    <option key={zone.id} value={zone.id}>\r\n                      {zone.name}\r\n                    </option>\r\n                  ))}\r\n                </Select>\r\n              </Label>\r\n\r\n              {/* Counter Packing Dropdown */}\r\n              <Label className=\"block text-sm\">\r\n                <span className=\"text-gray-700 dark:text-gray-400\">Counter Packing *</span>\r\n                <Select\r\n                  name=\"counter_packing\"\r\n                  value={formData.counter_packing}\r\n                  onChange={handleInputChange}\r\n                  className=\"mt-1\"\r\n                  required\r\n                  disabled={isSubmitting}\r\n                >\r\n                  <option value=\"\">Select Counter Packing</option>\r\n                  {dropdownOptions.counter_packings.map(counterPacking => (\r\n                    <option key={counterPacking.id} value={counterPacking.id}>\r\n                      Zone: {counterPacking.zone_name}, Qty: {counterPacking.quantity} ({counterPacking.filled_percentage}%)\r\n                    </option>\r\n                  ))}\r\n                </Select>\r\n              </Label>\r\n\r\n              {/* Ibadullah Count Input */}\r\n              <Label className=\"block text-sm\">\r\n                <span className=\"text-gray-700 dark:text-gray-400\">Ibadullah Count *</span>\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"ibadullah_count\"\r\n                  value={formData.ibadullah_count}\r\n                  onChange={handleInputChange}\r\n                  className=\"mt-1\"\r\n                  placeholder=\"Enter Ibadullah count\"\r\n                  min=\"0\"\r\n                  required\r\n                  disabled={isSubmitting}\r\n                />\r\n              </Label>\r\n\r\n              {/* Mumin Count Input */}\r\n              <Label className=\"block text-sm\">\r\n                <span className=\"text-gray-700 dark:text-gray-400\">Mumin Count *</span>\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"mumin_count\"\r\n                  value={formData.mumin_count}\r\n                  onChange={handleInputChange}\r\n                  className=\"mt-1\"\r\n                  placeholder=\"Enter Mumin count\"\r\n                  min=\"0\"\r\n                  required\r\n                  disabled={isSubmitting}\r\n                />\r\n              </Label>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <div className=\"hidden sm:block\">\r\n          <Button \r\n            onClick={handleSubmit} \r\n            disabled={isSubmitting || isDropdownLoading}\r\n          >\r\n            {isSubmitting ? 'Updating...' : 'Update'}\r\n          </Button>\r\n        </div>\r\n        <div className=\"w-full sm:hidden\">\r\n          <Button \r\n            block \r\n            size=\"large\" \r\n            onClick={handleSubmit}\r\n            disabled={isSubmitting || isDropdownLoading}\r\n          >\r\n            {isSubmitting ? 'Updating...' : 'Update'}\r\n          </Button>\r\n        </div>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditDistributionModal;","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { get, _delete } from '../api/axios';\r\nimport {\r\n  Table,\r\n  TableHeader,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  TableContainer,\r\n} from '@windmill/react-ui';\r\nimport {\r\n  AiOutlinePlusCircle,\r\n  AiOutlineArrowLeft,\r\n  AiOutlineDelete,\r\n  AiOutlineEdit,\r\n  AiOutlineDown,\r\n} from 'react-icons/ai';\r\nimport CreateDistributionModal from './CreateDistributionModal';\r\nimport EditDistributionModal from '../components/EditDistributionModal';\r\nimport toast from 'react-hot-toast';\r\nimport logo from '../assets/img/mainLogo.png';\r\n\r\nfunction Distribution() {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const [distributionData, setDistributionData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [miqaatDetails, setMiqaatDetails] = useState(null);\r\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n  const [currentDistribution, setCurrentDistribution] = useState(null);\r\n  const [expandedItem, setExpandedItem] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchDistributionData();\r\n    fetchMiqaatDetails();\r\n  }, [id]);\r\n\r\n  const fetchDistributionData = async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await get(`/distribution/${id}/`);\r\n      setDistributionData(response);\r\n    } catch (err) {\r\n      console.error('Error fetching distribution data:', err);\r\n      setError('Failed to load distribution data. Please try again.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchMiqaatDetails = async () => {\r\n    try {\r\n      const response = await get(`/miqaat/${id}/`);\r\n      setMiqaatDetails(response);\r\n    } catch (err) {\r\n      console.error('Error fetching miqaat details:', err);\r\n      // Don't set error state to avoid blocking UI\r\n    }\r\n  };\r\n\r\n  const handleBackClick = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const handleAddDistribution = () => {\r\n    setIsCreateModalOpen(true);\r\n  };\r\n\r\n  const handleCreateModalClose = () => {\r\n    setIsCreateModalOpen(false);\r\n  };\r\n\r\n  const handleEditModalClose = () => {\r\n    setIsEditModalOpen(false);\r\n    setCurrentDistribution(null);\r\n  };\r\n\r\n  const handleEditDistribution = (distributionItem) => {\r\n    setCurrentDistribution(distributionItem);\r\n    setIsEditModalOpen(true);\r\n  };\r\n\r\n  const handleDeleteDistribution = async (distributionId) => {\r\n    try {\r\n      const confirmDelete = window.confirm('Are you sure you want to delete this distribution record?');\r\n      if (confirmDelete) {\r\n        await _delete(`/distribution/${distributionId}/`);\r\n        setDistributionData(prevData => ({\r\n          ...prevData,\r\n          distributions: prevData.distributions.filter(item => item.id !== distributionId),\r\n        }));\r\n        toast.success('Distribution record deleted successfully');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting distribution record:', error);\r\n      toast.error('Failed to delete distribution record. Please try again.');\r\n    }\r\n  };\r\n\r\n  const toggleExpand = (id) => {\r\n    setExpandedItem(expandedItem === id ? null : id);\r\n  };\r\n\r\n  const calculateTotals = () => {\r\n    if (!distributionData?.distributions) return { total: 0, ibadullah: 0, mumin: 0 };\r\n\r\n    return distributionData.distributions.reduce(\r\n      (acc, item) => {\r\n        const ibadullah = item.ibadullah_count != null ? item.ibadullah_count : 0;\r\n        const mumin = item.mumin_count != null ? item.mumin_count : 0;\r\n        return {\r\n          total: acc.total + ibadullah + mumin,\r\n          ibadullah: acc.ibadullah + ibadullah,\r\n          mumin: acc.mumin + mumin,\r\n        };\r\n      },\r\n      { total: 0, ibadullah: 0, mumin: 0 }\r\n    );\r\n  };\r\n\r\n  const totals = calculateTotals();\r\n\r\n  return (\r\n   <div className=\"relative w-full px-4 py-6\">\r\n        {/* Watermark Logo */}\r\n            <img\r\n              src={logo}\r\n              alt=\"Watermark\"\r\n              className=\"absolute pointer-events-none select-none\"\r\n              style={{\r\n                top: \"50%\",\r\n                left: \"50%\",\r\n                position: \"absolute\",\r\n                transform: \"translate(-50%, -50%)\",\r\n                width: \"70vw\",\r\n                maxWidth: \"400px\",\r\n                height: \"auto\",\r\n                opacity: 0.05,\r\n                zIndex: 0,\r\n              }}\r\n            />\r\n    \r\n        {/* Content Overlay */}\r\n        <div className=\"relative z-10\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <div className=\"flex items-center\">\r\n          <button onClick={handleBackClick} className=\"mr-4\">\r\n            <AiOutlineArrowLeft className=\"w-5 h-5 dark:text-white\" />\r\n          </button>\r\n          <h1\r\n            style={{\r\n              fontSize: window.innerWidth < 768 ? '1.25rem' : '1.5rem',\r\n            }}\r\n            className=\"font-semibold dark:text-white\"\r\n          >\r\n            Distribution\r\n            {miqaatDetails && ` - ${miqaatDetails.miqaat_name}`}\r\n          </h1>\r\n        </div>\r\n        <button\r\n          onClick={handleAddDistribution}\r\n          className=\"flex items-center bg-purple-600 text-white rounded-lg\"\r\n          style={{\r\n            fontSize: window.innerWidth < 768 ? '0.875rem' : '1rem',\r\n            padding: window.innerWidth < 768 ? '0.5rem 1rem' : '0.75rem 1rem',\r\n          }}\r\n        >\r\n          <AiOutlinePlusCircle\r\n            className={`mr-1 ${window.innerWidth < 768 ? 'w-3 h-3' : 'w-4 h-4'}`}\r\n          />\r\n          Add\r\n        </button>\r\n      </div>\r\n\r\n      {/* Loading State */}\r\n      {isLoading ? (\r\n        <div className=\"flex justify-center my-8\">\r\n          <p className=\"text-gray-700 dark:text-gray-400\">Loading data...</p>\r\n        </div>\r\n      ) : error ? (\r\n        <div className=\"text-center py-8\">\r\n          <p className=\"text-red-600\">{error}</p>\r\n          <button\r\n            onClick={fetchDistributionData}\r\n            className=\"mt-4 bg-purple-600 text-white px-4 py-2 rounded\"\r\n          >\r\n            Retry\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {/* Desktop Table - Hidden on mobile */}\r\n          <TableContainer className=\"hidden md:block mb-8\">\r\n            <Table>\r\n              <TableHeader>\r\n                <tr>\r\n                  <TableCell>ID</TableCell>\r\n                  <TableCell>Menu</TableCell>\r\n                  <TableCell>Quantity</TableCell>\r\n                  <TableCell>Ibadullah</TableCell>\r\n                  <TableCell>Mumin</TableCell>\r\n                  <TableCell>Total</TableCell>\r\n                  <TableCell>Zone</TableCell>\r\n                  <TableCell className=\"text-right\">Actions</TableCell>\r\n                </tr>\r\n              </TableHeader>\r\n              <TableBody>\r\n                {distributionData?.distributions?.map((item, index) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell>\r\n                      <span className=\"text-sm\">{index + 1}</span>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <span className=\"text-sm font-medium\">{item.menu_name || 'N/A'}</span>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <span className=\"text-sm\">{item.quantity || 'N/A'}</span>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <span className=\"text-sm font-medium\">\r\n                        {item.ibadullah_count != null ? item.ibadullah_count : 'N/A'}\r\n                      </span>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <span className=\"text-sm font-medium\">\r\n                        {item.mumin_count != null ? item.mumin_count : 'N/A'}\r\n                      </span>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <span className=\"text-sm font-bold\">\r\n                        {(item.ibadullah_count != null ? item.ibadullah_count : 0) +\r\n                          (item.mumin_count != null ? item.mumin_count : 0)}\r\n                      </span>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <span className=\"text-sm\">{item.zone_name || 'N/A'}</span>\r\n                    </TableCell>\r\n                    <TableCell className=\"text-right\">\r\n                      <button\r\n                        onClick={() => handleEditDistribution(item)}\r\n                        className=\"text-gray-600 hover:text-blue-600 dark:text-gray-400 dark:hover:text-blue-500 mr-2\"\r\n                      >\r\n                        <AiOutlineEdit className=\"h-4 w-4 inline-block\" />\r\n                      </button>\r\n                      <button\r\n                        onClick={() => handleDeleteDistribution(item.id)}\r\n                        className=\"text-gray-600 hover:text-red-600 dark:text-gray-400 dark:hover:text-red-500\"\r\n                      >\r\n                        <AiOutlineDelete className=\"h-4 w-4 inline-block\" />\r\n                      </button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n\r\n          {/* Mobile View - Card Based Layout */}\r\n          <div className=\"md:hidden space-y-3\">\r\n            {!distributionData?.distributions || distributionData.distributions.length === 0 ? (\r\n              <div className=\"text-center py-8\">\r\n                <p className=\"text-gray-700 dark:text-gray-400\">No distribution records found</p>\r\n              </div>\r\n            ) : (\r\n              distributionData.distributions.map((item, index) => (\r\n                <div\r\n                  key={item.id}\r\n                  className=\"bg-white dark:bg-gray-800 rounded-lg shadow-md border dark:border-gray-700\"\r\n                >\r\n                  <div\r\n                    className=\"flex items-center justify-between p-4 cursor-pointer\"\r\n                    onClick={() => toggleExpand(item.id)}\r\n                  >\r\n                    <div className=\"flex items-center space-x-3\">\r\n                      <div className=\"bg-gray-100 dark:bg-gray-700 h-8 w-8 rounded-full flex items-center justify-center text-gray-700 dark:text-gray-300 font-medium\">\r\n                        {index + 1}\r\n                      </div>\r\n                      <div className=\"font-medium text-gray-800 dark:text-gray-200\">{item.menu_name || 'N/A'}</div>\r\n                    </div>\r\n                    <button\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        toggleExpand(item.id);\r\n                      }}\r\n                      className=\"text-gray-600 dark:text-gray-400\"\r\n                    >\r\n                      <AiOutlineDown\r\n                        className={`h-4 w-4 transition-transform ${expandedItem === item.id ? 'rotate-180' : ''}`}\r\n                      />\r\n                    </button>\r\n                  </div>\r\n\r\n                  {expandedItem === item.id && (\r\n                    <div className=\"px-4 pb-4 pt-0 border-t dark:border-gray-700\">\r\n                      <div className=\"mt-2 space-y-2\">\r\n                        <div>\r\n                          <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-1\">Quantity:</p>\r\n                          <p className=\"text-sm text-gray-700 dark:text-gray-300\">{item.quantity || 'N/A'}</p>\r\n                        </div>\r\n                        <div>\r\n                          <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-1\">Ibadullah Count:</p>\r\n                          <p className=\"text-sm text-gray-700 dark:text-gray-300\">\r\n                            {item.ibadullah_count != null ? item.ibadullah_count : 'N/A'}\r\n                          </p>\r\n                        </div>\r\n                        <div>\r\n                          <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-1\">Mumin Count:</p>\r\n                          <p className=\"text-sm text-gray-700 dark:text-gray-300\">\r\n                            {item.mumin_count != null ? item.mumin_count : 'N/A'}\r\n                          </p>\r\n                        </div>\r\n                        <div>\r\n                          <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-1\">Total Count:</p>\r\n                          <p className=\"text-sm font-bold text-gray-700 dark:text-gray-300\">\r\n                            {(item.ibadullah_count != null ? item.ibadullah_count : 0) +\r\n                              (item.mumin_count != null ? item.mumin_count : 0)}\r\n                          </p>\r\n                        </div>\r\n                        <div>\r\n                          <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-1\">Zone:</p>\r\n                          <p className=\"text-sm text-gray-700 dark:text-gray-300\">{item.zone_name || 'N/A'}</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mt-4 flex justify-end space-x-2\">\r\n                        <button\r\n                          onClick={() => handleEditDistribution(item)}\r\n                          className=\"text-white px-4 py-1 rounded-md bg-blue-600 hover:bg-blue-700 dark:bg-blue-500 dark:hover:bg-blue-600 flex items-center\"\r\n                        >\r\n                          <AiOutlineEdit className=\"h-4 w-4 mr-1\" />\r\n                          Edit\r\n                        </button>\r\n                        <button\r\n                          onClick={() => handleDeleteDistribution(item.id)}\r\n                          className=\"text-white px-4 py-1 rounded-md bg-red-600 hover:bg-red-700 dark:bg-red-500 dark:hover:bg-red-600 flex items-center\"\r\n                        >\r\n                          <AiOutlineDelete className=\"h-4 w-4 mr-1\" />\r\n                          Delete\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n\r\n        \r\n        </>\r\n      )}\r\n\r\n      {/* Modals */}\r\n      {isCreateModalOpen && (\r\n        <CreateDistributionModal\r\n          isOpen={isCreateModalOpen}\r\n          onClose={handleCreateModalClose}\r\n          miqaatId={id}\r\n          onSuccess={fetchDistributionData}\r\n        />\r\n      )}\r\n\r\n      {isEditModalOpen && currentDistribution && (\r\n        <EditDistributionModal\r\n          isOpen={isEditModalOpen}\r\n          onClose={handleEditModalClose}\r\n          miqaatId={id}\r\n          distributionData={currentDistribution}\r\n          onSuccess={fetchDistributionData}\r\n        />\r\n      )}\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Distribution;","import axios from \"axios\";\r\n\r\n// let BASE_URL = \"http://35.172.211.35/api\";\r\nlet BASE_URL = \"https://rms-v2.duckdns.org/api\";\r\n\r\n\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n  console.log(\"Running in Production Mode\");\r\n  BASE_URL = \"https://rms-v2.duckdns.org/api\";\r\n} else {\r\n  // BASE_URL = \"http://localhost:8000/api/v1\";\r\n  console.log(\"Running in Development Mode\");\r\n}\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: BASE_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"accessToken\");\r\n    if (token) {\r\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    // await logErrorToBackend(error);\r\n    if (error.response && error.response.status === 401) {\r\n      localStorage.clear();\r\n      window.location.href = \"/\";\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const get = async (url, params) => {\r\n  return axiosInstance.get(url, { params }).then((res) => res.data);\r\n};\r\n\r\nexport const post = async (url, data) => {\r\n  return axiosInstance.post(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const put = async (url, data) => {\r\n  return axiosInstance.put(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const patch = async (url, data) => {\r\n  return axiosInstance.patch(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const _delete = async (url) => {\r\n  return axiosInstance.delete(url).then((res) => res.data);\r\n};\r\n\r\nexport const downloadBlob = async (url, filename) => {\r\n  try {\r\n    const response = await axiosInstance.get(url, {\r\n      responseType: \"blob\",\r\n    });\r\n\r\n    const blob = new Blob([response.data], { type: \"application/pdf\" });\r\n    const blobUrl = window.URL.createObjectURL(blob);\r\n\r\n    const link = document.createElement(\"a\");\r\n    link.href = blobUrl;\r\n    link.setAttribute(\"download\", filename);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    link.remove();\r\n    window.URL.revokeObjectURL(blobUrl);\r\n  } catch (err) {\r\n    console.error(\"Download failed:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const uploadFormData = async (url, formData) => {\r\n  try {\r\n    const response = await axiosInstance.post(url, formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(\"File upload failed:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport default axiosInstance;\r\n"],"sourceRoot":""}