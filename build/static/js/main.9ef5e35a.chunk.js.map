{"version":3,"sources":["context/ModalContext.js","context/SidebarContext.js","components/ThemedSuspense.js","components/AccessibleNavigationAnnouncer.js","routes/PublicRoute.js","routes/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["ModalContext","createContext","ModalProvider","_ref","children","modalState","setModalState","useState","isDialogOpen","fromFeatureModal","selectedEvent","React","createElement","Provider","value","openModal","arguments","length","undefined","closeModal","prev","_objectSpread","clearModalState","useModal","useContext","SidebarContext","SidebarProvider","isSidebarOpen","setIsSidebarOpen","toggleSidebar","closeSidebar","useMemo","ThemedSuspense","className","AccessibleNavigationAnnouncer","message","setMessage","location","useLocation","useEffect","pathname","slice","setTimeout","concat","role","aria-live","aria-atomic","PublicRoute","component","Component","rest","_objectWithoutProperties","_excluded","Route","Object","assign","render","props","localStorage","getItem","Redirect","to","PrivateRoute","isAuthenticated","JSON","parse","routePermissions","admin","super_admin","currentPath","state","from","allowedPaths","includes","defaultRedirect","LoadingSpinner","Layout","lazy","Login","CreateAccount","ForgotPassword","Registration","RegistrationHistory","AppContent","history","useHistory","featurePaths","unlisten","listen","newLocation","action","newPath","isCurrentPageFeatureOrTables","some","path","isNavigatingToFeaturePage","isNavigatingToTables","Switch","exact","App","Router","Suspense","fallback","Toaster","position","toastOptions","success","style","background","color","borderRadius","fontWeight","padding","boxShadow","iconTheme","primary","secondary","error","loading","duration","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","Windmill","usePreferences","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9ef5e35a.chunk.js","sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\nconst ModalContext = createContext();\r\n\r\nexport const ModalProvider = ({ children }) => {\r\n  const [modalState, setModalState] = useState({\r\n    isDialogOpen: false,\r\n    fromFeatureModal: false,\r\n    selectedEvent: null,\r\n  });\r\n\r\n  const openModal = (selectedEvent, fromFeatureModal = false) => {\r\n    setModalState({\r\n      isDialogOpen: true,\r\n      fromFeatureModal,\r\n      selectedEvent,\r\n    });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalState(prev => ({\r\n      ...prev,\r\n      isDialogOpen: false,\r\n      // Preserve fromFeatureModal and selectedEvent\r\n    }));\r\n  };\r\n\r\n  const clearModalState = () => {\r\n    setModalState({\r\n      isDialogOpen: false,\r\n      fromFeatureModal: false,\r\n      selectedEvent: null,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ModalContext.Provider value={{ modalState, openModal, closeModal, clearModalState }}>\r\n      {children}\r\n    </ModalContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useModal = () => useContext(ModalContext);","import React, { useState, useMemo } from 'react';\r\n\r\n// create context\r\nexport const SidebarContext = React.createContext();\r\n\r\nexport const SidebarProvider = ({ children }) => {\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\r\n\r\n  function toggleSidebar() {\r\n    setIsSidebarOpen(!isSidebarOpen);\r\n  }\r\n\r\n  function closeSidebar() {\r\n    setIsSidebarOpen(false);\r\n  }\r\n\r\n  const value = useMemo(\r\n    () => ({\r\n      isSidebarOpen,\r\n      toggleSidebar,\r\n      closeSidebar,\r\n    }),\r\n    [isSidebarOpen]\r\n  );\r\n\r\n  return <SidebarContext.Provider value={value}>{children}</SidebarContext.Provider>;\r\n};","import React from 'react'\r\n\r\nfunction ThemedSuspense() {\r\n  return (\r\n    <div className=\"w-full h-screen p-6 text-lg font-medium text-gray-600 dark:text-gray-400 dark:bg-gray-900\">\r\n      Loading...\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ThemedSuspense\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nfunction AccessibleNavigationAnnouncer() {\r\n  const [message, setMessage] = useState('')\r\n  const location = useLocation()\r\n\r\n  useEffect(() => {\r\n    // ignore the /\r\n    if (location.pathname.slice(1)) {\r\n      // make sure navigation has occurred and screen reader is ready\r\n      setTimeout(() => setMessage(`Navigated to ${location.pathname.slice(1)} page.`), 500)\r\n    } else {\r\n      setMessage('')\r\n    }\r\n  }, [location])\r\n\r\n  return (\r\n    <span className=\"sr-only\" role=\"status\" aria-live=\"polite\" aria-atomic=\"true\">\r\n      {message}\r\n    </span>\r\n  )\r\n}\r\n\r\nexport default AccessibleNavigationAnnouncer\r\n","  import React from 'react';\r\n  import { Route, Redirect } from 'react-router-dom';\r\n\r\n  // This route is for public pages - redirects to app if already logged in\r\n  const PublicRoute = ({ component: Component, ...rest }) => {\r\n    const isAuthenticated = () => {\r\n      // Check if user is logged in by verifying token existence\r\n      return !!localStorage.getItem('accessToken');\r\n    };\r\n\r\n\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          isAuthenticated() ? (\r\n            \r\n            // If logged in, redirect to app dashboard\r\n            <Redirect to=\"/app\" />\r\n          ) : (\r\n            // Otherwise, show the login component\r\n            <Component {...props} />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  export default PublicRoute;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const isAuthenticated = !!localStorage.getItem('accessToken');\r\n  const user = JSON.parse(localStorage.getItem('user') || '{}');\r\n  const role = localStorage.getItem('role');\r\n  const routePermissions = {\r\n    admin: [\r\n      '/app/request',\r\n    ],\r\n    super_admin: [\r\n      '/app/users',      \r\n      '/app/request',\r\n      '/app/zones',\r\n      '/app/city',\r\n      '/app/batch',\r\n\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        const currentPath = props.location.pathname;\r\n\r\n        if (!isAuthenticated) {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/login',\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n        }\r\n\r\n        const allowedPaths = routePermissions[role];\r\n\r\n        // If the user's role doesn't exist in our config or the path isn't allowed\r\n        if (!allowedPaths || !allowedPaths.includes(currentPath)) {\r\n          const defaultRedirect = role === 'super_admin' ? '/app/users' : '/app/request';\r\n          return <Redirect to={defaultRedirect} />;\r\n        }\r\n\r\n        // All good, render the component\r\n        return <Component {...props} />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { lazy, Suspense, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect, useHistory } from 'react-router-dom';\r\nimport AccessibleNavigationAnnouncer from './components/AccessibleNavigationAnnouncer';\r\nimport PublicRoute from './routes/PublicRoute';\r\nimport PrivateRoute from './routes/PrivateRoute';\r\nimport { Toaster } from 'react-hot-toast';\r\nimport { ModalProvider, useModal } from './context/ModalContext';\r\n\r\n// Loading spinner component for Suspense fallback\r\nconst LoadingSpinner = () => (\r\n  <div className=\"flex items-center justify-center w-full h-screen\">\r\n    <div className=\"w-16 h-16 border-4 border-purple-600 border-solid rounded-full border-t-transparent animate-spin\"></div>\r\n  </div>\r\n)\r\n\r\nconst Layout = lazy(() => import('./containers/Layout'));\r\nconst Login = lazy(() => import('./pages/Login'));\r\nconst CreateAccount = lazy(() => import('./pages/CreateAccount'));\r\nconst ForgotPassword = lazy(() => import('./pages/ForgotPassword'));\r\nconst Registration = lazy(() => import('./pages/registration'));\r\nconst RegistrationHistory = lazy(() => import('./pages/RegistrationsHistory'));\r\n\r\n\r\nconst Tables = lazy(() => import('./pages/Tables'));\r\n\r\nfunction App() {\r\n  return (\r\n    <ModalProvider>\r\n      <Router>\r\n        <AccessibleNavigationAnnouncer />\r\n        <Suspense fallback={<LoadingSpinner />}>\r\n          <AppContent />\r\n          <Toaster\r\n            position=\"top-right\"\r\n            toastOptions={{\r\n              success: {\r\n                style: {\r\n                  background: 'linear-gradient(to right, #0D9488, #10B981)',\r\n                  color: 'white',\r\n                  borderRadius: '8px',\r\n                  fontWeight: 500,\r\n                  padding: '10px 16px',\r\n                  boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)',\r\n                },\r\n                iconTheme: {\r\n                  primary: 'white',\r\n                  secondary: '#0D9488',\r\n                },\r\n              },\r\n              error: {\r\n                style: {\r\n                  background: 'linear-gradient(to right, #DC2626, #EF4444)',\r\n                  color: 'white',\r\n                  borderRadius: '8px',\r\n                  fontWeight: 500,\r\n                  padding: '10px 16px',\r\n                  boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)',\r\n                },\r\n                iconTheme: {\r\n                  primary: 'white',\r\n                  secondary: '#DC2626',\r\n                },\r\n              },\r\n              loading: {\r\n                style: {\r\n                  background: 'linear-gradient(to right, #1F2937, #374151)',\r\n                  color: 'white',\r\n                  borderRadius: '8px',\r\n                  fontWeight: 500,\r\n                  padding: '10px 16px',\r\n                  boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)',\r\n                },\r\n              },\r\n              duration: 4000,\r\n            }}\r\n          />\r\n        </Suspense>\r\n      </Router>\r\n    </ModalProvider>\r\n  );\r\n}\r\n\r\nfunction AppContent() {\r\n  const history = useHistory();\r\n  const { clearModalState } = useModal();\r\n\r\n  useEffect(() => {\r\n    const featurePaths = [\r\n      '/app/miqaat-menu/',\r\n      '/app/miqaat-attendance/',\r\n      '/app/counter-packing/',\r\n      '/app/distribution/',\r\n      '/app/leftover-degs/',\r\n    ];\r\n\r\n    const unlisten = history.listen((newLocation, action) => {\r\n      const currentPath = history.location.pathname;\r\n      const newPath = newLocation.pathname;\r\n\r\n\r\n      const isCurrentPageFeatureOrTables =\r\n        currentPath.includes('/app/tables') ||\r\n        featurePaths.some(path => currentPath.includes(path));\r\n\r\n      const isNavigatingToFeaturePage = featurePaths.some(path => newPath.includes(path));\r\n      const isNavigatingToTables = newPath.includes('/app/tables');\r\n\r\n\r\n      if (isCurrentPageFeatureOrTables && !isNavigatingToFeaturePage && !isNavigatingToTables) {\r\n        clearModalState();\r\n      } \r\n    }); \r\n\r\n    return () => unlisten();\r\n  }, [history, clearModalState]);\r\n\r\n  return (\r\n    <Switch>\r\n      <PublicRoute path=\"/login\" component={Login} />\r\n      <PublicRoute path=\"/create-account\" component={CreateAccount} />\r\n      <PublicRoute path=\"/forgot-password\" component={ForgotPassword} />\r\n      <PublicRoute path=\"/registration/:miqaat_id\" component={Registration} />\r\n      <PublicRoute path=\"/miqaat/history\" component={RegistrationHistory} />\r\n\r\n\r\n      <PrivateRoute path=\"/app\" component={Layout} />\r\n      <Route exact path=\"/\">\r\n        {localStorage.getItem('accessToken') ? (\r\n          <Redirect to=\"app/event/miqaat-home\" />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )}\r\n      </Route>\r\n      <Route path=\"*\">\r\n        {localStorage.getItem('accessToken') ? (\r\n          <Redirect to=\"/app\" />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )}\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { Suspense } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './assets/css/tailwind.output.css'\r\nimport App from './App'\r\nimport { SidebarProvider } from './context/SidebarContext'\r\nimport ThemedSuspense from './components/ThemedSuspense'\r\nimport { Windmill } from '@windmill/react-ui'\r\nimport * as serviceWorker from './serviceWorker'\r\n// import { AuthProvider } from './authcontext';\r\n\r\n// if (process.env.NODE_ENV !== 'production') {\r\n//   const axe = require('react-axe')\r\n//   axe(React, ReactDOM, 1000)\r\n// }\r\n\r\nReactDOM.render(\r\n  <SidebarProvider>\r\n    <Suspense fallback={<ThemedSuspense />}>\r\n      <Windmill usePreferences>\r\n        {/* <AuthProvider> */}\r\n        <App />\r\n        {/* </AuthProvider> */}\r\n      </Windmill>\r\n    </Suspense>\r\n  </SidebarProvider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register()\r\n"],"sourceRoot":""}