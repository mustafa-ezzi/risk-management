{"version":3,"sources":["components/CreateRequestModal.js","components/EditRequestModal.js","pages/Request.js","api/axios.js","components/Typography/PageTitle.js"],"names":["CreateRequestModal","_ref","isOpen","onClose","onRequestCreated","formData","setFormData","useState","its","type","meta","city","zone","toggle","pass_date","isSubmitting","setIsSubmitting","errors","setErrors","permissionsList","setPermissionsList","citiesList","setCitiesList","zonesList","setZonesList","isLoadingPerms","setIsLoadingPerms","isLoadingCities","setIsLoadingCities","isLoadingZones","setIsLoadingZones","useEffect","async","res","get","Array","isArray","_unused","prev","_objectSpread","fetchPerms","fetchPermissions","results","_unused2","fetchCities","_unused3","fetchZones","handleChange","e","name","value","target","fd","handleSubmit","preventDefault","valipass_dateForm","errs","test","trim","Object","keys","length","post","err","_err$response","console","error","msg","response","data","_err$response2","submit","React","createElement","Modal","ModalHeader","ModalBody","onSubmit","className","Label","Input","onChange","placeholder","maxLength","Select","disabled","map","perm","i","key","code","description","c","id","z","Fragment","checked","ModalFooter","Button","onClick","EditRequestModal","onRequestUpdated","requestData","resetForm","fetchList","url","setList","setErr","setLoading","concat","validate","patch","idx","Request","statusFilter","setStatusFilter","typeFilter","setTypeFilter","createdByFilter","setCreatedByFilter","applyFilterTrigger","setApplyFilterTrigger","batchName","setBatchName","selectedRequestIds","setSelectedRequestIds","isBatchMode","setIsBatchMode","setRequestData","isLoading","setIsLoading","setError","isCreateModalOpen","setIsCreateModalOpen","isEditModalOpen","setIsEditModalOpen","currentRequest","setCurrentRequest","refreshTrigger","setRefreshTrigger","expandedGroups","setExpandedGroups","statusOptions","setStatusOptions","typeOptions","setTypeOptions","createdByOptions","setCreatedByOptions","resp","statuses","types","creators","fetchFilters","params","URLSearchParams","append","queryString","toString","endpoint","requests","grouped","reduce","acc","item","push","values","selectedIds","g","_g$requests$","filter","Boolean","flatMap","group","first","fetchRequestData","handleAddRequest","handleEditClick","request","handleSwitchToBatchMode","trigger","formatStatus","status","split","word","charAt","toUpperCase","slice","join","toggleSelectId","includes","x","getStatusStyle","handleDeleteRequest","window","confirm","_delete","prevData","toast","success","PageTitle","request_ids","t","replace","created_by__id","created_by__username","username","TableContainer","Table","TableHeader","TableCell","TableBody","groupIndex","_firstRequest$toggle","firstRequest","isExpanded","TableRow","city_name","zone_name","created_by","layout","size","aria-label","AiOutlineEdit","AiOutlineDelete","req","subIndex","_req$toggle","colSpan","style","opacity","_firstRequest$toggle2","_req$toggle2","handleCreateModalClose","handleRequestCreated","handleEditModalClose","handleRequestUpdated","BASE_URL","log","axiosInstance","axios","create","baseURL","headers","interceptors","use","config","token","localStorage","getItem","Promise","reject","clear","location","href","then","put","delete","downloadBlob","filename","responseType","blob","Blob","blobUrl","URL","createObjectURL","link","document","setAttribute","body","appendChild","click","remove","revokeObjectURL","uploadFormData","children"],"mappings":"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","file":"static/js/19.83e838cf.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n  Input,\r\n  Label,\r\n  Select,\r\n} from '@windmill/react-ui';\r\nimport { post, get } from '../api/axios';\r\n\r\nfunction CreateRequestModal({ isOpen, onClose, onRequestCreated }) {\r\n  const [formData, setFormData] = useState({\r\n    its: '',\r\n    type: '',\r\n    meta: '',\r\n    city: null,\r\n    zone: null,\r\n    toggle: null,\r\n    pass_date: null,\r\n  });\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [permissionsList, setPermissionsList] = useState([]);\r\n  const [citiesList, setCitiesList] = useState([]);\r\n  const [zonesList, setZonesList] = useState([]);\r\n  const [isLoadingPerms, setIsLoadingPerms] = useState(false);\r\n  const [isLoadingCities, setIsLoadingCities] = useState(false);\r\n  const [isLoadingZones, setIsLoadingZones] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchPermissions = async () => {\r\n      setIsLoadingPerms(true);\r\n      try {\r\n        const res = await get('/users/permissions/');\r\n        setPermissionsList(Array.isArray(res) ? res : []);\r\n      } catch {\r\n        setErrors(prev => ({ ...prev, fetchPerms: 'Failed to load permissions' }));\r\n      } finally {\r\n        setIsLoadingPerms(false);\r\n      }\r\n    };\r\n\r\n    const fetchCities = async () => {\r\n      setIsLoadingCities(true);\r\n      try {\r\n        const res = await get('/requests/cities');\r\n        setCitiesList(Array.isArray(res.results) ? res.results : []);\r\n      } catch {\r\n        setErrors(prev => ({ ...prev, fetchCities: 'Failed to load cities' }));\r\n      } finally {\r\n        setIsLoadingCities(false);\r\n      }\r\n    };\r\n\r\n    const fetchZones = async () => {\r\n      setIsLoadingZones(true);\r\n      try {\r\n        const res = await get('/requests/zones');\r\n        setZonesList(Array.isArray(res.results) ? res.results : []);\r\n      } catch {\r\n        setErrors(prev => ({ ...prev, fetchZones: 'Failed to load zones' }));\r\n      } finally {\r\n        setIsLoadingZones(false);\r\n      }\r\n    };\r\n\r\n    if (isOpen) {\r\n      fetchPermissions();\r\n      fetchCities();\r\n      fetchZones();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setFormData(fd => ({\r\n      ...fd,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const valipass_dateForm = () => {\r\n    const errs = {};\r\n    if (!/^\\d{8}$/.test(formData.its.trim())) {\r\n      errs.its = 'ITS must be an 8-digit number.';\r\n    }\r\n\r\n    if (formData.type === 'pass_request') {\r\n      if (!formData.toggle) errs.toggle = 'Please select waaz or majlis or bethak.';\r\n      if (!formData.pass_date) errs.pass_date = 'Please pick a pass_date.';\r\n    }\r\n    if (formData.type === 'change_city_request') {\r\n      if (!formData.city) errs.city = 'Please select a city.';\r\n    }\r\n    if (formData.type === 'change_zone_request') {\r\n      if (!formData.zone) errs.zone = 'Please select a zone.';\r\n    }\r\n\r\n    setErrors(errs);\r\n    return Object.keys(errs).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    if (!valipass_dateForm()) return;\r\n\r\n    try {\r\n      setIsSubmitting(true);\r\n      await post('/requests/create-request/', formData);\r\n      setFormData({\r\n    its: '',\r\n    type: '',\r\n    meta: '',\r\n    city: null,\r\n    zone: null,\r\n    toggle: null,\r\n    pass_date: null,\r\n      });\r\n      if (onRequestCreated) onRequestCreated();\r\n      onClose();\r\n    } catch (err) {\r\n      console.error(err);\r\n      const msg = err.response?.data\r\n        ? 'Failed to create request. Check the form.'\r\n        : 'Failed to create request. Try again.';\r\n      setErrors(prev => ({ ...prev, submit: msg, ...err.response?.data }));\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setFormData({\r\n    its: '',\r\n    type: '',\r\n    meta: '',\r\n    city: null,\r\n    zone: null,\r\n    toggle: null,\r\n    pass_date: null,\r\n    });\r\n    setErrors({});\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isOpen) resetForm();\r\n  }, [isOpen]);\r\n\r\n  const { type } = formData;\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose}>\r\n      <ModalHeader>Add New Request</ModalHeader>\r\n      <ModalBody>\r\n        <form onSubmit={handleSubmit}>\r\n          {/* ITS */}\r\n          <div className=\"mb-4\">\r\n            <Label>\r\n              <span>ITS *</span>\r\n              <Input\r\n                name=\"its\"\r\n                value={formData.its}\r\n                onChange={handleChange}\r\n                placeholder=\"Enter 8-digit ITS\"\r\n                maxLength={8}\r\n              />\r\n              {errors.its && <span className=\"text-xs text-red-600\">{errors.its}</span>}\r\n            </Label>\r\n          </div>\r\n\r\n          {/* Type */}\r\n          <div className=\"mb-4\">\r\n            <Label>\r\n              <span>Type *</span>\r\n              <Select\r\n                name=\"type\"\r\n                value={formData.type}\r\n                onChange={handleChange}\r\n                disabled={isLoadingPerms}\r\n              >\r\n                <option value=\"\">Select a permission</option>\r\n                {permissionsList.map((perm, i) => (\r\n                  <option key={i} value={perm.code}>\r\n                    {perm.description || perm.code}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n              {errors.type && <span className=\"text-xs text-red-600\">{errors.type}</span>}\r\n            </Label>\r\n          </div>\r\n\r\n          {/* Conditionally render inputs based on type */}\r\n          {type === 'change_city_request' && (\r\n            <div className=\"mb-4\">\r\n              <Label>\r\n                <span>City *</span>\r\n                <Select\r\n                  name=\"city\"\r\n                  value={formData.city}\r\n                  onChange={handleChange}\r\n                  disabled={isLoadingCities}\r\n                >\r\n                  <option value=\"\">Select a city</option>\r\n                  {citiesList.map((c, i) => (\r\n                    <option key={i} value={c.id || c.code || c}>\r\n                      {c.name || c.description || c}\r\n                    </option>\r\n                  ))}\r\n                </Select>\r\n                {errors.city && <span className=\"text-xs text-red-600\">{errors.city}</span>}\r\n              </Label>\r\n            </div>\r\n          )}\r\n\r\n          {type === 'change_zone_request' && (\r\n            <div className=\"mb-4\">\r\n              <Label>\r\n                <span>Zone *</span>\r\n                <Select\r\n                  name=\"zone\"\r\n                  value={formData.zone}\r\n                  onChange={handleChange}\r\n                  disabled={isLoadingZones}\r\n                >\r\n                  <option value=\"\">Select a zone</option>\r\n                  {zonesList.map((z, i) => (\r\n                    <option key={i} value={z.id || z.code || z}>\r\n                      {z.name || z.description || z}\r\n                    </option>\r\n                  ))}\r\n                </Select>\r\n                {errors.zone && <span className=\"text-xs text-red-600\">{errors.zone}</span>}\r\n              </Label>\r\n            </div>\r\n          )}\r\n\r\n          {type === 'pass_request' && (\r\n            <>\r\n              <div className=\"mb-4\">\r\n                <Label>\r\n                  <span>Waaz/Majlis/Bethak *</span>\r\n                  <div className=\"mt-1 space-x-4\">\r\n                    <label className=\"inline-flex items-center\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"toggle\"\r\n                        value=\"waaz\"\r\n                        checked={formData.toggle === 'waaz'}\r\n                        onChange={handleChange}\r\n                        className=\"form-radio\"\r\n                      />\r\n                      <span className=\"ml-2\">Waaz</span>\r\n                    </label>\r\n                    <label className=\"inline-flex items-center\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"toggle\"\r\n                        value=\"majlis\"\r\n                        checked={formData.toggle === 'majlis'}\r\n                        onChange={handleChange}\r\n                        className=\"form-radio\"\r\n                      />\r\n                      <span className=\"ml-2\">Majlis</span>\r\n                    </label>\r\n                       <label className=\"inline-flex items-center\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"toggle\"\r\n                        value=\"bethak\"\r\n                        checked={formData.toggle === 'bethak'}\r\n                        onChange={handleChange}\r\n                        className=\"form-radio\"\r\n                      />\r\n                      <span className=\"ml-2\">Bethak</span>\r\n                    </label>\r\n                  </div>\r\n                  {errors.toggle && <span className=\"text-xs text-red-600\">{errors.toggle}</span>}\r\n                </Label>\r\n              </div>\r\n\r\n              {/* Date Picker */}\r\n              <div className=\"mb-4\">\r\n                <Label>\r\n                  <span>Date *</span>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"pass_date\"\r\n                    value={formData.pass_date}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {errors.pass_date && <span className=\"text-xs text-red-600\">{errors.pass_date}</span>}\r\n                </Label>\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n          {/* Meta */}\r\n          <div className=\"mb-4\">\r\n            <Label>\r\n              <span>Meta</span>\r\n              <textarea\r\n                name=\"meta\"\r\n                value={formData.meta}\r\n                onChange={handleChange}\r\n                className=\"w-full px-3 py-2 border rounded-md text-sm\"\r\n                placeholder=\"Additional info (optional)\"\r\n              />\r\n            </Label>\r\n          </div>\r\n\r\n          {/* Errors */}\r\n          {errors.fetchPerms && <p className=\"text-red-600 mb-2\">{errors.fetchPerms}</p>}\r\n          {errors.fetchCities && <p className=\"text-red-600 mb-2\">{errors.fetchCities}</p>}\r\n          {errors.fetchZones && <p className=\"text-red-600 mb-2\">{errors.fetchZones}</p>}\r\n          {errors.submit && <p className=\"text-red-600 mb-2\">{errors.submit}</p>}\r\n        </form>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button onClick={handleSubmit} disabled={isSubmitting}>\r\n          {isSubmitting ? 'Saving...' : 'Save Request'}\r\n        </Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default CreateRequestModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Modal, ModalHeader, ModalBody, ModalFooter,\r\n  Button, Input, Label, Select,\r\n} from '@windmill/react-ui';\r\nimport { patch, get } from '../api/axios';\r\n\r\nfunction EditRequestModal({ isOpen, onClose, onRequestUpdated, requestData }) {\r\n  const [formData, setFormData] = useState({\r\n    its: '',\r\n    type: '',\r\n    meta: '',\r\n    city: '',\r\n    zone: '',\r\n    toggle: '',\r\n    pass_date: '',\r\n  });\r\n  const [permissionsList, setPermissionsList] = useState([]);\r\n  const [citiesList, setCitiesList] = useState([]);\r\n  const [zonesList, setZonesList] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const [isLoadingPerms, setIsLoadingPerms] = useState(false);\r\n  const [isLoadingCities, setIsLoadingCities] = useState(false);\r\n  const [isLoadingZones, setIsLoadingZones] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  // Fetch permissions, cities, zones when opened\r\n  useEffect(() => {\r\n    if (!isOpen) return resetForm();\r\n\r\n    const fetchList = async (url, setList, setErr, setLoading) => {\r\n      setLoading(true);\r\n      try {\r\n        const res = await get(url);\r\n        setList(Array.isArray(res.results) ? res.results : Array.isArray(res) ? res : []);\r\n      } catch {\r\n        setErr(prev => ({ ...prev, [url]: `Failed to load ${url}` }));\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchList('/users/permissions/', setPermissionsList, setErrors, setIsLoadingPerms);\r\n    fetchList('/requests/cities', setCitiesList, setErrors, setIsLoadingCities);\r\n    fetchList('/requests/zones', setZonesList, setErrors, setIsLoadingZones);\r\n  }, [isOpen]);\r\n\r\n  // Prefill when requestData changes\r\n  useEffect(() => {\r\n    if (isOpen && requestData) {\r\n      setFormData({\r\n        its: requestData.its || '',\r\n        type: requestData.type || '',\r\n        meta: requestData.meta || '',\r\n        city: requestData.city || null,\r\n        zone: requestData.zone || null,\r\n        toggle: requestData.toggle || null,\r\n        pass_date: requestData.pass_date || null,\r\n      });\r\n    }\r\n  }, [isOpen, requestData]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setFormData(fd => ({ ...fd, [name]: value }));\r\n  };\r\n\r\n  const validate = () => {\r\n    const errs = {};\r\n    if (!/^\\d{8}$/.test(formData.its.trim())) {\r\n      errs.its = 'ITS must be an 8-digit number.';\r\n    }\r\n\r\n    if (formData.type === 'pass_request') {\r\n      if (!formData.toggle) errs.toggle = 'Please select waaz or majlis or bethak';\r\n      if (!formData.pass_date) errs.pass_date = 'Please pick a date.';\r\n    }\r\n\r\n    if (formData.type === 'change_city_request' && !formData.city) {\r\n      errs.city = 'Please select a city.';\r\n    }\r\n\r\n    if (formData.type === 'change_zone_request' && !formData.zone) {\r\n      errs.zone = 'Please select a zone.';\r\n    }\r\n\r\n    setErrors(errs);\r\n    return Object.keys(errs).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    if (!validate()) return;\r\n\r\n    try {\r\n      setIsSubmitting(true);\r\n      await patch(`/requests/requests/${requestData.id}/edit/`, formData);\r\n      if (typeof onRequestUpdated === 'function') {\r\n        onRequestUpdated();\r\n      }\r\n      onClose();\r\n    } catch (err) {\r\n      const msg = err.response?.data ? 'Check the fields.' : 'Try again.';\r\n      setErrors(prev => ({ ...prev, submit: msg, ...err.response?.data }));\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setFormData({\r\n      its: '',\r\n      type: '',\r\n      meta: '',\r\n      city: null,\r\n      zone: null,\r\n      toggle: null,\r\n      pass_date: null,\r\n    });\r\n    setErrors({});\r\n  };\r\n\r\n  const { type } = formData;\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose}>\r\n      <ModalHeader>Edit Request</ModalHeader>\r\n      <ModalBody>\r\n        <form onSubmit={handleSubmit}>\r\n          {/* ITS */}\r\n          <Label className=\"mb-4\">\r\n            <span>ITS *</span>\r\n            <Input\r\n              name=\"its\"\r\n              value={formData.its}\r\n              onChange={handleChange}\r\n              maxLength={8}\r\n            />\r\n            {errors.its && <span className=\"text-xs text-red-600\">{errors.its}</span>}\r\n          </Label>\r\n\r\n          {/* Type */}\r\n          <Label className=\"mb-4\">\r\n            <span>Type *</span>\r\n            <Select name=\"type\" value={formData.type} onChange={handleChange} disabled={isLoadingPerms}>\r\n              <option value=\"\">Select a type</option>\r\n              {permissionsList.map((perm, idx) => (\r\n                <option key={idx} value={perm.code}>{perm.description || perm.code}</option>\r\n              ))}\r\n            </Select>\r\n            {errors.type && <span className=\"text-xs text-red-600\">{errors.type}</span>}\r\n          </Label>\r\n\r\n          {/* Conditional fields */}\r\n          {type === 'change_city_request' && (\r\n            <Label className=\"mb-4\">\r\n              <span>City *</span>\r\n              <Select name=\"city\" value={formData.city} onChange={handleChange} disabled={isLoadingCities}>\r\n                <option value=\"\">Select a city</option>\r\n                {citiesList.map((c, i) => (\r\n                  <option key={i} value={c.id || c.code || c}>{c.name || c.description || c}</option>\r\n                ))}\r\n              </Select>\r\n              {errors.city && <span className=\"text-xs text-red-600\">{errors.city}</span>}\r\n            </Label>\r\n          )}\r\n\r\n          {type === 'change_zone_request' && (\r\n            <Label className=\"mb-4\">\r\n              <span>Zone *</span>\r\n              <Select name=\"zone\" value={formData.zone} onChange={handleChange} disabled={isLoadingZones}>\r\n                <option value=\"\">Select a zone</option>\r\n                {zonesList.map((z, i) => (\r\n                  <option key={i} value={z.id || z.code || z}>{z.name || z.description || z}</option>\r\n                ))}\r\n              </Select>\r\n              {errors.zone && <span className=\"text-xs text-red-600\">{errors.zone}</span>}\r\n            </Label>\r\n          )}\r\n\r\n          {type === 'pass_request' && (\r\n            <>\r\n              <Label className=\"mb-4\">\r\n                <span>Waaz/Majlis/Bethak *</span>\r\n                <div className=\"space-x-4\">\r\n                  <label className=\"inline-flex items-center\">\r\n                    <input\r\n                      type=\"radio\" name=\"toggle\" value=\"waaz\"\r\n                      checked={formData.toggle === 'waaz'} onChange={handleChange}\r\n                    />\r\n                    <span className=\"ml-2\">Waaz</span>\r\n                  </label>\r\n                  <label className=\"inline-flex items-center\">\r\n                    <input\r\n                      type=\"radio\" name=\"toggle\" value=\"majlis\"\r\n                      checked={formData.toggle === 'majlis'} onChange={handleChange}\r\n                    />\r\n                    <span className=\"ml-2\">Majlis</span>\r\n                  </label>\r\n                  <label className=\"inline-flex items-center\">\r\n                    <input\r\n                      type=\"radio\" name=\"toggle\" value=\"bethak\"\r\n                      checked={formData.toggle === 'bethak'} onChange={handleChange}\r\n                    />\r\n                    <span className=\"ml-2\">Bethak</span>\r\n                  </label>\r\n                </div>\r\n                {errors.toggle && <span className=\"text-xs text-red-600\">{errors.toggle}</span>}\r\n              </Label>\r\n\r\n              <Label className=\"mb-4\">\r\n                <span>Pass Date *</span>\r\n                <Input type=\"date\" name=\"pass_date\" value={formData.pass_date} onChange={handleChange} />\r\n                {errors.pass_date && <span className=\"text-xs text-red-600\">{errors.pass_date}</span>}\r\n              </Label>\r\n            </>\r\n          )}\r\n\r\n          {/* Meta */}\r\n          <Label className=\"mb-4\">\r\n            <span>Meta</span>\r\n            <textarea\r\n              name=\"meta\" value={formData.meta} onChange={handleChange}\r\n              className=\"w-full px-3 py-2 border rounded-md text-sm\"\r\n            />\r\n          </Label>\r\n\r\n          {/* Errors */}\r\n          {errors.submit && <p className=\"text-red-600 mb-2\">{errors.submit}</p>}\r\n        </form>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button onClick={handleSubmit} disabled={isSubmitting}>\r\n          {isSubmitting ? 'Updating…' : 'Update Request'}\r\n        </Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default EditRequestModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { get, post, _delete } from '../api/axios';\r\nimport PageTitle from '../components/Typography/PageTitle';\r\nimport {\r\n  Table,\r\n  TableHeader,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  TableContainer,\r\n  Button,\r\n} from '@windmill/react-ui';\r\nimport {\r\n  AiOutlinePlusCircle,\r\n  AiOutlineDelete,\r\n  AiOutlineEdit\r\n} from 'react-icons/ai';\r\nimport CreateRequestModal from '../components/CreateRequestModal';\r\nimport EditRequestModal from '../components/EditRequestModal';\r\nimport toast from 'react-hot-toast';\r\nimport logoLight from '../assets/img/mainLogo.png';\r\nimport logoDark from '../assets/img/mainLogo-dark.png';\r\nfunction Request() {\r\n  const [statusFilter, setStatusFilter] = useState('');\r\n  const [typeFilter, setTypeFilter] = useState('');\r\n  const [createdByFilter, setCreatedByFilter] = useState('');\r\n  const [applyFilterTrigger, setApplyFilterTrigger] = useState(0);\r\n  const [batchName, setBatchName] = useState('');\r\n  const [selectedRequestIds, setSelectedRequestIds] = useState([]);\r\n  const [isBatchMode, setIsBatchMode] = useState(false);\r\n\r\n  const [requestData, setRequestData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n  const [currentRequest, setCurrentRequest] = useState(null);\r\n  const [refreshTrigger, setRefreshTrigger] = useState(0);\r\n  const [expandedGroups, setExpandedGroups] = useState({});\r\n  const [statusOptions, setStatusOptions] = useState([]);\r\n  const [typeOptions, setTypeOptions] = useState([]);\r\n  const [createdByOptions, setCreatedByOptions] = useState([]);\r\n  useEffect(() => {\r\n    const fetchFilters = async () => {\r\n      try {\r\n        const resp = await get('/requests/filters');\r\n        setStatusOptions(resp.statuses);\r\n        setTypeOptions(resp.types);\r\n        setCreatedByOptions(resp.creators);\r\n      } catch (e) {\r\n        console.error('Failed to load filter options', e);\r\n      }\r\n    };\r\n    fetchFilters();\r\n\r\n    const fetchRequestData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const params = new URLSearchParams();\r\n\r\n        if (!isBatchMode) {\r\n          if (statusFilter) params.append('status', statusFilter);\r\n          if (typeFilter) params.append('type', typeFilter);\r\n          if (createdByFilter) params.append('created_by', createdByFilter);\r\n        }\r\n\r\n        const queryString = params.toString();\r\n        const endpoint = isBatchMode ? 'requests/filter-requests/' : `/requests/requests${queryString ? `?${queryString}` : ''}`;\r\n\r\n        const response = await get(endpoint);\r\n        const results = response?.results || [];\r\n\r\n        // If batch mode AND it's a flat list (first object has no `requests` array)\r\n        if (isBatchMode && results.length && !Array.isArray(results[0].requests)) {\r\n          // Group by ITS + type\r\n          const grouped = results.reduce((acc, item) => {\r\n            const key = `${item.its}-${item.type}`;\r\n            if (!acc[key]) acc[key] = { its: item.its, type: item.type, requests: [] };\r\n            acc[key].requests.push(item);\r\n            return acc;\r\n          }, {});\r\n\r\n          setRequestData(Object.values(grouped));\r\n\r\n          const selectedIds = Object.values(grouped).map(g => g.requests[0]?.id).filter(Boolean);\r\n          setSelectedRequestIds(selectedIds);\r\n\r\n        } else {\r\n          setRequestData(results);\r\n          // existing grouped logic:\r\n          if (isBatchMode) {\r\n            const selectedIds = results.flatMap(group => {\r\n              const arr = Array.isArray(group.requests) ? group.requests : []\r\n              const first = arr[0]\r\n              return first?.id ? [first.id] : []\r\n            })\r\n            setSelectedRequestIds(selectedIds)\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching request data:', err);\r\n        setError('Failed to load request data');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchRequestData();\r\n  }, [refreshTrigger, statusFilter, typeFilter, createdByFilter, refreshTrigger, applyFilterTrigger, isBatchMode]);\r\n\r\n  const handleAddRequest = () => {\r\n    setIsCreateModalOpen(true);\r\n  };\r\n\r\n  const handleCreateModalClose = () => {\r\n    setIsCreateModalOpen(false);\r\n  };\r\n\r\n  const handleEditClick = (request) => {\r\n    setCurrentRequest(request);\r\n    setIsEditModalOpen(true);\r\n  };\r\n\r\n  const handleEditModalClose = () => {\r\n    setIsEditModalOpen(false);\r\n    setCurrentRequest(null);\r\n  };\r\n\r\n  const handleRequestCreated = () => {\r\n    setRefreshTrigger(prev => prev + 1);\r\n    toast.success('Request created successfully');\r\n  };\r\n\r\n  const handleRequestUpdated = () => {\r\n    setRefreshTrigger(prev => prev + 1);\r\n    toast.success('Request updated successfully');\r\n  };\r\n  const handleSwitchToBatchMode = () => {\r\n    setIsBatchMode(true);\r\n    setRefreshTrigger(trigger => trigger + 1);\r\n  };\r\n\r\n  const handleCreateBatch = async () => {\r\n    try {\r\n      await post('requests/batch/', {\r\n        name: batchName,\r\n        request_ids: selectedRequestIds,\r\n      });\r\n      toast.success('Batch created successfully');\r\n      setBatchName('');\r\n      setSelectedRequestIds([]);\r\n      setIsBatchMode(false);\r\n      setRefreshTrigger(trigger => trigger + 1);\r\n    } catch (err) {\r\n      console.error(err);\r\n      toast.error('Failed to create batch');\r\n    }\r\n  };\r\n\r\n  const formatStatus = (status) => {\r\n    return status\r\n      .split('_')\r\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\r\n      .join(' ');\r\n  };\r\n  const toggleSelectId = (id) => {\r\n    setSelectedRequestIds(prev =>\r\n      prev.includes(id)\r\n        ? prev.filter(x => x !== id)\r\n        : [...prev, id]\r\n    );\r\n  };\r\n\r\n  const getStatusStyle = (status) => {\r\n    switch (status) {\r\n      case 'todo':\r\n        return 'bg-blue-400 text-white';\r\n      case 'is_batch':\r\n        return 'bg-purple-400 text-white';\r\n      case 'discarded':\r\n        return 'bg-yellow-400 text-white';\r\n      case 'completed':\r\n        return 'bg-green-400 text-white';\r\n      case 'duplicate':\r\n        return 'bg-red-400 text-white';\r\n      default:\r\n        return 'bg-gray-100 text-white';\r\n    }\r\n  };\r\n\r\n  const handleDeleteRequest = async (id) => {\r\n    try {\r\n      const confirmDelete = window.confirm('Are you sure you want to delete this request?');\r\n\r\n      if (confirmDelete) {\r\n        await _delete(`/requests/requests/${id}/delete/`);\r\n\r\n        setRequestData(prevData => prevData.filter(item => item.id !== id));\r\n        toast.success('Request deleted successfully');\r\n      }\r\n    } catch (error) {\r\n      toast.error(error.response.data.error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative w-full px-4 py-6\">\r\n      {/* Content Overlay */}\r\n      <div className=\"relative z-10\">      {/* Header */}\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <PageTitle>Requests</PageTitle>\r\n\r\n          <div className=\"flex space-x-2\">\r\n            {!isBatchMode ? (\r\n              <>\r\n              <div className='hidden md:block'>\r\n                <button\r\n                  onClick={handleSwitchToBatchMode}\r\n                  className=\"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700\"\r\n                >\r\n\r\n                  Create Batch\r\n                </button>\r\n                <button\r\n                  onClick={handleAddRequest}\r\n                  className=\"px-4 py-2 flex items-center bg-purple-600 text-white rounded-lg\"\r\n                >\r\n                  Add Request\r\n                </button>\r\n\r\n                </div>\r\n\r\n                <div className='md:hidden'>\r\n                <button\r\n                  onClick={handleSwitchToBatchMode}\r\n                  className=\"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700\"\r\n                >\r\n\r\n                  Batch\r\n                </button>\r\n                <button\r\n                  onClick={handleAddRequest}\r\n                  className=\"px-4 py-2 mt-2 flex items-center bg-purple-600 text-white rounded-lg\"\r\n                >\r\n                  Request\r\n                </button>\r\n\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Batch Name\"\r\n                  className=\"border px-3 py-2 rounded\"\r\n                  value={batchName}\r\n                  onChange={(e) => setBatchName(e.target.value)}\r\n                />\r\n                <button\r\n                  className=\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700\"\r\n                  onClick={handleCreateBatch}\r\n                  disabled={selectedRequestIds.length === 0 || !batchName.trim()}\r\n                >\r\n                  Confirm Batch\r\n                </button>\r\n                <button\r\n                  className=\"px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700\"\r\n                  onClick={() => {\r\n                    setIsBatchMode(false);\r\n                    setBatchName('');\r\n                    setSelectedRequestIds([]);\r\n                    setRefreshTrigger(t => t + 1); // reset\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {!isBatchMode && (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\" >\r\n\r\n            <select className=\"w-full border rounded px-4 py-3 dark:bg-gray-700 dark:text-white dark:border-gray-700\" value={statusFilter} onChange={e => setStatusFilter(e.target.value)}>\r\n              <option value=\"\">All Statuses</option>\r\n              {statusOptions.map(status => (\r\n                <option key={status} value={status}>\r\n                  {status.replace(/_/g, ' ').replace(/\\b\\w/g, c => c.toUpperCase())}\r\n                </option>\r\n              ))}\r\n            </select>\r\n\r\n            <select className=\"w-full border rounded px-3 py-2 dark:bg-gray-700 dark:text-white dark:border-gray-700\" value={typeFilter} onChange={e => setTypeFilter(e.target.value)}>\r\n              <option value=\"\">All Types</option>\r\n              {typeOptions.map(type => (\r\n                <option key={type} value={type}>\r\n                  {type.replace(/_/g, ' ')}\r\n                </option>\r\n              ))}\r\n            </select>\r\n\r\n            <select className=\"w-full border rounded px-3 py-2  dark:bg-gray-700 dark:text-white dark:border-gray-700\" value={createdByFilter} onChange={e => setCreatedByFilter(e.target.value)}>\r\n              <option value=\"\">All Creators</option>\r\n              {createdByOptions.map(({ created_by__id: id, created_by__username: username }) => (\r\n                <option key={id} value={id}>\r\n                  {username}\r\n                </option>\r\n              ))}\r\n            </select>\r\n\r\n          </div>\r\n        )}\r\n        {/* Loading State */}\r\n        {isLoading ? (\r\n          <div className=\"flex justify-center my-8\">\r\n            <p className=\"text-gray-700 dark:text-gray-300\">Loading data...</p>\r\n          </div>\r\n        ) : error ? (\r\n          <div className=\"text-center py-8\">\r\n            <p className=\"text-red-600 dark:text-red-400\">{error}</p>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {/* Desktop Table - Hidden on mobile */}\r\n            <TableContainer className=\"hidden md:block mb-8\">\r\n              <Table>\r\n                <TableHeader>\r\n                  <tr>\r\n                    {isBatchMode && (\r\n                      <TableCell>Check</TableCell>\r\n                    )}\r\n                    <TableCell>#</TableCell>\r\n                    <TableCell>ITS</TableCell>\r\n                    <TableCell>Request Type</TableCell>\r\n                    <TableCell>Details</TableCell>\r\n                    <TableCell>Created By</TableCell>\r\n                    <TableCell>Status</TableCell>\r\n                    <TableCell>Actions</TableCell>\r\n                    <TableCell></TableCell> {/* Expand/Collapse button */}\r\n                  </tr>\r\n                </TableHeader>\r\n                <TableBody>\r\n                  {requestData.map((group, groupIndex) => {\r\n                    const requestsArray = Array.isArray(group.requests) ? group.requests : [];\r\n                    const firstRequest = requestsArray[0];\r\n\r\n                    if (!firstRequest) {\r\n                      return null; // skip this group if it's malformed or empty\r\n                    }\r\n\r\n                    const isExpanded = expandedGroups[groupIndex] || false;\r\n\r\n                    return (\r\n                      <React.Fragment key={`${group.its}-${group.type}`}>\r\n                        <TableRow>\r\n                          {isBatchMode && (\r\n                            <TableCell>\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                checked={selectedRequestIds.includes(firstRequest.id)}\r\n                                onChange={() => toggleSelectId(firstRequest.id)}\r\n                              />\r\n                            </TableCell>\r\n                          )}\r\n                          <TableCell>\r\n                            <span className=\"text-sm font-semibold\">{groupIndex + 1}</span>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <span className=\"text-sm\">{group.its}</span>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <span className=\"text-sm\">{firstRequest.type.replace(/_/g, ' ')}</span>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <span className=\"text-sm\">\r\n                              {firstRequest.type === 'change_city_request' && firstRequest.city_name}\r\n                              {firstRequest.type === 'change_zone_request' && firstRequest.zone_name}\r\n                              {firstRequest.type === 'pass_request' &&\r\n                                `${firstRequest.toggle?.toUpperCase()} - ${firstRequest.pass_date}`}\r\n                            </span>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <span className=\"text-sm\">{firstRequest.created_by}</span>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <span className={`text-xs font-medium px-2 py-1 rounded-full ${getStatusStyle(firstRequest.status)}`}>\r\n                              {formatStatus(firstRequest.status)}\r\n                            </span>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {firstRequest.status === 'todo' && (\r\n                              <div className=\"flex items-center space-x-4\">\r\n                                <Button layout=\"link\" size=\"icon\" aria-label=\"Edit\" onClick={() => handleEditClick(firstRequest)}>\r\n                                  <AiOutlineEdit className=\"w-5 h-5\" />\r\n                                </Button>\r\n                                <Button layout=\"link\" size=\"icon\" aria-label=\"Delete\" onClick={() => handleDeleteRequest(firstRequest.id)}>\r\n                                  <AiOutlineDelete className=\"w-5 h-5\" />\r\n                                </Button>\r\n                              </div>\r\n                            )}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {group.requests.length > 1 && (\r\n                              <button\r\n                                onClick={() =>\r\n                                  setExpandedGroups((prev) => ({\r\n                                    ...prev,\r\n                                    [groupIndex]: !prev[groupIndex],\r\n                                  }))\r\n                                }\r\n                                className=\"text-purple-600 font-medium hover:underline text-sm\"\r\n                              >\r\n                                {isExpanded ? 'Hide' : `Show ${group.requests.length - 1} more`}\r\n                              </button>\r\n                            )}\r\n                          </TableCell>\r\n                        </TableRow>\r\n\r\n                        {/* Expandable child rows */}\r\n                        {isExpanded &&\r\n                          group.requests.slice(1).map((req, subIndex) => (\r\n                            <TableRow key={req.id} className=\"bg-gray-50 dark:bg-gray-700\">\r\n                              {isBatchMode && (\r\n                                <TableCell>\r\n                                  <input\r\n                                    type=\"checkbox\"\r\n                                    checked={selectedRequestIds.includes(req.id)}\r\n                                    onChange={() => toggleSelectId(req.id)}\r\n                                  />\r\n                                </TableCell>\r\n                              )}\r\n                              <TableCell></TableCell>\r\n                              <TableCell colSpan={2}>\r\n                                <span className=\"text-sm\">{req.its}</span>\r\n                              </TableCell>\r\n                              <TableCell>\r\n                                <span className=\"text-sm\">\r\n                                  {req.type === 'change_city_request' && req.city_name}\r\n                                  {req.type === 'change_zone_request' && req.zone_name}\r\n                                  {req.type === 'pass_request' && `${req.toggle?.toUpperCase()} - ${req.pass_date}`}\r\n                                </span>\r\n                              </TableCell>\r\n                              <TableCell>\r\n                                <span className=\"text-sm\">{req.created_by}</span>\r\n                              </TableCell>\r\n                              <TableCell>\r\n                                <span className={`text-xs font-medium px-2 py-1 rounded-full ${getStatusStyle(req.status)}`}>\r\n                                  {formatStatus(req.status)}\r\n                                </span>\r\n                              </TableCell>\r\n                              <TableCell>\r\n                                {req.status === 'todo' && (\r\n                                  <div className=\"flex items-center space-x-4\">\r\n                                    <Button layout=\"link\" size=\"icon\" aria-label=\"Edit\" onClick={() => handleEditClick(req)}>\r\n                                      <AiOutlineEdit className=\"w-5 h-5\" />\r\n                                    </Button>\r\n                                    <Button layout=\"link\" size=\"icon\" aria-label=\"Delete\" onClick={() => handleDeleteRequest(req.id)}>\r\n                                      <AiOutlineDelete className=\"w-5 h-5\" />\r\n                                    </Button>\r\n                                  </div>\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell></TableCell>\r\n                            </TableRow>\r\n                          ))}\r\n                      </React.Fragment>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n\r\n\r\n            {/* Mobile View - List with Request Cards */}\r\n            {/* Mobile View - Grouped Cards */}\r\n            <div className=\"md:hidden space-y-3\" style={{opacity: 0.8,}}>\r\n              {requestData.length === 0 ? (\r\n                <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\r\n                  No requests found\r\n                </div>\r\n              ) : (\r\n                requestData.map((group, groupIndex) => {\r\n                  const requestsArray = Array.isArray(group.requests) ? group.requests : [];\r\n                  const firstRequest = requestsArray[0];\r\n\r\n                  if (!firstRequest) {\r\n                    return null; // skip rendering this group if no request\r\n                  }\r\n\r\n                  const isExpanded = expandedGroups[groupIndex] || false;\r\n\r\n\r\n                  return (\r\n                    <div\r\n                      key={`${group.its}-${group.type}-${group.status}`}\r\n                      className=\"bg-white dark:bg-gray-800 rounded-lg border dark:border-gray-700 p-4\"\r\n                    >\r\n                      {/* Top section */}\r\n                      <div className=\"flex flex-col space-y-2\">\r\n                        <div className=\"flex justify-between\">\r\n                          <p className=\"text-sm font-semibold text-gray-800 dark:text-white\">\r\n                            ITS: {group.its}\r\n                          </p>\r\n                          <span className={`text-xs font-medium px-2 py-1 rounded-full ${getStatusStyle(firstRequest.status)}`}>\r\n                            {formatStatus(firstRequest.status)}\r\n                          </span>\r\n                        </div>\r\n\r\n                        <p className=\"text-sm text-gray-600 dark:text-gray-300\">Type: {firstRequest.type.replace(/_/g, ' ')}</p>\r\n                        <p className=\"text-sm text-gray-600 dark:text-gray-300\">Created By: {firstRequest.created_by}</p>\r\n\r\n                        <p className=\"text-sm text-gray-600 dark:text-gray-300\">\r\n                          {firstRequest.type === 'change_city_request' && `City: ${firstRequest.city_name}`}\r\n                          {firstRequest.type === 'change_zone_request' && `Zone: ${firstRequest.zone_name}`}\r\n                          {firstRequest.type === 'pass_request' && `Pass: ${firstRequest.toggle?.toUpperCase()} - ${firstRequest.pass_date}`}\r\n                        </p>\r\n                      </div>\r\n\r\n                      {/* Actions */}\r\n                      {firstRequest.status === 'todo' && (\r\n                        <div className=\"flex space-x-2 mt-3\">\r\n                          <button\r\n                            onClick={() => handleEditClick(firstRequest)}\r\n                            className=\"text-blue-600 dark:text-blue-400 hover:bg-blue-50 dark:hover:bg-blue-900/30 p-1 rounded\"\r\n                          >\r\n                            <AiOutlineEdit className=\"h-5 w-5\" />\r\n                          </button>\r\n                          <button\r\n                            onClick={() => handleDeleteRequest(firstRequest.id)}\r\n                            className=\"text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/30 p-1 rounded\"\r\n                          >\r\n                            <AiOutlineDelete className=\"h-5 w-5\" />\r\n                          </button>\r\n                        </div>\r\n                      )}\r\n\r\n                      {/* Expand/collapse */}\r\n                      {group.requests.length > 1 && (\r\n                        <div className=\"mt-3\">\r\n                          <button\r\n                            onClick={() =>\r\n                              setExpandedGroups((prev) => ({\r\n                                ...prev,\r\n                                [groupIndex]: !prev[groupIndex],\r\n                              }))\r\n                            }\r\n                            className=\"text-purple-600 font-medium hover:underline text-sm\"\r\n                          >\r\n                            {isExpanded ? 'Hide' : `Show ${group.requests.length - 1} more`}\r\n                          </button>\r\n                        </div>\r\n                      )}\r\n\r\n\r\n                      {isExpanded &&\r\n                        group.requests.slice(1).map((req) => (\r\n                          <TableRow key={req.id} className=\"bg-gray-50 dark:bg-gray-700\">\r\n                            {isBatchMode && (\r\n                              <TableCell>\r\n                                <input\r\n                                  type=\"checkbox\"\r\n                                  checked={selectedRequestIds.includes(req.id)}\r\n                                  onChange={() => toggleSelectId(req.id)}\r\n                                />\r\n                              </TableCell>\r\n                            )}\r\n                            <TableCell>\r\n                              <span className=\"text-sm\">{groupIndex + 1}</span>\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              <span className=\"text-sm\">{req.its}</span>\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              <span className=\"text-sm\">{req.type.replace(/_/g, ' ')}</span>\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              <span className=\"text-sm\">\r\n                                {req.type === 'change_city_request' && req.city_name}\r\n                                {req.type === 'change_zone_request' && req.zone_name}\r\n                                {req.type === 'pass_request' && `${req.toggle?.toUpperCase()} - ${req.pass_date}`}\r\n                              </span>\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              <span className=\"text-sm\">{req.created_by}</span>\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              <span className={`text-xs font-medium px-2 py-1 rounded-full ${getStatusStyle(req.status)}`}>\r\n                                {formatStatus(req.status)}\r\n                              </span>\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              {req.status === 'todo' && (\r\n                                <div className=\"flex items-center space-x-4\">\r\n                                  <Button layout=\"link\" size=\"icon\" aria-label=\"Edit\" onClick={() => handleEditClick(req)}>\r\n                                    <AiOutlineEdit className=\"w-5 h-5\" />\r\n                                  </Button>\r\n                                  <Button layout=\"link\" size=\"icon\" aria-label=\"Delete\" onClick={() => handleDeleteRequest(req.id)}>\r\n                                    <AiOutlineDelete className=\"w-5 h-5\" />\r\n                                  </Button>\r\n                                </div>\r\n                              )}\r\n                            </TableCell>\r\n                            <TableCell></TableCell> {/* Expand button spacer */}\r\n                          </TableRow>\r\n                        ))}\r\n\r\n\r\n                    </div>\r\n                  );\r\n                })\r\n              )}\r\n            </div>\r\n\r\n          </>\r\n        )}\r\n\r\n        {/* Create Request Modal */}\r\n        <CreateRequestModal\r\n          isOpen={isCreateModalOpen}\r\n          onClose={handleCreateModalClose}\r\n          onRequestCreated={handleRequestCreated}\r\n        />\r\n\r\n        {/* Edit Request Modal */}\r\n        {currentRequest && (\r\n          <EditRequestModal\r\n            isOpen={isEditModalOpen}\r\n            onClose={handleEditModalClose}\r\n            onRequestUpdated={handleRequestUpdated}\r\n            requestData={currentRequest}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Request;","import axios from \"axios\";\r\n\r\n// let BASE_URL = \"http://35.172.211.35/api\";\r\nlet BASE_URL = \"https://rms-v2.duckdns.org/api\";\r\n\r\n\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n  console.log(\"Running in Production Mode\");\r\n  BASE_URL = \"https://rms-v2.duckdns.org/api\";\r\n} else {\r\n  // BASE_URL = \"http://localhost:8000/api/v1\";\r\n  console.log(\"Running in Development Mode\");\r\n}\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: BASE_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"accessToken\");\r\n    if (token) {\r\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    // await logErrorToBackend(error);\r\n    if (error.response && error.response.status === 401) {\r\n      localStorage.clear();\r\n      window.location.href = \"/\";\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const get = async (url, params) => {\r\n  return axiosInstance.get(url, { params }).then((res) => res.data);\r\n};\r\n\r\nexport const post = async (url, data) => {\r\n  return axiosInstance.post(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const put = async (url, data) => {\r\n  return axiosInstance.put(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const patch = async (url, data) => {\r\n  return axiosInstance.patch(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const _delete = async (url) => {\r\n  return axiosInstance.delete(url).then((res) => res.data);\r\n};\r\n\r\nexport const downloadBlob = async (url, filename) => {\r\n  try {\r\n    const response = await axiosInstance.get(url, {\r\n      responseType: \"blob\",\r\n    });\r\n\r\n    const blob = new Blob([response.data], { type: \"application/pdf\" });\r\n    const blobUrl = window.URL.createObjectURL(blob);\r\n\r\n    const link = document.createElement(\"a\");\r\n    link.href = blobUrl;\r\n    link.setAttribute(\"download\", filename);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    link.remove();\r\n    window.URL.revokeObjectURL(blobUrl);\r\n  } catch (err) {\r\n    console.error(\"Download failed:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const uploadFormData = async (url, formData) => {\r\n  try {\r\n    const response = await axiosInstance.post(url, formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(\"File upload failed:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport default axiosInstance;\r\n","import React from 'react'\r\n\r\nfunction PageTitle({ children }) {\r\n  return (\r\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n"],"sourceRoot":""}