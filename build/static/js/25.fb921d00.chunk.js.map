{"version":3,"sources":["components/CreateCounterPackingModal.js","components/EditCounterPackingModal.js","pages/CounterPacking.js","api/axios.js"],"names":["CreateCounterPackingModal","_ref","isOpen","onClose","miqaatId","onSuccess","formData","setFormData","useState","miqaat","zone","sub_zone","miqaat_menu","unit","container","quantity","filled_percentage","dropdownOptions","setDropdownOptions","zones","miqaat_menus","units","containers","isSubmitting","setIsSubmitting","error","setError","useEffect","async","zonesRes","SubzonesRes","miqaatMenusRes","unitsRes","containersRes","Promise","all","get","err","console","fetchDropdownOptions","handleInputChange","e","name","value","target","prev","_objectSpread","handleSubmit","preventDefault","submissionData","parseInt","parseFloat","missingFields","filter","field","length","concat","join","response","post","_err$response","_err$response$data","data","message","React","createElement","Modal","ModalHeader","ModalBody","className","role","onSubmit","Label","Select","onChange","required","map","menu","key","id","description","Input","type","placeholder","min","max","step","HelperText","ModalFooter","Button","onClick","disabled","block","size","EditCounterPackingModal","counterPackingData","isDropdownLoading","setIsDropdownLoading","_miqaatMenusRes$miqaa","Array","isArray","results","_counterPackingData$z","_counterPackingData$z2","_counterPackingData$s","_counterPackingData$s2","_counterPackingData$m","_counterPackingData$m2","_counterPackingData$u","_counterPackingData$u2","_counterPackingData$c","_counterPackingData$c2","zone_id","sub_zone_id","miqaat_menu_id","unit_id","container_id","Error","some","filledPercentage","isNaN","patch","toast","success","menu_name","CounterPacking","useParams","history","useHistory","setCounterPackingData","isLoading","setIsLoading","miqaatDetails","setMiqaatDetails","isCreateModalOpen","setIsCreateModalOpen","isEditModalOpen","setIsEditModalOpen","currentCounterPacking","setCurrentCounterPacking","expandedItem","setExpandedItem","fetchCounterPackingData","fetchMiqaatDetails","handleEditCounterPacking","item","handleDeleteCounterPacking","window","confirm","_delete","counterPackingId","prevData","counter_packing","toggleExpand","src","logo","alt","style","top","left","position","transform","width","maxWidth","height","opacity","zIndex","handleBackClick","goBack","AiOutlineArrowLeft","fontSize","innerWidth","miqaat_name","handleAddCounterPacking","padding","AiOutlinePlusCircle","Fragment","TableContainer","Table","TableHeader","TableCell","TableBody","index","TableRow","unit_name","container_name","zone_name","sub_zone_name","AiOutlineEdit","AiOutlineDelete","stopPropagation","AiOutlineDown","handleCreateModalClose","handleCounterPackingCreated","handleEditModalClose","handleCounterPackingUpdated","BASE_URL","log","axiosInstance","axios","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","reject","status","clear","location","href","url","params","then","res","put","delete","downloadBlob","filename","responseType","blob","Blob","blobUrl","URL","createObjectURL","link","document","setAttribute","body","appendChild","click","remove","revokeObjectURL","uploadFormData"],"mappings":"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","file":"static/js/25.fb921d00.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Button,\r\n    Input,\r\n    Label,\r\n    Select,\r\n    HelperText\r\n} from '@windmill/react-ui';\r\nimport { get, post } from '../api/axios';\r\n\r\nconst CreateCounterPackingModal = ({\r\n    isOpen,\r\n    onClose,\r\n    miqaatId,\r\n    onSuccess\r\n}) => {\r\n    const [formData, setFormData] = useState({\r\n        miqaat: miqaatId,\r\n        zone: '',\r\n        sub_zone:'',\r\n        miqaat_menu: '',\r\n        unit: '',\r\n        container: '',\r\n        quantity: '',\r\n        filled_percentage: ''\r\n    });\r\n\r\n    const [dropdownOptions, setDropdownOptions] = useState({\r\n        zones: [],\r\n        sub_zone: [],\r\n        miqaat_menus: [],\r\n        units: [],\r\n        containers: []\r\n    });\r\n\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    // Fetch dropdown options\r\n    useEffect(() => {\r\n        const fetchDropdownOptions = async () => {\r\n            try {\r\n                const [zonesRes,SubzonesRes, miqaatMenusRes, unitsRes, containersRes] = await Promise.all([\r\n                    get('/zone/list/'),\r\n                    get('/sub-zone/list/'),\r\n                    get(`/miqaat-menu/list/`),\r\n                    get('/unit/list/'),\r\n                    get('/container/list/')\r\n                ]);\r\n\r\n                setDropdownOptions({\r\n                    zones: zonesRes,\r\n                    sub_zone: SubzonesRes,\r\n                    miqaat_menus: miqaatMenusRes,\r\n                    units: unitsRes,\r\n                    containers: containersRes\r\n                });\r\n            } catch (err) {\r\n                console.error('Error fetching dropdown options:', err);\r\n                setError('Failed to load dropdown options');\r\n            }\r\n        };\r\n\r\n        if (isOpen) {\r\n            fetchDropdownOptions();\r\n        }\r\n    }, [isOpen, miqaatId]);\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setIsSubmitting(true);\r\n        setError(null);\r\n\r\n        try {\r\n            // Prepare submission data\r\n            const submissionData = {\r\n                ...formData,\r\n                miqaat: parseInt(miqaatId),\r\n                zone: parseInt(formData.zone),\r\n                miqaat_menu: parseInt(formData.miqaat_menu),\r\n                unit: parseInt(formData.unit),\r\n                container: parseInt(formData.container),\r\n                quantity: parseInt(formData.quantity),\r\n                filled_percentage: parseFloat(formData.filled_percentage)\r\n            };\r\n\r\n            // Validate required fields\r\n            const requiredFields = ['zone', 'miqaat_menu', 'unit', 'container', 'quantity', 'filled_percentage'];\r\n            const missingFields = requiredFields.filter(field => !submissionData[field] && submissionData[field] !== 0);\r\n\r\n            if (missingFields.length > 0) {\r\n                setError(`Please fill in all required fields: ${missingFields.join(', ')}`);\r\n                setIsSubmitting(false);\r\n                return;\r\n            }\r\n\r\n            // Validate filled_percentage range\r\n            if (submissionData.filled_percentage < 0 || submissionData.filled_percentage > 100) {\r\n                setError('Filled percentage must be between 0 and 100');\r\n                setIsSubmitting(false);\r\n                return;\r\n            }\r\n\r\n            // Submit data\r\n            const response = await post('/counter-packing/', submissionData);\r\n\r\n            // Call success callback\r\n            onSuccess(response);\r\n\r\n            // Reset form and close modal\r\n            setFormData({\r\n                miqaat: miqaatId,\r\n                zone: '',\r\n                miqaat_menu: '',\r\n                unit: '',\r\n                container: '',\r\n                quantity: '',\r\n                filled_percentage: ''\r\n            });\r\n            onClose();\r\n        } catch (err) {\r\n            console.error('Error creating counter packing:', err);\r\n            setError(err.response?.data?.message || 'Failed to create counter packing');\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal isOpen={isOpen} onClose={onClose}>\r\n            <ModalHeader>Add Counter Packing</ModalHeader>\r\n            <ModalBody>\r\n                {error && (\r\n                    <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">\r\n                        <span className=\"block sm:inline\">{error}</span>\r\n                    </div>\r\n                )}\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"grid grid-cols-2 gap-4\">\r\n                        {/* Menu Selection */}\r\n                        <Label className=\"block text-sm\">\r\n                            <span className=\"text-gray-700 dark:text-gray-400\">Menu</span>\r\n                            <Select\r\n                                name=\"miqaat_menu\"\r\n                                value={formData.miqaat_menu}\r\n                                onChange={handleInputChange}\r\n                                className=\"mt-1\"\r\n                                required\r\n                            >\r\n                                <option value=\"\">Select Menu</option>\r\n                                {dropdownOptions.miqaat_menus.map(menu => (\r\n                                    <option key={menu.id} value={menu.id}>\r\n                                        {menu.description}\r\n                                    </option>\r\n                                ))}\r\n                            </Select>\r\n                        </Label>\r\n\r\n                       \r\n\r\n     {/* Container Selection */}\r\n     <Label className=\"block text-sm\">\r\n                            <span className=\"text-gray-700 dark:text-gray-400\">Container</span>\r\n                            <Select\r\n                                name=\"container\"\r\n                                value={formData.container}\r\n                                onChange={handleInputChange}\r\n                                className=\"mt-1\"\r\n                                required\r\n                            >\r\n                                <option value=\"\">Select Container</option>\r\n                                {dropdownOptions.containers.map(container => (\r\n                                    <option key={container.id} value={container.id}>\r\n                                        {container.name}\r\n                                    </option>\r\n                                ))}\r\n                            </Select>\r\n                        </Label>\r\n                        \r\n                        {/* Unit Selection */}\r\n                        <Label className=\"block text-sm\">\r\n                            <span className=\"text-gray-700 dark:text-gray-400\">Unit</span>\r\n                            <Select\r\n                                name=\"unit\"\r\n                                value={formData.unit}\r\n                                onChange={handleInputChange}\r\n                                className=\"mt-1\"\r\n                                required\r\n                            >\r\n                                <option value=\"\">Select Unit</option>\r\n                                {dropdownOptions.units.map(unit => (\r\n                                    <option key={unit.id} value={unit.id}>\r\n                                        {unit.name}\r\n                                    </option>\r\n                                ))}\r\n                            </Select>\r\n                        </Label>\r\n\r\n                   \r\n\r\n                        {/* Quantity Input */}\r\n                        <Label className=\"block text-sm\">\r\n                            <span className=\"text-gray-700 dark:text-gray-400\">Quantity</span>\r\n                            <Input\r\n                                type=\"number\"\r\n                                name=\"quantity\"\r\n                                value={formData.quantity}\r\n                                onChange={handleInputChange}\r\n                                placeholder=\"Enter quantity\"\r\n                                className=\"mt-1\"\r\n                                min=\"0\"\r\n                                required\r\n                            />\r\n                        </Label>\r\n\r\n                         {/* Zone Selection */}\r\n                        <Label className=\"block text-sm\">\r\n                            <span className=\"text-gray-700 dark:text-gray-400\">Zone</span>\r\n                            <Select\r\n                                name=\"zone\"\r\n                                value={formData.zone}\r\n                                onChange={handleInputChange}\r\n                                className=\"mt-1\"\r\n                                required\r\n                            >\r\n                                <option value=\"\">Select Zone</option>\r\n                                {dropdownOptions.zones.map(zone => (\r\n                                    <option key={zone.id} value={zone.id}>\r\n                                        {zone.name}\r\n                                    </option>\r\n                                ))}\r\n                            </Select>\r\n                        </Label>\r\n\r\n                         {/* Sub-Zone Selection */}\r\n                        <Label className=\"block text-sm\">\r\n                            <span className=\"text-gray-700 dark:text-gray-400\">Zone</span>\r\n                            <Select\r\n                                name=\"sub_zone\"\r\n                                value={formData.sub_zone}\r\n                                onChange={handleInputChange}\r\n                                className=\"mt-1\"\r\n                            >\r\n                                <option value=\"\">Select Sub Zone</option>\r\n                                {dropdownOptions.sub_zone.map(sub_zone => (\r\n                                    <option key={sub_zone.id} value={sub_zone.id}>\r\n                                        {sub_zone.name}\r\n                                    </option>\r\n                                ))}\r\n                            </Select>\r\n                        </Label>\r\n\r\n                         {/* Filled Percentage Input */}\r\n                        <Label className=\"block text-sm\">\r\n                            <span className=\"text-gray-700 dark:text-gray-400\">Filled Percentage</span>\r\n                            <Input\r\n                                type=\"number\"\r\n                                name=\"filled_percentage\"\r\n                                value={formData.filled_percentage}\r\n                                onChange={handleInputChange}\r\n                                placeholder=\"Enter filled percentage\"\r\n                                className=\"mt-1\"\r\n                                min=\"0\"\r\n                                max=\"100\"\r\n                                step=\"0.1\"\r\n                                required\r\n                            />\r\n                            <HelperText>Enter value between 0 and 100</HelperText>\r\n                        </Label>\r\n                    </div>\r\n                </form>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <div className=\"hidden sm:block\">\r\n                    <Button\r\n                        onClick={handleSubmit}\r\n                        disabled={isSubmitting}\r\n                    >\r\n                        {isSubmitting ? 'Creating...' : 'Create'}\r\n                    </Button>\r\n                </div>\r\n\r\n                {/* Mobile buttons */}\r\n                <div className=\"w-full sm:hidden\">\r\n               \r\n                    <Button\r\n                        block\r\n                        size=\"large\"\r\n                        onClick={handleSubmit}\r\n                        disabled={isSubmitting}\r\n                    >\r\n                        {isSubmitting ? 'Creating...' : 'Create'}\r\n                    </Button>\r\n                </div>\r\n            </ModalFooter>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default CreateCounterPackingModal;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n  Input,\r\n  Label,\r\n  Select,\r\n} from '@windmill/react-ui';\r\nimport { get, patch } from '../api/axios';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst EditCounterPackingModal = ({ \r\n  isOpen, \r\n  onClose, \r\n  miqaatId, \r\n  counterPackingData,\r\n  onSuccess \r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    miqaat: miqaatId,\r\n    zone: '',\r\n    sub_zone: '',\r\n    miqaat_menu: '',\r\n    unit: '',\r\n    container: '',\r\n    quantity: '',\r\n    filled_percentage: '',\r\n  });\r\n\r\n  const [dropdownOptions, setDropdownOptions] = useState({\r\n    zones: [],\r\n    sub_zone:[],\r\n    miqaat_menus: [],\r\n    units: [],\r\n    containers: [],\r\n  });\r\n\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [isDropdownLoading, setIsDropdownLoading] = useState(false);\r\n\r\n  // Fetch dropdown options when modal opens\r\n  useEffect(() => {\r\n    const fetchDropdownOptions = async () => {\r\n      setIsDropdownLoading(true);\r\n      try {\r\n        const [zonesRes,SubzonesRes, miqaatMenusRes, unitsRes, containersRes] = await Promise.all([\r\n          get('/zone/list/'),\r\n          get('/sub-zone/list/'),\r\n      \r\n          get(`/miqaat-menu/${miqaatId}/`),\r\n          get('/unit/list/'),\r\n          get('/container/list/'),\r\n        ]);\r\n\r\n        setDropdownOptions({\r\n          zones: Array.isArray(zonesRes) ? zonesRes : zonesRes.results || [],\r\n          sub_zone: Array.isArray(SubzonesRes) ? SubzonesRes : SubzonesRes.results || [],\r\n          miqaat_menus: Array.isArray(miqaatMenusRes.miqaat_menu) ? miqaatMenusRes.miqaat_menu : miqaatMenusRes.miqaat_menu?.results || [],\r\n          units: Array.isArray(unitsRes) ? unitsRes : unitsRes.results || [],\r\n          containers: Array.isArray(containersRes) ? containersRes : containersRes.results || [],\r\n        });\r\n      } catch (err) {\r\n        console.error('Error fetching dropdown options:', err);\r\n        setError('Failed to load dropdown options');\r\n      } finally {\r\n        setIsDropdownLoading(false);\r\n      }\r\n    };\r\n\r\n    if (isOpen) {\r\n      fetchDropdownOptions();\r\n    }\r\n  }, [isOpen, miqaatId]);\r\n\r\n  // Set form data after dropdown options are loaded or counterPackingData changes\r\n  useEffect(() => {\r\n    if (counterPackingData && !isDropdownLoading) {\r\n      setFormData({\r\n        miqaat: miqaatId,\r\n        zone: counterPackingData.zone_id || (counterPackingData.zone?.id ?? ''),\r\n        sub_zone: counterPackingData.sub_zone_id || (counterPackingData.sub_zone?.id ?? ''),\r\n        miqaat_menu: counterPackingData.miqaat_menu_id || (counterPackingData.miqaat_menu?.id ?? ''),\r\n        unit: counterPackingData.unit_id || (counterPackingData.unit?.id ?? ''),\r\n        container: counterPackingData.container_id || (counterPackingData.container?.id ?? ''),\r\n        quantity: counterPackingData.quantity || '',\r\n        filled_percentage: counterPackingData.filled_percentage || '',\r\n      });\r\n    }\r\n  }, [counterPackingData, miqaatId, isDropdownLoading]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n    setError(null);\r\n\r\n    try {\r\n      // Validate required fields\r\n      const requiredFields = ['zone', 'miqaat_menu', 'unit', 'container', 'quantity', 'filled_percentage'];\r\n      const missingFields = requiredFields.filter(field => !formData[field]);\r\n      \r\n      if (missingFields.length > 0) {\r\n        throw new Error(`Please fill in all required fields: ${missingFields.join(', ')}`);\r\n      }\r\n\r\n      // Validate dropdown selections\r\n      if (!dropdownOptions.zones.some(zone => zone.id === parseInt(formData.zone))) {\r\n        throw new Error('Please select a valid zone');\r\n      }\r\n      if (!dropdownOptions.miqaat_menus.some(menu => menu.id === parseInt(formData.miqaat_menu))) {\r\n        throw new Error('Please select a valid miqaat menu');\r\n      }\r\n      if (!dropdownOptions.units.some(unit => unit.id === parseInt(formData.unit))) {\r\n        throw new Error('Please select a valid unit');\r\n      }\r\n      if (!dropdownOptions.containers.some(container => container.id === parseInt(formData.container))) {\r\n        throw new Error('Please select a valid container');\r\n      }\r\n\r\n      // Validate numeric fields\r\n      const quantity = parseInt(formData.quantity);\r\n      const filledPercentage = parseFloat(formData.filled_percentage);\r\n      if (isNaN(quantity) || quantity < 0) {\r\n        throw new Error('Quantity must be a non-negative number');\r\n      }\r\n      if (isNaN(filledPercentage) || filledPercentage < 0 || filledPercentage > 100) {\r\n        throw new Error('Filled percentage must be between 0 and 100');\r\n      }\r\n\r\n      // Prepare submission data\r\n      const submissionData = {\r\n        ...formData,\r\n        miqaat: parseInt(miqaatId),\r\n        zone: parseInt(formData.zone),\r\n        sub_zone: parseInt(formData.sub_zone),\r\n        miqaat_menu: parseInt(formData.miqaat_menu),\r\n        unit: parseInt(formData.unit),\r\n        container: parseInt(formData.container),\r\n        quantity: quantity,\r\n        filled_percentage: filledPercentage,\r\n      };\r\n\r\n      // Submit the form\r\n      await patch(`/counter-packing/${counterPackingData.id}/`, submissionData);\r\n      \r\n      toast.success('Counter packing record updated successfully');\r\n      onSuccess();\r\n      onClose();\r\n    } catch (err) {\r\n      console.error('Error updating counter packing record:', err);\r\n      setError(err.message || err.response?.data?.message || 'Failed to update counter packing record');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose}>\r\n      <ModalHeader>Edit Counter Packing Record</ModalHeader>\r\n      <ModalBody>\r\n        {error && (\r\n          <div className=\"bg-red-100 border border-red-400  text-red-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">\r\n            <span className=\"block sm:inline\">{error}</span>\r\n          </div>\r\n        )}\r\n        {isDropdownLoading ? (\r\n          <p className=\"text-gray-700 dark:text-gray-400\">Loading options...</p>\r\n        ) : (\r\n          <form onSubmit={handleSubmit}>\r\n                  <div className=\"overflow-x-auto\">\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n             \r\n\r\n              {/* Miqaat Menu Dropdown */}\r\n              <Label className=\"block text-sm\">\r\n                <span className=\"text-gray-700 dark:text-gray-400\">Miqaat Menu *</span>\r\n                <Select\r\n                  name=\"miqaat_menu\"\r\n                  value={formData.miqaat_menu}\r\n                  onChange={handleInputChange}\r\n                  className=\"mt-1\"\r\n                  required\r\n                  disabled={isSubmitting}\r\n                >\r\n                  <option value=\"\">Select Miqaat Menu</option>\r\n                  {dropdownOptions.miqaat_menus.map(menu => (\r\n                    <option key={menu.id} value={menu.id}>\r\n                      {menu.menu_name}\r\n                    </option>\r\n                  ))}\r\n                </Select>\r\n              </Label>\r\n\r\n              {/* Unit Dropdown */}\r\n              <Label className=\"block text-sm\">\r\n                <span className=\"text-gray-700 dark:text-gray-400\">Unit *</span>\r\n                <Select\r\n                  name=\"unit\"\r\n                  value={formData.unit}\r\n                  onChange={handleInputChange}\r\n                  className=\"mt-1\"\r\n                  required\r\n                  disabled={isSubmitting}\r\n                >\r\n                  <option value=\"\">Select Unit</option>\r\n                  {dropdownOptions.units.map(unit => (\r\n                    <option key={unit.id} value={unit.id}>\r\n                      {unit.name}\r\n                    </option>\r\n                  ))}\r\n                </Select>\r\n              </Label>\r\n\r\n              {/* Container Dropdown */}\r\n              <Label className=\"block text-sm\">\r\n                <span className=\"text-gray-700 dark:text-gray-400\">Container *</span>\r\n                <Select\r\n                  name=\"container\"\r\n                  value={formData.container}\r\n                  onChange={handleInputChange}\r\n                  className=\"mt-1\"\r\n                  required\r\n                  disabled={isSubmitting}\r\n                >\r\n                  <option value=\"\">Select Container</option>\r\n                  {dropdownOptions.containers.map(container => (\r\n                    <option key={container.id} value={container.id}>\r\n                      {container.name}\r\n                    </option>\r\n                  ))}\r\n                </Select>\r\n              </Label>\r\n\r\n              {/* Quantity Input */}\r\n              <Label className=\"block text-sm\">\r\n                <span className=\"text-gray-700 dark:text-gray-400\">Quantity *</span>\r\n                <Input \r\n                  type=\"number\"\r\n                  name=\"quantity\"\r\n                  value={formData.quantity}\r\n                  onChange={handleInputChange}\r\n                  className=\"mt-1\"\r\n                  placeholder=\"Enter quantity\"\r\n                  min=\"0\"\r\n                  required\r\n                  disabled={isSubmitting}\r\n                />\r\n              </Label>\r\n\r\n               {/* Zone Dropdown */}\r\n              <Label className=\"block text-sm\">\r\n                <span className=\"text-gray-700 dark:text-gray-400\">Zone *</span>\r\n                <Select\r\n                  name=\"zone\"\r\n                  value={formData.zone}\r\n                  onChange={handleInputChange}\r\n                  className=\"mt-1\"\r\n                  required\r\n                  disabled={isSubmitting}\r\n                >\r\n                  <option value=\"\">Select Zone</option>\r\n                  {dropdownOptions.zones.map(zone => (\r\n                    <option key={zone.id} value={zone.id}>\r\n                      {zone.name}\r\n                    </option>\r\n                  ))}\r\n                </Select>\r\n              </Label>\r\n\r\n\r\n               {/* Sub-Zone Dropdown */}\r\n              <Label className=\"block text-sm\">\r\n                <span className=\"text-gray-700 dark:text-gray-400\">Sub Zone *</span>\r\n                <Select\r\n                  name=\"sub_zone\"\r\n                  value={formData.sub_zone}\r\n                  onChange={handleInputChange}\r\n                  className=\"mt-1\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  <option value=\"\">Select Sub Zone</option>\r\n                  {dropdownOptions.sub_zone.map(sub_zone => (\r\n                    <option key={sub_zone.id} value={sub_zone.id}>\r\n                      {sub_zone.name}\r\n                    </option>\r\n                  ))}\r\n                </Select>\r\n              </Label>\r\n\r\n              {/* Filled Percentage Input */}\r\n              <Label className=\"block text-sm\">\r\n                <span className=\"text-gray-700 dark:text-gray-400\">Filled Percentage *</span>\r\n                <Input \r\n                  type=\"number\"\r\n                  name=\"filled_percentage\"\r\n                  value={formData.filled_percentage}\r\n                  onChange={handleInputChange}\r\n                  className=\"mt-1\"\r\n                  placeholder=\"Enter filled percentage\"\r\n                  min=\"0\"\r\n                  max=\"100\"\r\n                  step=\"0.1\"\r\n                  required\r\n                  disabled={isSubmitting}\r\n                />\r\n              </Label>\r\n            </div>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <div className=\"hidden sm:block\">\r\n          <Button \r\n            onClick={handleSubmit} \r\n            disabled={isSubmitting || isDropdownLoading}\r\n          >\r\n            {isSubmitting ? 'Updating...' : 'Update'}\r\n          </Button>\r\n        </div>\r\n        <div className=\"w-full sm:hidden\">\r\n          <Button \r\n            block \r\n            size=\"large\" \r\n            onClick={handleSubmit}\r\n            disabled={isSubmitting || isDropdownLoading}\r\n          >\r\n            {isSubmitting ? 'Updating...' : 'Update'}\r\n          </Button>\r\n        </div>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditCounterPackingModal;","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { get, _delete } from '../api/axios';\r\nimport {\r\n  Table,\r\n  TableHeader,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  TableContainer,\r\n} from '@windmill/react-ui';\r\nimport {\r\n  AiOutlinePlusCircle,\r\n  AiOutlineArrowLeft,\r\n  AiOutlineDelete,\r\n  AiOutlineEdit,\r\n  AiOutlineDown\r\n} from 'react-icons/ai';\r\nimport CreateCounterPackingModal from '../components/CreateCounterPackingModal';\r\nimport EditCounterPackingModal from '../components/EditCounterPackingModal';\r\nimport toast from 'react-hot-toast';\r\nimport logo from '../assets/img/mainLogo.png';\r\n\r\nfunction CounterPacking() {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const [counterPackingData, setCounterPackingData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [miqaatDetails, setMiqaatDetails] = useState(null);\r\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n  const [currentCounterPacking, setCurrentCounterPacking] = useState(null);\r\n  const [expandedItem, setExpandedItem] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchCounterPackingData();\r\n    fetchMiqaatDetails();\r\n  }, [id]);\r\n\r\n  const fetchCounterPackingData = async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await get(`/counter-packing/${id}/`);\r\n      setCounterPackingData(response);\r\n    } catch (err) {\r\n      console.error('Error fetching counter packing data:', err);\r\n      setError('Failed to load counter packing data. Please try again.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchMiqaatDetails = async () => {\r\n    try {\r\n      const response = await get(`/miqaat/${id}/`);\r\n      setMiqaatDetails(response);\r\n    } catch (err) {\r\n      console.error('Error fetching miqaat details:', err);\r\n      // Don't set error state to avoid blocking UI\r\n    }\r\n  };\r\n\r\n  const handleBackClick = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const handleAddCounterPacking = () => {\r\n    setIsCreateModalOpen(true);\r\n  };\r\n\r\n  const handleCreateModalClose = () => {\r\n    setIsCreateModalOpen(false);\r\n  };\r\n\r\n  const handleEditModalClose = () => {\r\n    setIsEditModalOpen(false);\r\n    setCurrentCounterPacking(null);\r\n  };\r\n\r\n  const handleCounterPackingCreated = () => {\r\n    fetchCounterPackingData();\r\n  };\r\n\r\n  const handleCounterPackingUpdated = () => {\r\n    fetchCounterPackingData();\r\n  };\r\n\r\n  const handleEditCounterPacking = (item) => {\r\n    setCurrentCounterPacking(item);\r\n    setIsEditModalOpen(true);\r\n  };\r\n\r\n  const handleDeleteCounterPacking = async (counterPackingId) => {\r\n    try {\r\n      const confirmDelete = window.confirm('Are you sure you want to delete this counter packing record?');\r\n      if (confirmDelete) {\r\n        await _delete(`/counter-packing/${counterPackingId}/`);\r\n        setCounterPackingData(prevData => ({\r\n          ...prevData,\r\n          counter_packing: prevData.counter_packing.filter(item => item.id !== counterPackingId),\r\n        }));\r\n        toast.success('Counter packing record deleted successfully');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting counter packing record:', error);\r\n      toast.error('Failed to delete counter packing record. Please try again.');\r\n    }\r\n  };\r\n\r\n  const toggleExpand = (id) => {\r\n    setExpandedItem(expandedItem === id ? null : id);\r\n  };\r\n\r\n  return (\r\n  <div className=\"relative w-full px-4 py-6\">\r\n         {/* Watermark Logo */}\r\n        <img\r\n          src={logo}\r\n          alt=\"Watermark\"\r\n          className=\"absolute pointer-events-none select-none\"\r\n          style={{\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            position: \"absolute\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            width: \"70vw\",\r\n            maxWidth: \"400px\",\r\n            height: \"auto\",\r\n            opacity: 0.05,\r\n            zIndex: 0,\r\n          }}\r\n        />\r\n     \r\n         {/* Content Overlay */}\r\n         <div className=\"relative z-10\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <div className=\"flex items-center\">\r\n          <button onClick={handleBackClick} className=\"mr-4\">\r\n            <AiOutlineArrowLeft className=\"w-5 h-5 dark:text-white\" />\r\n          </button>\r\n          <h1\r\n            style={{\r\n              fontSize: window.innerWidth < 768 ? '1.25rem' : '1.5rem',\r\n            }}\r\n            className=\"font-semibold dark:text-white\"\r\n          >\r\n            Counter Packing\r\n            {miqaatDetails && ` - ${miqaatDetails.miqaat_name}`}\r\n          </h1>\r\n        </div>\r\n        <button\r\n          onClick={handleAddCounterPacking}\r\n          className=\"flex items-center bg-purple-600 text-white rounded-lg\"\r\n          style={{\r\n            fontSize: window.innerWidth < 768 ? '0.875rem' : '1rem',\r\n            padding: window.innerWidth < 768 ? '0.5rem 1rem' : '0.75rem 1rem',\r\n          }}\r\n        >\r\n          <AiOutlinePlusCircle\r\n            className={`mr-1 ${window.innerWidth < 768 ? 'w-3 h-3' : 'w-4 h-4'}`}\r\n          />\r\n          Add\r\n        </button>\r\n      </div>\r\n\r\n      {/* Loading State */}\r\n      {isLoading ? (\r\n        <div className=\"flex justify-center my-8\">\r\n          <p className=\"text-gray-700 dark:text-gray-400\">Loading data...</p>\r\n        </div>\r\n      ) : error ? (\r\n        <div className=\"text-center py-8\">\r\n          <p className=\"text-red-600\">{error}</p>\r\n          <button\r\n            onClick={fetchCounterPackingData}\r\n            className=\"mt-4 bg-purple-600 text-white px-4 py-2 rounded\"\r\n          >\r\n            Retry\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {/* Desktop Table - Hidden on mobile */}\r\n          <TableContainer className=\"hidden md:block mb-8\">\r\n            <Table>\r\n              <TableHeader>\r\n                <tr>\r\n                  <TableCell>ID</TableCell>\r\n                  <TableCell>Menu</TableCell>\r\n                  <TableCell>Unit</TableCell>\r\n                  <TableCell>Container</TableCell>\r\n                  <TableCell>Quantity</TableCell>\r\n                  <TableCell>Filled %</TableCell>\r\n                  <TableCell>Zone</TableCell>\r\n                  <TableCell>Sub-Zone</TableCell>\r\n\r\n                  <TableCell className=\"text-right\">Actions</TableCell>\r\n                </tr>\r\n              </TableHeader>\r\n              <TableBody>\r\n                {counterPackingData?.counter_packing?.map((item, index) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell>\r\n                      <span className=\"text-sm\">{index + 1}</span>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <span className=\"text-sm font-medium\">{item.menu_name || 'N/A'}</span>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <span className=\"text-sm\">{item.unit_name || 'N/A'}</span>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <span className=\"text-sm\">{item.container_name || 'N/A'}</span>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <span className=\"text-sm font-medium\">{item.quantity != null ? item.quantity : 'N/A'}</span>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <span className=\"text-sm text-green-600 dark:text-green-400\">\r\n                        {item.filled_percentage != null ? `${item.filled_percentage}%` : 'N/A'}\r\n                      </span>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <span className=\"text-sm\">{item.zone_name || 'N/A'}</span>\r\n                    </TableCell>\r\n\r\n                    <TableCell>\r\n                      <span className=\"text-sm\">{item.sub_zone_name || 'N/A'}</span>\r\n                    </TableCell>\r\n                    <TableCell className=\"text-right\">\r\n                      <button\r\n                        onClick={() => handleEditCounterPacking(item)}\r\n                        className=\"text-gray-600 hover:text-blue-600 dark:text-gray-400 dark:hover:text-blue-500 mr-2\"\r\n                      >\r\n                        <AiOutlineEdit className=\"h-4 w-4 inline-block\" />\r\n                      </button>\r\n                      <button\r\n                        onClick={() => handleDeleteCounterPacking(item.id)}\r\n                        className=\"text-gray-600 hover:text-red-600 dark:text-gray-400 dark:hover:text-red-500\"\r\n                      >\r\n                        <AiOutlineDelete className=\"h-4 w-4 inline-block\" />\r\n                      </button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n\r\n          {/* Mobile View - Card Based Layout */}\r\n          <div className=\"md:hidden space-y-3\">\r\n            {!counterPackingData?.counter_packing || counterPackingData.counter_packing.length === 0 ? (\r\n              <div className=\"text-center py-8\">\r\n                <p className=\"text-gray-700 dark:text-gray-400\">No counter packing records found</p>\r\n              </div>\r\n            ) : (\r\n              counterPackingData.counter_packing.map((item, index) => (\r\n                <div\r\n                  key={item.id}\r\n                  className=\"bg-white dark:bg-gray-800 rounded-lg shadow-md border dark:border-gray-700\"\r\n                >\r\n                  <div\r\n                    className=\"flex items-center justify-between p-4 cursor-pointer\"\r\n                    onClick={() => toggleExpand(item.id)}\r\n                  >\r\n                    <div className=\"flex items-center space-x-3\">\r\n                      <div className=\"bg-gray-100 dark:bg-gray-700 h-8 w-8 rounded-full flex items-center justify-center text-gray-700 dark:text-gray-300 font-medium\">\r\n                        {index + 1}\r\n                      </div>\r\n                      <div className=\"font-medium text-gray-800 dark:text-gray-200\">{item.menu_name || 'N/A'}</div>\r\n                    </div>\r\n                    <button\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        toggleExpand(item.id);\r\n                      }}\r\n                      className=\"text-gray-600 dark:text-gray-400\"\r\n                    >\r\n                      <AiOutlineDown\r\n                        className={`h-4 w-4 transition-transform ${expandedItem === item.id ? 'rotate-180' : ''}`}\r\n                      />\r\n                    </button>\r\n                  </div>\r\n\r\n                  {expandedItem === item.id && (\r\n                    <div className=\"px-4 pb-4 pt-0 border-t dark:border-gray-700\">\r\n                      <div className=\"mt-2 space-y-2\">\r\n                        <div>\r\n                          <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-1\">Unit:</p>\r\n                          <p className=\"text-sm text-gray-700 dark:text-gray-300\">{item.unit_name || 'N/A'}</p>\r\n                        </div>\r\n                        <div>\r\n                          <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-1\">Container:</p>\r\n                          <p className=\"text-sm text-gray-700 dark:text-gray-300\">{item.container_name || 'N/A'}</p>\r\n                        </div>\r\n                        <div>\r\n                          <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-1\">Quantity:</p>\r\n                          <p className=\"text-sm text-gray-700 dark:text-gray-300\">{item.quantity != null ? item.quantity : 'N/A'}</p>\r\n                        </div>\r\n                        <div>\r\n                          <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-1\">Filled %:</p>\r\n                          <p className=\"text-sm text-green-600 dark:text-green-400\">{item.filled_percentage != null ? `${item.filled_percentage}%` : 'N/A'}</p>\r\n                        </div>\r\n                        <div>\r\n                          <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-1\">Zone:</p>\r\n                          <p className=\"text-sm text-gray-700 dark:text-gray-300\">{item.zone_name || 'N/A'}</p>\r\n                        </div>\r\n                        <div>\r\n                          <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-1\">Sub-Zone:</p>\r\n                          <p className=\"text-sm text-gray-700 dark:text-gray-300\">{item.sub_zone_name || 'N/A'}</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mt-4 flex justify-end space-x-2\">\r\n                        <button\r\n                          onClick={() => handleEditCounterPacking(item)}\r\n                          className=\"text-white px-4 py-1 rounded-md bg-blue-600 hover:bg-blue-700 dark:bg-blue-500 dark:hover:bg-blue-600 flex items-center\"\r\n                        >\r\n                          <AiOutlineEdit className=\"h-4 w-4 mr-1\" />\r\n                          Edit\r\n                        </button>\r\n                        <button\r\n                          onClick={() => handleDeleteCounterPacking(item.id)}\r\n                          className=\"text-white px-4 py-1 rounded-md bg-red-600 hover:bg-red-700 dark:bg-red-500 dark:hover:bg-red-600 flex items-center\"\r\n                        >\r\n                          <AiOutlineDelete className=\"h-4 w-4 mr-1\" />\r\n                          Delete\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* Modals */}\r\n      {isCreateModalOpen && (\r\n        <CreateCounterPackingModal\r\n          isOpen={isCreateModalOpen}\r\n          onClose={handleCreateModalClose}\r\n          miqaatId={id}\r\n          onSuccess={handleCounterPackingCreated}\r\n        />\r\n      )}\r\n\r\n      {isEditModalOpen && currentCounterPacking && (\r\n        <EditCounterPackingModal\r\n          isOpen={isEditModalOpen}\r\n          onClose={handleEditModalClose}\r\n          miqaatId={id}\r\n          counterPackingData={currentCounterPacking}\r\n          onSuccess={handleCounterPackingUpdated}\r\n        />\r\n      )}\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CounterPacking;","import axios from \"axios\";\r\n\r\n// let BASE_URL = \"http://35.172.211.35/api\";\r\nlet BASE_URL = \"https://rms-v2.duckdns.org/api\";\r\n\r\n\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n  console.log(\"Running in Production Mode\");\r\n  BASE_URL = \"http://35.172.211.35/api\";\r\n} else {\r\n  // BASE_URL = \"http://localhost:8000/api/v1\";\r\n  console.log(\"Running in Development Mode\");\r\n}\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: BASE_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"accessToken\");\r\n    if (token) {\r\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    // await logErrorToBackend(error);\r\n    if (error.response && error.response.status === 401) {\r\n      localStorage.clear();\r\n      window.location.href = \"/\";\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const get = async (url, params) => {\r\n  return axiosInstance.get(url, { params }).then((res) => res.data);\r\n};\r\n\r\nexport const post = async (url, data) => {\r\n  return axiosInstance.post(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const put = async (url, data) => {\r\n  return axiosInstance.put(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const patch = async (url, data) => {\r\n  return axiosInstance.patch(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const _delete = async (url) => {\r\n  return axiosInstance.delete(url).then((res) => res.data);\r\n};\r\n\r\nexport const downloadBlob = async (url, filename) => {\r\n  try {\r\n    const response = await axiosInstance.get(url, {\r\n      responseType: \"blob\",\r\n    });\r\n\r\n    const blob = new Blob([response.data], { type: \"application/pdf\" });\r\n    const blobUrl = window.URL.createObjectURL(blob);\r\n\r\n    const link = document.createElement(\"a\");\r\n    link.href = blobUrl;\r\n    link.setAttribute(\"download\", filename);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    link.remove();\r\n    window.URL.revokeObjectURL(blobUrl);\r\n  } catch (err) {\r\n    console.error(\"Download failed:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const uploadFormData = async (url, formData) => {\r\n  try {\r\n    const response = await axiosInstance.post(url, formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(\"File upload failed:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport default axiosInstance;\r\n"],"sourceRoot":""}