{"version":3,"sources":["pages/Tables.js","api/axios.js"],"names":["Tables","location","useLocation","history","useHistory","modalState","openModal","closeModal","clearModalState","useModal","miqaatType","URLSearchParams","search","get","currentPage","setCurrentPage","useState","tableData","setTableData","totalResults","setTotalResults","isLoading","setIsLoading","showThaalsModal","setShowThaalsModal","selectedThaals","setSelectedThaals","showEmailModal","setShowEmailModal","emailToSend","setEmailToSend","targetMiqaatId","setTargetMiqaatId","sending","setSending","prevMiqaatTypeRef","useRef","fetchingRef","initialRenderRef","prevLocationKeyRef","key","isAdmin","setIsAdmin","fetchMiqaatData","async","page","type","current","url","concat","response","Array","isArray","slice","length","console","error","useEffect","fetchZones","setTimeout","user","JSON","parse","localStorage","getItem","is_admin","err","window","innerWidth","fromFeatureModal","selectedEvent","isDialogOpen","onPageChange","p","handleFeatureClick","featureType","miqaatId","e","arguments","undefined","stopPropagation","navigationPath","navigationState","push","handleDeleteMiqaat","id","confirm","_delete","prevData","filter","item","toast","success","alert","getFeatureColor","feature","Menu","Attendance","Distribution","thaalsByZone","setThaalsByZone","handleThaalChange","zoneId","field","value","prev","_objectSpread","Number","zones","setZones","zonesResponse","initialThaals","forEach","zone","thaals_polled","thaals_cooked","thaals_served","handleViewThaals","event","z","zid","miqaatName","miqaat_name","handleEditMiqaat","isSubmitting","setIsSubmitting","totalPages","Math","ceil","startIndex","fileInputRef","handleDownloadReport","downloadBlob","openEmailModal","handleCopyRegistrationLink","navigator","clipboard","writeText","then","catch","React","createElement","className","src","logo","alt","style","top","left","position","transform","width","maxWidth","height","opacity","zIndex","onClick","handleBackClick","goBack","AiOutlineArrowLeft","getPageTitle","Fragment","handleCreateClick","FaPlus","triggerFilePicker","click","FaUpload","accept","ref","onChange","_fileInputRef$current","_fileInputRef$current2","file","files","formData","FormData","append","_res$created_miqaats","_res$data","_res$data$errors","res","uploadFormData","created_miqaats","data","errors","errorMessages","map","row","join","duration","_error$response","_error$response$data","message","scope","index","Date","miqaat_date","toLocaleDateString","hijri_date","name","FaEdit","FaTrash","handleRowClick","min","disabled","FaChevronLeft","FaChevronRight","FaTimes","color","onSubmit","preventDefault","zoneWrapper","thaals","post","miqaat_id","zone_id","log","_thaalsByZone$zoneId","_thaalsByZone$zoneId2","_thaalsByZone$zoneId3","Label","Input","target","Button","updated","handleDeleteZone","placeholder","email_to","BASE_URL","axiosInstance","axios","create","baseURL","headers","interceptors","request","use","config","token","Promise","reject","status","clear","href","params","put","patch","delete","filename","responseType","blob","Blob","blobUrl","URL","createObjectURL","link","document","setAttribute","body","appendChild","remove","revokeObjectURL"],"mappings":"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","file":"static/js/3.c0f45d6e.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport {\r\n  FaEdit,\r\n  FaTrash,\r\n  FaUpload,\r\n  FaPlus,\r\n  FaChevronLeft,\r\n  FaChevronRight,\r\n  FaTimes,\r\n} from \"react-icons/fa\";\r\nimport { post, get, _delete, uploadFormData, downloadBlob } from \"../api/axios\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useModal } from \"../context/ModalContext\";\r\nimport logo from '../assets/img/mainLogo.png';\r\n\r\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\r\nimport { Button, Input, Label } from \"@windmill/react-ui\";\r\n\r\nfunction Tables() {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const { modalState, openModal, closeModal, clearModalState } = useModal();\r\n\r\n  const queryParams = new URLSearchParams(location.search);\r\n  const miqaatType = queryParams.get(\"miqaat_type\");\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [totalResults, setTotalResults] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showThaalsModal, setShowThaalsModal] = useState(false);\r\n  const [selectedThaals, setSelectedThaals] = useState(null);\r\n  const [showEmailModal, setShowEmailModal] = useState(false);\r\n  const [emailToSend, setEmailToSend] = useState(\"\");\r\n  const [targetMiqaatId, setTargetMiqaatId] = useState(null);\r\n  const [sending, setSending] = useState(false);\r\n  const prevMiqaatTypeRef = useRef();\r\n  const fetchingRef = useRef(false);\r\n  const initialRenderRef = useRef(true);\r\n  const prevLocationKeyRef = useRef(location.key); // Track location changes\r\n\r\n  const resultsPerPage = 10;\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const getPageTitle = () => {\r\n    switch (miqaatType) {\r\n      case \"general_miqaats\":\r\n        return \"General Miqaats\";\r\n      case \"ramadan\":\r\n        return \"Ramadan\";\r\n      case \"private_events\":\r\n        return \"Private Events\";\r\n      default:\r\n        return \"Miqaats\";\r\n    }\r\n  };\r\n\r\n  const fetchMiqaatData = async (page, type) => {\r\n    if (fetchingRef.current) return;\r\n\r\n    fetchingRef.current = true;\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      let url = \"/miqaat/filter/\";\r\n      if (type) {\r\n        url += `?miqaat_type=${type}`;\r\n      }\r\n\r\n      const response = await get(url);\r\n\r\n      if (response && Array.isArray(response)) {\r\n        setTableData(\r\n          response.slice((page - 1) * resultsPerPage, page * resultsPerPage)\r\n        );\r\n        setTotalResults(response.length);\r\n      } else {\r\n        console.error(\"Unexpected response format:\", response);\r\n        setTableData([]);\r\n        setTotalResults(0);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching miqaat data:\", error);\r\n      setTableData([]);\r\n      setTotalResults(0);\r\n    } finally {\r\n      setIsLoading(false);\r\n      fetchingRef.current = false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const shouldFetch =\r\n      initialRenderRef.current || prevMiqaatTypeRef.current !== miqaatType;\r\n\r\n    if (shouldFetch && !fetchingRef.current) {\r\n      initialRenderRef.current = false;\r\n\r\n      if (prevMiqaatTypeRef.current !== miqaatType) {\r\n        setCurrentPage(1);\r\n      }\r\n\r\n      prevMiqaatTypeRef.current = miqaatType;\r\n      fetchZones();\r\n      setTimeout(() => {\r\n        fetchMiqaatData(1, miqaatType);\r\n      }, 0);\r\n    }\r\n\r\n    try {\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n      setIsAdmin(user?.is_admin === true);\r\n    } catch (err) {\r\n      console.error(\"Error parsing is_admin from localStorage:\", err);\r\n    }\r\n  }, [miqaatType]);\r\n\r\n  // Handle modal state when navigating to Tables\r\n  useEffect(() => {\r\n    // Only proceed if the location has actually changed\r\n    if (location.key === prevLocationKeyRef.current) {\r\n      return;\r\n    }\r\n\r\n    prevLocationKeyRef.current = location.key;\r\n\r\n    const isMobileView = window.innerWidth < 768;\r\n\r\n    if (isMobileView) {\r\n      if (\r\n        modalState.fromFeatureModal &&\r\n        modalState.selectedEvent &&\r\n        !modalState.isDialogOpen\r\n      ) {\r\n        openModal(modalState.selectedEvent, true);\r\n      } else if (modalState.isDialogOpen && !modalState.fromFeatureModal) {\r\n        closeModal();\r\n      }\r\n    } else if (modalState.isDialogOpen) {\r\n      closeModal();\r\n    }\r\n  }, [\r\n    location.key,\r\n    modalState.fromFeatureModal,\r\n    modalState.selectedEvent,\r\n    modalState.isDialogOpen,\r\n    openModal,\r\n    closeModal,\r\n  ]);\r\n\r\n  const onPageChange = (p) => {\r\n    if (p !== currentPage && !fetchingRef.current) {\r\n      setCurrentPage(p);\r\n      setTimeout(() => {\r\n        fetchMiqaatData(p, miqaatType);\r\n      }, 0);\r\n    }\r\n  };\r\n\r\n  const handleCreateClick = () => {\r\n    if (miqaatType) {\r\n      history.push(`/app/forms?miqaat_type=${miqaatType}`);\r\n    } else {\r\n      history.push(\"/app/forms\");\r\n    }\r\n  };\r\n\r\n  const handleFeatureClick = (\r\n    featureType,\r\n    miqaatId,\r\n    e,\r\n    fromFeatureModal = false\r\n  ) => {\r\n    if (e) {\r\n      e.stopPropagation();\r\n    }\r\n\r\n    let navigationPath = \"\";\r\n\r\n    switch (featureType) {\r\n      case \"miqaat-menu\":\r\n        navigationPath = `/app/miqaat-menu/${miqaatId}`;\r\n        break;\r\n      case \"miqaat-attendance\":\r\n        navigationPath = `/app/miqaat-attendance/${miqaatId}`;\r\n        break;\r\n      case \"counter-packing\":\r\n        navigationPath = `/app/counter-packing/${miqaatId}`;\r\n        break;\r\n      case \"distribution\":\r\n        navigationPath = `/app/distribution/${miqaatId}`;\r\n        break;\r\n      case \"leftover-degs\":\r\n        navigationPath = `/app/leftover-degs/${miqaatId}`;\r\n        break;\r\n      default:\r\n        console.error(\"Unknown feature type:\", featureType);\r\n        return;\r\n    }\r\n\r\n    const navigationState = {\r\n      fromFeatureModal: fromFeatureModal,\r\n      selectedEvent: fromFeatureModal ? modalState.selectedEvent : null,\r\n    };\r\n\r\n    history.push(navigationPath, navigationState);\r\n  };\r\n\r\n  const handleDeleteMiqaat = async (id, e) => {\r\n    if (e) {\r\n      e.stopPropagation();\r\n    }\r\n\r\n    try {\r\n      const confirmDelete = window.confirm(\r\n        \"Are you sure you want to delete this Miqaat?\"\r\n      );\r\n\r\n      if (confirmDelete) {\r\n        const res = await _delete(`/miqaat/${id}/`);\r\n        setTableData((prevData) => prevData.filter((item) => item.id !== id));\r\n        toast.success(\"Miqaat deleted successfully\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting Miqaat:\", error);\r\n      alert(\"Failed to delete Miqaat. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const handleRowClick = (event) => {\r\n    openModal(event);\r\n  };\r\n\r\n  const getFeatureColor = (feature) => {\r\n    const colorMap = {\r\n      Menu: \"bg-blue-500\",\r\n      Attendance: \"bg-green-500\",\r\n      \"Counter Packing\": \"bg-yellow-500\",\r\n      Distribution: \"bg-purple-500\",\r\n      \"Leftover Degs\": \"bg-teal-500\",\r\n    };\r\n    return colorMap[feature] || \"bg-gray-500\";\r\n  };\r\n  const [thaalsByZone, setThaalsByZone] = useState({});\r\n\r\n  const handleThaalChange = (zoneId, field, value) => {\r\n    setThaalsByZone((prev) => ({\r\n      ...prev,\r\n      [zoneId]: {\r\n        ...prev[zoneId],\r\n        [field]: Number(value),\r\n      },\r\n    }));\r\n  };\r\n\r\n  const [zones, setZones] = useState([]);\r\n\r\n  const fetchZones = async () => {\r\n    const zonesResponse = await get(\"/zone/list/\");\r\n    setZones(zonesResponse);\r\n\r\n    // Initialize each zone with 0 values\r\n    const initialThaals = {};\r\n    zonesResponse.forEach((zone) => {\r\n      initialThaals[zone.id] = {\r\n        thaals_polled: 0,\r\n        thaals_cooked: 0,\r\n        thaals_served: 0,\r\n      };\r\n    });\r\n    setThaalsByZone(initialThaals);\r\n  };\r\n\r\n  const handleViewThaals = async (event, e) => {\r\n    if (e) e.stopPropagation();\r\n\r\n    const miqaatId = event.id;\r\n\r\n    try {\r\n      const zonesResponse = await get(`/miqaat/zones/${miqaatId}/`);\r\n      setZones(zonesResponse);\r\n\r\n      const initialThaals = {};\r\n      zonesResponse.forEach((z) => {\r\n        const zid = z.zone.id;\r\n        initialThaals[zid] = {\r\n          thaals_polled: z.thaals_polled || 0,\r\n          thaals_cooked: z.thaals_cooked || 0,\r\n          thaals_served: z.thaals_served || 0,\r\n        };\r\n      });\r\n      setThaalsByZone(initialThaals);\r\n\r\n      setSelectedThaals({\r\n        miqaatName: event.miqaat_name,\r\n        miqaatId: event.id,\r\n      });\r\n      setShowThaalsModal(true);\r\n    } catch (error) {\r\n      console.error(\"Failed to load zones for miqaat\", error);\r\n    }\r\n  };\r\n\r\n  const handleEditMiqaat = (id, e) => {\r\n    if (e) {\r\n      e.stopPropagation();\r\n    }\r\n    history.push(`/app/edit-miqaat/${id}`);\r\n  };\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const totalPages = Math.ceil(totalResults / resultsPerPage);\r\n  const startIndex = (currentPage - 1) * resultsPerPage;\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const miqaatId = selectedThaals?.miqaatId;\r\n    if (!miqaatId) {\r\n      console.error(\"Miqaat ID is missing\");\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n\r\n    try {\r\n      for (const zoneWrapper of zones) {\r\n        const zoneId = zoneWrapper.zone.id;\r\n        const thaals = thaalsByZone[zoneId];\r\n\r\n        await post(\"/miqaat-zone/update/\", {\r\n          miqaat_id: miqaatId,\r\n          zone_id: zoneId,\r\n          thaals_polled: thaals.thaals_polled,\r\n          thaals_cooked: thaals.thaals_cooked,\r\n          thaals_served: thaals.thaals_served,\r\n        });\r\n      }\r\n\r\n      console.log(\"All MiqaatZone records updated\");\r\n      toast.success(\"Thaals updated successfully\");\r\n      setShowThaalsModal(false);\r\n    } catch (err) {\r\n      console.error(\"Error updating thaals:\", err);\r\n      toast.error(\"Failed to update thaals\");\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteZone = async (zoneId) => {\r\n    const miqaatId = selectedThaals?.miqaatId;\r\n\r\n    if (!miqaatId) {\r\n      console.error(\"Miqaat ID not found\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await _delete(\r\n        `/miqaat-zone/delete/?miqaat_id=${miqaatId}&zone_id=${zoneId}`\r\n      );\r\n\r\n      toast.success(\"Zone deleted from Miqaat ✔️\");\r\n\r\n      setZones((prev) => prev.filter((z) => z.zone.id !== zoneId));\r\n      setThaalsByZone((prev) => {\r\n        const updated = { ...prev };\r\n        delete updated[zoneId];\r\n        return updated;\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete zone:\", error);\r\n      toast.error(\"Failed to delete zone\");\r\n    }\r\n  };\r\n  const fileInputRef = useRef(null);\r\n\r\n  const triggerFilePicker = () => {\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.click();\r\n    }\r\n  };\r\n\r\n  const handleCSVUpload = async () => {\r\n    const file = fileInputRef.current?.files?.[0];\r\n    if (!file) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    try {\r\n      const res = await uploadFormData(\"/upload-miqaat-csv\", formData);\r\n\r\n      if (res.created_miqaats?.length) {\r\n        toast.success(\r\n          `${res.created_miqaats.length} Miqaats uploaded successfully.`\r\n        );\r\n      }\r\n\r\n      if (res.data?.errors?.length) {\r\n        const errorMessages = res.data.errors\r\n          .map((err) => `Row ${err.row}: ${err.error}`)\r\n          .join(\"\\n\");\r\n\r\n        toast.error(`Some rows failed:\\n${errorMessages}`, {\r\n          duration: 5000,\r\n        });\r\n      }\r\n\r\n      fetchMiqaatData(1, miqaatType);\r\n    } catch (error) {\r\n      if (error.response?.data?.errors) {\r\n        const errorMessages = error.response.data.errors\r\n          .map((err) => `Row ${err.row}: ${err.error}`)\r\n          .join(\"\\n\");\r\n\r\n        toast.error(`Upload validation failed:\\n${errorMessages}`, {\r\n          duration: 8000,\r\n        });\r\n      } else {\r\n        toast.error(\"Upload failed: \" + (error.message || \"Unknown error\"));\r\n      }\r\n    } finally {\r\n      if (fileInputRef.current) {\r\n        fileInputRef.current.value = null;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDownloadReport = async (miqaatId) => {\r\n    try {\r\n      await downloadBlob(\r\n        `/report/download/${miqaatId}/`,\r\n        `dana report - ${miqaatId}.pdf`\r\n      );\r\n    } catch (err) {\r\n      toast.error(\"Failed to download report.\");\r\n    }\r\n  };\r\n\r\n  const openEmailModal = (miqaatId) => {\r\n    setTargetMiqaatId(miqaatId);\r\n    setEmailToSend(\"\");\r\n    setShowEmailModal(true);\r\n  };\r\n\r\n  const sendEmailReport = async () => {\r\n    if (!emailToSend) return toast.error(\"Email is required.\");\r\n    setSending(true);\r\n    try {\r\n      await post(`/report/email/${targetMiqaatId}/`, {\r\n        email_to: emailToSend,\r\n      });\r\n      toast.success(\"Email sent!\");\r\n      setShowEmailModal(false);\r\n    } catch (err) {\r\n      toast.error(\"Failed to send email.\");\r\n    } finally {\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  const handleCopyRegistrationLink = (miqaatId) => {\r\n    const url = `https://danadxb.com/registration/${miqaatId}`;\r\n    navigator.clipboard\r\n      .writeText(url)\r\n      .then(() => toast.success(\"Registration link copied!\"))\r\n      .catch(() => toast.error(\"Failed to copy link\"));\r\n  };\r\n\r\n  const handleBackClick = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n       <div className=\"relative w-full px-4 py-6\">\r\n        {/* Watermark Logo */}\r\n        <img\r\n          src={logo}\r\n          alt=\"Watermark\"\r\n          className=\"absolute pointer-events-none select-none\"\r\n          style={{\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            position: \"absolute\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            width: \"70vw\",\r\n            maxWidth: \"400px\",\r\n            height: \"auto\",\r\n            opacity: 0.05,\r\n            zIndex: 0,\r\n          }}\r\n        />\r\n    \r\n        {/* Content Overlay */}\r\n        <div className=\"relative z-10\">\r\n      <div className=\"flex flex-col sm:flex-row sm:justify-between items-start sm:items-center mb-6 gap-4\">\r\n        <h1 className=\"text-2xl font-semibold dark:text-white\">\r\n          {\" \"}\r\n          <button onClick={handleBackClick} className=\"mr-4\">\r\n            <AiOutlineArrowLeft className=\"w-5 h-5 dark:text-white\" />\r\n          </button>\r\n          {getPageTitle()}\r\n        </h1>\r\n\r\n        <div className=\"flex gap-4\">\r\n          {isAdmin && (\r\n            <>\r\n              <button\r\n                className=\"bg-purple-600 hover:bg-purple-700 text-white text-sm sm:text-base px-4 py-2 rounded flex items-center justify-center w-full sm:w-auto\"\r\n                onClick={handleCreateClick}\r\n              >\r\n                <FaPlus className=\"mr-2\" /> Create\r\n              </button>\r\n\r\n              <button\r\n                className=\"bg-green-600 hover:bg-green-700 text-white text-sm sm:text-base px-4 py-2 rounded flex items-center justify-center w-full sm:w-auto\"\r\n                onClick={triggerFilePicker}\r\n              >\r\n                <FaUpload className=\"mr-2\" /> Upload CSV\r\n              </button>\r\n            </>\r\n          )}\r\n          {/* Hidden file input */}\r\n          <input\r\n            type=\"file\"\r\n            accept=\".csv\"\r\n            ref={fileInputRef}\r\n            onChange={handleCSVUpload}\r\n            className=\"hidden\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {isLoading ? (\r\n        <div className=\"flex justify-center my-8\">\r\n          <p className=\"text-gray-700 dark:text-gray-400\">Loading data...</p>\r\n        </div>\r\n      ) : tableData.length === 0 ? (\r\n        <div className=\"text-center py-8\">\r\n          <p className=\"text-gray-700 dark:text-gray-400\">No records found</p>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"hidden md:block rounded-lg border border-gray-200 dark:border-gray-700 overflow-hidden bg-white dark:bg-gray-800\">\r\n            <div className=\"w-full\">\r\n              <table className=\"w-full divide-y divide-gray-200 dark:divide-gray-700\">\r\n                <thead className=\"bg-gray-50 dark:bg-gray-700\">\r\n                  <tr>\r\n                    <th\r\n                      scope=\"col\"\r\n                      className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider w-12\"\r\n                    >\r\n                      SNO.\r\n                    </th>\r\n                    <th\r\n                      scope=\"col\"\r\n                      className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\"\r\n                    >\r\n                      MIQAAT NAME\r\n                    </th>\r\n                    <th\r\n                      scope=\"col\"\r\n                      className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\"\r\n                    >\r\n                      DATE\r\n                    </th>\r\n                    <th\r\n                      scope=\"col\"\r\n                      className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\"\r\n                    >\r\n                      HIJRI DATE\r\n                    </th>\r\n\r\n                    <th\r\n                      scope=\"col\"\r\n                      className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\"\r\n                    >\r\n                      FEATURES\r\n                    </th>\r\n                    <th\r\n                      scope=\"col\"\r\n                      className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider w-20\"\r\n                    >\r\n                      ACTIONS\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"divide-y divide-gray-200 dark:divide-gray-700\">\r\n                  {tableData.map((event, index) => (\r\n                    <tr\r\n                      key={event.id}\r\n                      className=\"hover:bg-gray-50 dark:hover:bg-gray-700\"\r\n                    >\r\n                      <td className=\"px-4 py-3 whitespace-nowrap\">\r\n                        <span className=\"text-sm text-gray-900 dark:text-gray-300\">\r\n                          {startIndex + index + 1}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-4 py-3 whitespace-nowrap\">\r\n                        <span className=\"text-sm font-medium text-gray-900 dark:text-gray-300\">\r\n                          {event.miqaat_name}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-4 py-3 whitespace-nowrap\">\r\n                        <span className=\"text-sm text-gray-900 dark:text-gray-300\">\r\n                          {new Date(event.miqaat_date).toLocaleDateString()}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-4 py-3 whitespace-nowrap\">\r\n                        <span className=\"text-sm text-gray-900 dark:text-gray-300\">\r\n                          {event.hijri_date}\r\n                        </span>\r\n                      </td>\r\n\r\n                      <td className=\"px-4 py-3\">\r\n                        <div className=\"flex flex-wrap gap-1\">\r\n                          {/* Always show Thaals button */}\r\n                          <button\r\n                            onClick={(e) => handleViewThaals(event, e)}\r\n                            className=\"bg-purple-600 hover:bg-purple-700 text-white text-xs rounded-md px-3 py-1\"\r\n                          >\r\n                            Thaals\r\n                          </button>\r\n\r\n                          {/* Conditionally show Menu & Attendance only if isAdmin */}\r\n                          {[\r\n                            ...(isAdmin\r\n                              ? [\r\n                                  { name: \"Menu\", type: \"miqaat-menu\" },\r\n                                  {\r\n                                    name: \"Attendance\",\r\n                                    type: \"miqaat-attendance\",\r\n                                  },\r\n                                ]\r\n                              : []),\r\n                            {\r\n                              name: \"Counter Packing\",\r\n                              type: \"counter-packing\",\r\n                            },\r\n                            { name: \"Distribution\", type: \"distribution\" },\r\n                            { name: \"Leftover Degs\", type: \"leftover-degs\" },\r\n                          ].map((feature) => (\r\n                            <button\r\n                              key={feature.name}\r\n                              onClick={(e) =>\r\n                                handleFeatureClick(feature.type, event.id, e)\r\n                              }\r\n                              className={`px-2 py-1 text-xs text-white transition-colors hover:brightness-90 focus:outline-none focus:ring-1 ${getFeatureColor(\r\n                                feature.name\r\n                              )} rounded`}\r\n                            >\r\n                              {feature.name}\r\n                            </button>\r\n                          ))}\r\n                          {/* Download Dana Report */}\r\n                          <button\r\n                            onClick={() => handleDownloadReport(event.id)}\r\n                            className=\"px-2 py-1 text-xs text-white bg-green-700 hover:bg-green-800 rounded transition-colors\"\r\n                          >\r\n                            Download Report\r\n                          </button>\r\n\r\n                          {/* Email Dana Report */}\r\n                          <button\r\n                            onClick={() => openEmailModal(event.id)}\r\n                            className=\"px-2 py-1 text-xs text-white bg-yellow-600 hover:bg-yellow-700 rounded transition-colors\"\r\n                          >\r\n                            Email Report\r\n                          </button>\r\n                          {/* Registration link copy (always shown) */}\r\n                          <button\r\n                            onClick={() => handleCopyRegistrationLink(event.id)}\r\n                            className=\"px-2 py-1 text-xs text-white bg-blue-600 hover:bg-blue-700 rounded transition-colors\"\r\n                          >\r\n                            Registration\r\n                          </button>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-4 py-3 whitespace-nowrap\">\r\n                        {isAdmin && (\r\n                          <div className=\"flex justify-end mt-2 space-x-2\">\r\n                            <button\r\n                              className=\"text-gray-600 hover:text-blue-600 dark:text-gray-400 dark:hover:text-blue-400\"\r\n                              onClick={(e) => handleEditMiqaat(event.id, e)}\r\n                            >\r\n                              <FaEdit className=\"h-4 w-4\" />\r\n                            </button>\r\n                            <button\r\n                              className=\"text-gray-600 hover:text-red-600 dark:text-gray-400 dark:hover:text-red-400\"\r\n                              onClick={(e) => handleDeleteMiqaat(event.id, e)}\r\n                            >\r\n                              <FaTrash className=\"h-4 w-4\" />\r\n                            </button>\r\n                          </div>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"md:hidden space-y-4\">\r\n            {tableData.map((event) => (\r\n              <div\r\n                key={event.id}\r\n                className=\"bg-white dark:bg-gray-800 rounded-lg shadow-md\"\r\n                onClick={() => handleRowClick(event)}\r\n              >\r\n                <div className=\"grid grid-cols-3 p-4 cursor-pointer\">\r\n                  <div className=\"col-span-2\">\r\n                    <h3 className=\"font-semibold text-gray-800 dark:text-gray-300\">\r\n                      {event.miqaat_name}\r\n                    </h3>\r\n                    <p className=\"text-sm text-gray-500\">\r\n                      {new Date(event.miqaat_date).toLocaleDateString()}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"text-right\">\r\n                    {isAdmin && (\r\n                      <div className=\"flex justify-end mt-2 space-x-2\">\r\n                        <button\r\n                          className=\"text-gray-600 hover:text-blue-600 dark:text-gray-400 dark:hover:text-blue-400\"\r\n                          onClick={(e) => handleEditMiqaat(event.id, e)}\r\n                        >\r\n                          <FaEdit className=\"h-4 w-4\" />\r\n                        </button>\r\n                        <button\r\n                          className=\"text-gray-600 hover:text-red-600 dark:text-gray-400 dark:hover:text-red-400\"\r\n                          onClick={(e) => handleDeleteMiqaat(event.id, e)}\r\n                        >\r\n                          <FaTrash className=\"h-4 w-4\" />\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between mt-4\">\r\n            <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n              Showing {startIndex + 1}-\r\n              {Math.min(startIndex + resultsPerPage, totalResults)} OF{\" \"}\r\n              {totalResults}\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <button\r\n                className=\"p-2 border border-gray-300 dark:border-gray-600 rounded disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                onClick={() => onPageChange(currentPage - 1)}\r\n                disabled={currentPage === 1}\r\n              >\r\n                <FaChevronLeft className=\"h-4 w-4 text-gray-600 dark:text-gray-400\" />\r\n              </button>\r\n              <div className=\"px-4 py-2 bg-purple-600 text-white rounded\">\r\n                {currentPage}\r\n              </div>\r\n              <button\r\n                className=\"p-2 border border-gray-300 dark:border-gray-600 rounded disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                onClick={() => onPageChange(currentPage + 1)}\r\n                disabled={currentPage === totalPages}\r\n              >\r\n                <FaChevronRight className=\"h-4 w-4 text-gray-600 dark:text-gray-400\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {modalState.isDialogOpen && modalState.selectedEvent && (\r\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg w-11/12 max-w-md max-h-[90vh] overflow-auto\">\r\n            <div className=\"flex justify-between items-center p-4 border-b border-gray-200 dark:border-gray-700\">\r\n              <h2 className=\"text-xl font-semibold text-gray-900 dark:text-gray-300\">\r\n                {modalState.selectedEvent.miqaat_name}\r\n              </h2>\r\n              <button\r\n                className=\"text-gray-600 hover:text-gray-800 dark:text-gray-400 dark:hover:text-gray-200\"\r\n                onClick={closeModal}\r\n              >\r\n                <FaTimes className=\"h-6 w-6\" />\r\n              </button>\r\n            </div>\r\n            <div className=\"p-4 space-y-4\">\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div>\r\n                  <p className=\"text-sm text-gray-500\">Date</p>\r\n                  <p className=\"font-medium text-gray-900 dark:text-white\">\r\n                    {new Date(\r\n                      modalState.selectedEvent.miqaat_date\r\n                    ).toLocaleDateString()}\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-sm text-gray-500\">Hijri Date</p>\r\n                  <p className=\"font-medium text-gray-900 dark:text-white\">\r\n                    {modalState.selectedEvent.hijri_date}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-4 w-full\">\r\n                  {/* Thaals Button */}\r\n                  <button\r\n                    onClick={(e) =>\r\n                      handleViewThaals(modalState.selectedEvent, e)\r\n                    }\r\n                    className=\"bg-purple-600 hover:bg-purple-700 text-white py-3 rounded-lg text-sm font-semibold transition-all\"\r\n                  >\r\n                    Thaals\r\n                  </button>\r\n\r\n                  {/* Feature Buttons */}\r\n                  {[\r\n                    ...(isAdmin\r\n                      ? [\r\n                          {\r\n                            name: \"Menu\",\r\n                            type: \"miqaat-menu\",\r\n                            color: \"bg-blue-500\",\r\n                          },\r\n                          {\r\n                            name: \"Attendance\",\r\n                            type: \"miqaat-attendance\",\r\n                            color: \"bg-green-500\",\r\n                          },\r\n                        ]\r\n                      : []),\r\n                    {\r\n                      name: \"Counter Packing\",\r\n                      type: \"counter-packing\",\r\n                      color: \"bg-yellow-500\",\r\n                    },\r\n                    {\r\n                      name: \"Distribution\",\r\n                      type: \"distribution\",\r\n                      color: \"bg-purple-500\",\r\n                    },\r\n                    {\r\n                      name: \"Leftover Degs\",\r\n                      type: \"leftover-degs\",\r\n                      color: \"bg-teal-500\",\r\n                    },\r\n                  ].map((feature) => (\r\n                    <button\r\n                      key={feature.name}\r\n                      onClick={(e) =>\r\n                        handleFeatureClick(\r\n                          feature.type,\r\n                          modalState.selectedEvent.id,\r\n                          e,\r\n                          true\r\n                        )\r\n                      }\r\n                      className={`w-full py-3 text-white rounded-lg text-sm font-semibold ${feature.color} hover:opacity-90 transition-all`}\r\n                    >\r\n                      {feature.name}\r\n                    </button>\r\n                  ))}\r\n                  {/* Download Dana Report */}\r\n                  <button\r\n                    onClick={() =>\r\n                      handleDownloadReport(modalState.selectedEvent.id)\r\n                    }\r\n                    className=\"bg-red-400 hover:bg-red-600 text-white py-3 rounded-lg text-sm font-semibold transition-all\"\r\n                  >\r\n                    Download Report\r\n                  </button>\r\n\r\n                  {/* Email Dana Report */}\r\n                  <button\r\n                    onClick={() => openEmailModal(modalState.selectedEvent.id)}\r\n                    className=\"bg-yellow-300 hover:bg-yellow-500 text-white py-3 rounded-lg text-sm font-semibold transition-all\"\r\n                  >\r\n                    Email Report\r\n                  </button>\r\n\r\n                  {/* Registration Button */}\r\n                  <button\r\n                    onClick={() =>\r\n                      handleCopyRegistrationLink(modalState.selectedEvent.id)\r\n                    }\r\n                    className=\"bg-indigo-600 hover:bg-indigo-700 text-white py-3 rounded-lg text-sm font-semibold transition-all col-span-2 sm:col-span-1\"\r\n                  >\r\n                    Copy Registration Link\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      </div>\r\n\r\n      {showThaalsModal && selectedThaals && (\r\n        <div className=\"fixed inset-0 z-50 flex items-start justify-center bg-black bg-opacity-50 px-2 sm:px-4 py-4 overflow-y-auto min-h-screen\">\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg w-full max-w-3xl shadow-xl max-h-[90vh] sm:max-h-[80vh] flex flex-col\">\r\n            {/* Modal Header */}\r\n            <div className=\"flex justify-between items-center p-4 border-b border-gray-200 dark:border-gray-700 sticky top-0 bg-white dark:bg-gray-800 z-10\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n                Thaals for {selectedThaals.miqaatName}\r\n              </h3>\r\n              <button\r\n                className=\"text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\r\n                onClick={() => setShowThaalsModal(false)}\r\n              >\r\n                <FaTimes className=\"h-5 w-5\" />\r\n              </button>\r\n            </div>\r\n\r\n            {/* Modal Form */}\r\n            <form onSubmit={handleSubmit} className=\"flex-1 overflow-y-auto\">\r\n              <div className=\"p-4 sm:p-6 space-y-4 sm:space-y-6\">\r\n                {zones.map((zoneWrapper) => {\r\n                  const zoneId = zoneWrapper.zone.id;\r\n                  return (\r\n                    <div key={zoneId} className=\"w-full\">\r\n                      <div className=\"p-3 sm:p-4 border border-gray-300 dark:border-gray-600 rounded-md\">\r\n                        <h3 className=\"text-sm sm:text-md font-semibold text-gray-800 dark:text-white mb-3 sm:mb-4 break-words\">\r\n                          {zoneWrapper.zone.name}\r\n                        </h3>\r\n\r\n                        {/* Mobile: Stack vertically, Desktop: Grid layout */}\r\n                        <div className=\"flex flex-col space-y-3 sm:grid sm:grid-cols-2 md:grid-cols-3 sm:gap-4\">\r\n                          <Label className=\"flex flex-col\">\r\n                            <span className=\"text-sm font-medium mb-1\">\r\n                              Thaals Polled\r\n                            </span>\r\n                            <Input\r\n                              type=\"number\"\r\n                              className=\"w-full text-sm p-2 rounded-md border-gray-300 dark:border-gray-600 focus:ring focus:ring-blue-500\"\r\n                              value={thaalsByZone[zoneId]?.thaals_polled || 0}\r\n                              min=\"0\"\r\n                              onChange={(e) =>\r\n                                handleThaalChange(\r\n                                  zoneId,\r\n                                  \"thaals_polled\",\r\n                                  e.target.value\r\n                                )\r\n                              }\r\n                            />\r\n                          </Label>\r\n\r\n                          <Label className=\"flex flex-col\">\r\n                            <span className=\"text-sm font-medium mb-1 -mt-3\">\r\n                              Thaals Cooked\r\n                            </span>\r\n                            <Input\r\n                              type=\"number\"\r\n                              className=\"w-full text-sm p-2 rounded-md border-gray-300 dark:border-gray-600 focus:ring focus:ring-blue-500\"\r\n                              value={thaalsByZone[zoneId]?.thaals_cooked || 0}\r\n                              min=\"0\"\r\n                              onChange={(e) =>\r\n                                handleThaalChange(\r\n                                  zoneId,\r\n                                  \"thaals_cooked\",\r\n                                  e.target.value\r\n                                )\r\n                              }\r\n                            />\r\n                          </Label>\r\n\r\n                          <Label className=\"flex flex-col\">\r\n                            <span className=\"text-sm font-medium mb-1 -mt-3\">\r\n                              Thaals Served\r\n                            </span>\r\n                            <Input\r\n                              type=\"number\"\r\n                              className=\"w-full text-sm p-2 rounded-md border-gray-300 dark:border-gray-600 focus:ring focus:ring-blue-500\"\r\n                              value={thaalsByZone[zoneId]?.thaals_served || 0}\r\n                              min=\"0\"\r\n                              onChange={(e) =>\r\n                                handleThaalChange(\r\n                                  zoneId,\r\n                                  \"thaals_served\",\r\n                                  e.target.value\r\n                                )\r\n                              }\r\n                            />\r\n                          </Label>\r\n                        </div>\r\n\r\n                        {/* Mobile: Stack buttons vertically, Desktop: Horizontal */}\r\n                        <div className=\"flex flex-col sm:flex-row gap-2 sm:gap-3 mt-4 sm:mt-6 sm:justify-end\">\r\n                          <Button\r\n                            type=\"submit\"\r\n                            disabled={isSubmitting}\r\n                            className=\"w-full sm:w-auto bg-blue-600 hover:bg-blue-700 text-white text-sm p-2 rounded-md order-2 sm:order-1\"\r\n                          >\r\n                            {isSubmitting ? \"Saving...\" : \"Save\"}\r\n                          </Button>\r\n                          <Button\r\n                            type=\"button\"\r\n                            className=\"w-full sm:w-auto bg-red-600 hover:bg-red-700 text-white text-sm p-2 rounded-md order-1 sm:order-2\"\r\n                            onClick={() => handleDeleteZone(zoneId)}\r\n                          >\r\n                            Delete\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </form>\r\n          </div>\r\n        \r\n        </div>\r\n      )}\r\n\r\n    {showEmailModal && (\r\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg w-full max-w-sm\">\r\n          <h3 className=\"text-lg font-semibold mb-4 text-gray-800 dark:text-gray-100\">\r\n            Send Report via Email\r\n          </h3>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={emailToSend}\r\n            onChange={(e) => setEmailToSend(e.target.value)}\r\n            className=\"w-full mb-4 p-2 border border-gray-300 dark:border-gray-600 rounded\"\r\n          />\r\n          <div className=\"flex justify-end gap-2\">\r\n            <button\r\n              className=\"bg-gray-300 dark:bg-gray-600 text-gray-800 dark:text-white px-4 py-2 rounded\"\r\n              onClick={() => setShowEmailModal(false)}\r\n              disabled={sending}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              className=\"bg-yellow-600 hover:bg-yellow-700 text-white px-4 py-2 rounded\"\r\n              onClick={sendEmailReport}\r\n              disabled={sending}\r\n            >\r\n              {sending ? \"Sending...\" : \"Send\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tables;\r\n","import axios from \"axios\";\r\n\r\n// let BASE_URL = \"http://35.172.211.35/api\";\r\nlet BASE_URL = \"https://rms-v2.duckdns.org/api\";\r\n\r\n\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n  console.log(\"Running in Production Mode\");\r\n  BASE_URL = \"https://rms-v2.duckdns.org/api\";\r\n} else {\r\n  // BASE_URL = \"http://localhost:8000/api/v1\";\r\n  console.log(\"Running in Development Mode\");\r\n}\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: BASE_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"accessToken\");\r\n    if (token) {\r\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    // await logErrorToBackend(error);\r\n    if (error.response && error.response.status === 401) {\r\n      localStorage.clear();\r\n      window.location.href = \"/\";\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const get = async (url, params) => {\r\n  return axiosInstance.get(url, { params }).then((res) => res.data);\r\n};\r\n\r\nexport const post = async (url, data) => {\r\n  return axiosInstance.post(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const put = async (url, data) => {\r\n  return axiosInstance.put(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const patch = async (url, data) => {\r\n  return axiosInstance.patch(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const _delete = async (url) => {\r\n  return axiosInstance.delete(url).then((res) => res.data);\r\n};\r\n\r\nexport const downloadBlob = async (url, filename) => {\r\n  try {\r\n    const response = await axiosInstance.get(url, {\r\n      responseType: \"blob\",\r\n    });\r\n\r\n    const blob = new Blob([response.data], { type: \"application/pdf\" });\r\n    const blobUrl = window.URL.createObjectURL(blob);\r\n\r\n    const link = document.createElement(\"a\");\r\n    link.href = blobUrl;\r\n    link.setAttribute(\"download\", filename);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    link.remove();\r\n    window.URL.revokeObjectURL(blobUrl);\r\n  } catch (err) {\r\n    console.error(\"Download failed:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const uploadFormData = async (url, formData) => {\r\n  try {\r\n    const response = await axiosInstance.post(url, formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(\"File upload failed:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport default axiosInstance;\r\n"],"sourceRoot":""}