{"version":3,"sources":["components/CreateZoneModal.js","components/EditZoneModal.js","pages/Zone.js","api/axios.js","components/Typography/PageTitle.js"],"names":["CreateZoneModal","_ref","isOpen","onClose","onZoneCreated","formData","setFormData","useState","name","isSubmitting","setIsSubmitting","errors","setErrors","handleSubmit","async","e","preventDefault","validateForm","newErrors","trim","Object","keys","length","dataToSubmit","_objectSpread","post","error","console","response","data","submit","React","useEffect","createElement","Modal","ModalHeader","ModalBody","onSubmit","className","Label","Input","value","onChange","target","prevData","placeholder","ModalFooter","Button","onClick","disabled","EditZoneModal","onZoneUpdated","zoneData","patch","concat","id","Zone","useHistory","setZoneData","isLoading","setIsLoading","setError","isCreateModalOpen","setIsCreateModalOpen","isEditModalOpen","setIsEditModalOpen","currentZone","setCurrentZone","refreshTrigger","setRefreshTrigger","expandedItem","setExpandedItem","get","results","err","fetchZoneData","handleEditClick","zone","handleDeleteZone","window","confirm","_delete","filter","item","toast","success","PageTitle","handleAddZone","style","fontSize","innerWidth","padding","AiOutlinePlusCircle","Fragment","TableContainer","Table","TableHeader","TableCell","TableBody","map","index","TableRow","key","layout","size","aria-label","AiOutlineEdit","aria-hidden","AiOutlineDelete","toggleExpand","AiOutlineUp","AiOutlineDown","handleCreateModalClose","handleZoneCreated","prev","handleEditModalClose","handleZoneUpdated","BASE_URL","log","axiosInstance","axios","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Promise","reject","status","clear","location","href","url","params","then","res","put","delete","downloadBlob","filename","responseType","blob","Blob","type","blobUrl","URL","createObjectURL","link","document","setAttribute","body","appendChild","click","remove","revokeObjectURL","uploadFormData","children"],"mappings":"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","file":"static/js/20.5bf820be.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n  Input,\r\n  Label,\r\n} from '@windmill/react-ui';\r\nimport { post } from '../api/axios';\r\n\r\nfunction CreateZoneModal({ isOpen, onClose, onZoneCreated }) {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n  });\r\n  \r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prevData => ({\r\n      ...prevData,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    \r\n    if (!formData.name.trim()) {\r\n      newErrors.name = 'Zone name is required';\r\n    }\r\n    \r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsSubmitting(true);\r\n      \r\n      // Prepare data for submission\r\n      const dataToSubmit = {\r\n        ...formData,\r\n        // Convert empty strings to null for optional fields\r\n      };\r\n      \r\n      // Send POST request to create zone\r\n      await post('/requests/zones/', dataToSubmit);\r\n      \r\n      // Reset form\r\n      setFormData({\r\n        name: '',\r\n      });\r\n      \r\n      // Call the callback to refresh the zone list\r\n      if (onZoneCreated) {\r\n        onZoneCreated();\r\n      }\r\n      \r\n      // Close the modal\r\n      onClose();\r\n    } catch (error) {\r\n      console.error('Error creating zone:', error);\r\n      if (error.response && error.response.data) {\r\n        // Display backend validation errors\r\n        setErrors({ \r\n          ...errors,\r\n          submit: 'Failed to create zone. Please check the form for errors.',\r\n          ...error.response.data \r\n        });\r\n      } else {\r\n        setErrors({ submit: 'Failed to create zone. Please try again.' });\r\n      }\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setFormData({\r\n      name: '',\r\n    });\r\n    setErrors({});\r\n  };\r\n\r\n  // Reset form when modal closes\r\n  React.useEffect(() => {\r\n    if (!isOpen) {\r\n      resetForm();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose}>\r\n      <ModalHeader>Add New Zone</ModalHeader>\r\n      <ModalBody>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"mb-4\">\r\n            <Label>\r\n              <span>Zone Name *</span>\r\n              <Input \r\n                className=\"mt-1\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleChange}\r\n                placeholder=\"Enter zone name\"\r\n              />\r\n              {errors.name && (\r\n                <span className=\"text-xs text-red-600\">{errors.name}</span>\r\n              )}\r\n            </Label>\r\n          </div>\r\n        \r\n          \r\n          {errors.submit && (\r\n            <div className=\"mb-4\">\r\n              <p className=\"text-sm text-red-600\">{errors.submit}</p>\r\n            </div>\r\n          )}\r\n        </form>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <div className=\"flex flex-col space-y-2 sm:space-y-0 sm:space-x-2 sm:flex-row\">\r\n      \r\n          <Button \r\n            onClick={handleSubmit} \r\n            disabled={isSubmitting}\r\n          >\r\n            {isSubmitting ? 'Saving...' : 'Save Zone'}\r\n          </Button>\r\n        </div>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default CreateZoneModal;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n  Input,\r\n  Label,\r\n} from '@windmill/react-ui';\r\nimport { patch } from '../api/axios';\r\n\r\nfunction EditZoneModal({ isOpen, onClose, onZoneUpdated, zoneData }) {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n  });\r\n  \r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  // Initialize form data when modal opens or zoneData changes\r\n  useEffect(() => {\r\n    if (zoneData) {\r\n      setFormData({\r\n        name: zoneData.name || '',\r\n      });\r\n    }\r\n  }, [zoneData]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prevData => ({\r\n      ...prevData,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    \r\n    if (!formData.name.trim()) {\r\n      newErrors.name = 'Zone name is required';\r\n    }\r\n    \r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsSubmitting(true);\r\n      \r\n      // Prepare data for submission\r\n      const dataToSubmit = {\r\n        ...formData,\r\n        // Convert empty strings to null for optional fields\r\n      };\r\n      \r\n      // Send PATCH request to update zone\r\n      await patch(`requests/zones/${zoneData.id}/edit/`, dataToSubmit);\r\n      \r\n      // Call the callback to refresh the zone list\r\n      if (onZoneUpdated) {\r\n        onZoneUpdated();\r\n      }\r\n      \r\n      // Close the modal\r\n      onClose();\r\n    } catch (error) {\r\n      console.error('Error updating zone:', error);\r\n      if (error.response && error.response.data) {\r\n        // Display backend validation errors\r\n        setErrors({ \r\n          ...errors,\r\n          submit: 'Failed to update zone. Please check the form for errors.',\r\n          ...error.response.data \r\n        });\r\n      } else {\r\n        setErrors({ submit: 'Failed to update zone. Please try again.' });\r\n      }\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose}>\r\n      <ModalHeader>Edit Zone</ModalHeader>\r\n      <ModalBody>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"mb-4\">\r\n            <Label>\r\n              <span>Zone Name *</span>\r\n              <Input \r\n                className=\"mt-1\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleChange}\r\n                placeholder=\"Enter zone name\"\r\n              />\r\n              {errors.name && (\r\n                <span className=\"text-xs text-red-600\">{errors.name}</span>\r\n              )}\r\n            </Label>\r\n          </div>\r\n          \r\n          {errors.submit && (\r\n            <div className=\"mb-4\">\r\n              <p className=\"text-sm text-red-600\">{errors.submit}</p>\r\n            </div>\r\n          )}\r\n        </form>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <div className=\"flex flex-col space-y-2 sm:space-y-0 sm:space-x-2 sm:flex-row\">\r\n       \r\n          <Button \r\n            onClick={handleSubmit} \r\n            disabled={isSubmitting}\r\n          >\r\n            {isSubmitting ? 'Updating...' : 'Update Zone'}\r\n          </Button>\r\n        </div>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default EditZoneModal;","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { get, _delete } from '../api/axios';\r\nimport PageTitle from '../components/Typography/PageTitle';\r\nimport {\r\n  Table,\r\n  TableHeader,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  TableContainer,\r\n  Button,\r\n} from '@windmill/react-ui';\r\nimport {\r\n  AiOutlinePlusCircle,\r\n  AiOutlineEdit,\r\n  AiOutlineDelete,\r\n  AiOutlineDown,\r\n  AiOutlineUp\r\n} from 'react-icons/ai';\r\nimport CreateZoneModal from '../components/CreateZoneModal';\r\nimport EditZoneModal from '../components/EditZoneModal';\r\nimport logo from '../assets/img/mainLogo.png';\r\n\r\nimport toast from 'react-hot-toast';\r\n\r\nfunction Zone() {\r\n  const history = useHistory();\r\n  \r\n\r\n  const [zoneData, setZoneData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n  const [currentZone, setCurrentZone] = useState(null);\r\n  const [refreshTrigger, setRefreshTrigger] = useState(0);\r\n  const [expandedItem, setExpandedItem] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchZoneData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await get('/requests/zones/');\r\n        setZoneData(response.results);\r\n      } catch (err) {\r\n        console.error('Error fetching zone data:', err);\r\n        setError('Failed to load zone data');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchZoneData();\r\n  }, [refreshTrigger]);\r\n\r\n\r\n\r\n\r\n  const handleAddZone = () => {\r\n    setIsCreateModalOpen(true);\r\n  };\r\n\r\n  const handleCreateModalClose = () => {\r\n    setIsCreateModalOpen(false);\r\n  };\r\n\r\n  const handleEditClick = (zone) => {\r\n    setCurrentZone(zone);\r\n    setIsEditModalOpen(true);\r\n    setExpandedItem(null);\r\n  };\r\n\r\n  const handleEditModalClose = () => {\r\n    setIsEditModalOpen(false);\r\n    setCurrentZone(null);\r\n  };\r\n\r\n  const handleZoneCreated = () => {\r\n    setRefreshTrigger(prev => prev + 1);\r\n    toast.success('Zone created successfully');\r\n  };\r\n\r\n  const handleZoneUpdated = () => {\r\n    setRefreshTrigger(prev => prev + 1);\r\n    toast.success('Zone updated successfully');\r\n  };\r\n\r\n  const handleDeleteZone = async (id) => {\r\n    try {\r\n      const confirmDelete = window.confirm('Are you sure you want to delete this zone?');\r\n\r\n      if (confirmDelete) {\r\n        await _delete(`requests/zones/${id}/delete/`);\r\n\r\n        setZoneData(prevData => prevData.filter(item => item.id !== id));\r\n        toast.success('Zone deleted successfully');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting zone:', error);\r\n      toast.error('Failed to delete zone. Please try again.');\r\n    }\r\n  };\r\n\r\n  const toggleExpand = (id) => {\r\n    setExpandedItem(expandedItem === id ? null : id);\r\n  };\r\n\r\n\r\n  \r\n\r\n\r\n  return (\r\n <div className=\"relative w-full px-4 py-6\">\r\n \r\n    \r\n        {/* Content Overlay */}\r\n        <div className=\"relative z-10\">      {/* Header */}\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <PageTitle>Zones</PageTitle>\r\n        <button\r\n          onClick={handleAddZone}\r\n          className=\"flex items-center bg-purple-600 text-white rounded-lg\"\r\n          style={{\r\n            fontSize: window.innerWidth < 768 ? '0.875rem' : '1rem',\r\n            padding: window.innerWidth < 768 ? '0.5rem 1rem' : '0.75rem 1rem'\r\n          }}\r\n        >\r\n          <AiOutlinePlusCircle\r\n            className={`mr-1 ${window.innerWidth < 768 ? 'w-3 h-3' : 'w-4 h-4'}`}\r\n          />\r\n          Add Zone\r\n        </button>\r\n      </div>\r\n\r\n     \r\n\r\n      {/* Loading State */}\r\n      {isLoading ? (\r\n        <div className=\"flex justify-center my-8\">\r\n          <p className=\"text-gray-700 dark:text-gray-300\">Loading data...</p>\r\n        </div>\r\n      ) : error ? (\r\n        <div className=\"text-center py-8\">\r\n          <p className=\"text-red-600 dark:text-red-400\">{error}</p>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {/* Desktop Table - Hidden on mobile */}\r\n          <TableContainer className=\"hidden md:block mb-8\">\r\n            <Table>\r\n              <TableHeader>\r\n                <tr>\r\n                  <TableCell>ID</TableCell>\r\n                  <TableCell>Name</TableCell>\r\n               \r\n                  <TableCell>Actions</TableCell>\r\n                </tr>\r\n              </TableHeader>\r\n              <TableBody>\r\n                {zoneData.map((item, index) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell>\r\n                      <span className=\"text-sm font-semibold\">{index + 1}</span>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <span className=\"text-sm\">{item.name}</span>\r\n                    </TableCell>\r\n                   \r\n                    <TableCell>\r\n                      <div className=\"flex items-center space-x-4\">\r\n                        <Button\r\n                          layout=\"link\"\r\n                          size=\"icon\"\r\n                          aria-label=\"Edit\"\r\n                          onClick={() => handleEditClick(item)}\r\n                        >\r\n                          <AiOutlineEdit className=\"w-5 h-5\" aria-hidden=\"true\" />\r\n                        </Button>\r\n                        <Button\r\n                          layout=\"link\"\r\n                          size=\"icon\"\r\n                          aria-label=\"Delete\"\r\n                          onClick={() => handleDeleteZone(item.id)}\r\n                        >\r\n                          <AiOutlineDelete className=\"w-5 h-5\" aria-hidden=\"true\" />\r\n                        </Button>\r\n                      </div>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n\r\n          {/* Mobile View - List with Zone Cards */}\r\n          <div className=\"md:hidden space-y-3\">\r\n            {zoneData.length === 0 ? (\r\n              <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\r\n                No zones found\r\n              </div>\r\n            ) : (\r\n              zoneData.map((item, index) => (\r\n                <div\r\n                  key={item.id}\r\n                  className=\"bg-white dark:bg-gray-800 rounded-lg border dark:border-gray-700 hover:border-purple-200 dark:hover:border-purple-700 transition-colors\"\r\n                  onClick={() => toggleExpand(item.id)}\r\n                >\r\n                  <div className=\"flex items-center p-3\">\r\n                    <div\r\n                      className=\"h-12 w-12 mr-3 rounded-full bg-purple-100 dark:bg-purple-900 text-purple-600 dark:text-purple-300 \r\n                      flex items-center justify-center font-medium\"\r\n                    >\r\n                      {index + 1}\r\n                    </div>\r\n                    <div className=\"flex-1 min-w-0\">\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <p className=\"font-medium dark:text-white truncate\">{item.name}</p>\r\n                      </div>\r\n                    </div>\r\n                    <button\r\n                      className=\"text-gray-600 dark:text-gray-300\"\r\n                    >\r\n                      {expandedItem === item.id ? <AiOutlineUp className=\"h-5 w-5\" /> : <AiOutlineDown className=\"h-5 w-5\" />}\r\n                    </button>\r\n                  </div>\r\n\r\n                  {expandedItem === item.id && (\r\n                    <div className=\"px-4 pb-4 pt-0 border-t dark:border-gray-700\">\r\n                      <div className=\"mt-2\">\r\n                        \r\n                        <div className=\"flex justify-end space-x-2 mt-2\">\r\n                          <button\r\n                            onClick={() => handleEditClick(item)}\r\n                            className=\"bg-blue-600 text-white px-3 py-1 rounded-md text-xs flex items-center\"\r\n                          >\r\n                            <AiOutlineEdit className=\"mr-1 h-3 w-3\" /> Edit\r\n                          </button>\r\n                          <button\r\n                            onClick={() => handleDeleteZone(item.id)}\r\n                            className=\"bg-red-600 text-white px-3 py-1 rounded-md text-xs flex items-center\"\r\n                          >\r\n                            <AiOutlineDelete className=\"mr-1 h-3 w-3\" /> Delete\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        </>\r\n\r\n\r\n      )}\r\n\r\n      {/* Create Zone Modal */}\r\n      <CreateZoneModal\r\n        isOpen={isCreateModalOpen}\r\n        onClose={handleCreateModalClose}\r\n        onZoneCreated={handleZoneCreated}\r\n      />\r\n\r\n      {/* Edit Zone Modal */}\r\n      {currentZone && (\r\n        <EditZoneModal\r\n          isOpen={isEditModalOpen}\r\n          onClose={handleEditModalClose}\r\n          onZoneUpdated={handleZoneUpdated}\r\n          zoneData={currentZone}\r\n        />\r\n      )}\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Zone;","import axios from \"axios\";\r\n\r\n// let BASE_URL = \"http://35.172.211.35/api\";\r\nlet BASE_URL = \"https://rms-v2.duckdns.org/api\";\r\n\r\n\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n  console.log(\"Running in Production Mode\");\r\n  BASE_URL = \"http://35.172.211.35/api\";\r\n} else {\r\n  // BASE_URL = \"http://localhost:8000/api/v1\";\r\n  console.log(\"Running in Development Mode\");\r\n}\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: BASE_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"accessToken\");\r\n    if (token) {\r\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    // await logErrorToBackend(error);\r\n    if (error.response && error.response.status === 401) {\r\n      localStorage.clear();\r\n      window.location.href = \"/\";\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const get = async (url, params) => {\r\n  return axiosInstance.get(url, { params }).then((res) => res.data);\r\n};\r\n\r\nexport const post = async (url, data) => {\r\n  return axiosInstance.post(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const put = async (url, data) => {\r\n  return axiosInstance.put(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const patch = async (url, data) => {\r\n  return axiosInstance.patch(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const _delete = async (url) => {\r\n  return axiosInstance.delete(url).then((res) => res.data);\r\n};\r\n\r\nexport const downloadBlob = async (url, filename) => {\r\n  try {\r\n    const response = await axiosInstance.get(url, {\r\n      responseType: \"blob\",\r\n    });\r\n\r\n    const blob = new Blob([response.data], { type: \"application/pdf\" });\r\n    const blobUrl = window.URL.createObjectURL(blob);\r\n\r\n    const link = document.createElement(\"a\");\r\n    link.href = blobUrl;\r\n    link.setAttribute(\"download\", filename);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    link.remove();\r\n    window.URL.revokeObjectURL(blobUrl);\r\n  } catch (err) {\r\n    console.error(\"Download failed:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const uploadFormData = async (url, formData) => {\r\n  try {\r\n    const response = await axiosInstance.post(url, formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(\"File upload failed:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport default axiosInstance;\r\n","import React from 'react'\r\n\r\nfunction PageTitle({ children }) {\r\n  return (\r\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n"],"sourceRoot":""}